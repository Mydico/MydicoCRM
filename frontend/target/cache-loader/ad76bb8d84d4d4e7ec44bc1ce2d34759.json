{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerStatus/customer-status.reducer.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerStatus/customer-status.reducer.js","mtime":1619203469699},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9leHRyYVJlZHVjZXJzOwoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCmltcG9ydCB7IGNyZWF0ZUVudGl0eUFkYXB0ZXIsIGNyZWF0ZVNlbGVjdG9yLCBjcmVhdGVTbGljZSB9IGZyb20gJ0ByZWR1eGpzL3Rvb2xraXQnOwppbXBvcnQgeyBjcmVhdGluZ0N1c3RvbWVyU3RhdHVzIH0gZnJvbSAnLi4vY3VzdG9tZXIuYXBpJzsKaW1wb3J0IHsgZ2V0Q3VzdG9tZXJTdGF0dXMsIGdldERldGFpbEN1c3RvbWVyU3RhdHVzLCB1cGRhdGVDdXN0b21lclN0YXR1cyB9IGZyb20gJy4vY3VzdG9tZXItc3RhdHVzLmFwaSc7CnZhciBpbml0aWFsU3RhdGUgPSB7CiAgbG9hZGluZzogZmFsc2UsCiAgdXBkYXRpbmdTdWNjZXNzOiBmYWxzZQp9OwpleHBvcnQgdmFyIGN1c3RvbWVyU3RhdHVzQWRhcHRlciA9IGNyZWF0ZUVudGl0eUFkYXB0ZXIoewogIC8vIEFzc3VtZSBJRHMgYXJlIHN0b3JlZCBpbiBhIGZpZWxkIG90aGVyIHRoYW4gYGJvb2suaWRgCiAgc2VsZWN0SWQ6IGZ1bmN0aW9uIHNlbGVjdElkKGN1c3RvbWVyU3RhdHVzKSB7CiAgICByZXR1cm4gY3VzdG9tZXJTdGF0dXMuaWQ7CiAgfSwKICAvLyBLZWVwIHRoZSAiYWxsIElEcyIgYXJyYXkgc29ydGVkIGJhc2VkIG9uIGJvb2sgdGl0bGVzCiAgc29ydENvbXBhcmVyOiBmdW5jdGlvbiBzb3J0Q29tcGFyZXIoYSwgYikgewogICAgcmV0dXJuIGEubmFtZS5sb2NhbGVDb21wYXJlKGIubmFtZSk7CiAgfQp9KTsKdmFyIHNsaWNlID0gY3JlYXRlU2xpY2UoewogIG5hbWU6ICdjdXN0b21lclN0YXR1cycsCiAgaW5pdGlhbFN0YXRlOiBjdXN0b21lclN0YXR1c0FkYXB0ZXIuZ2V0SW5pdGlhbFN0YXRlKHsKICAgIGluaXRpYWxTdGF0ZTogaW5pdGlhbFN0YXRlCiAgfSksCiAgcmVkdWNlcnM6IHsKICAgIGZldGNoaW5nOiBmdW5jdGlvbiBmZXRjaGluZyhzdGF0ZSkgewogICAgICBzdGF0ZS5pbml0aWFsU3RhdGUubG9hZGluZyA9IHRydWU7CiAgICB9LAogICAgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KHN0YXRlKSB7CiAgICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgICAgIHN0YXRlLmluaXRpYWxTdGF0ZS51cGRhdGluZ1N1Y2Nlc3MgPSBmYWxzZTsKICAgIH0sCiAgICBjdXN0b21lclN0YXR1c0FkZE9uZTogY3VzdG9tZXJTdGF0dXNBZGFwdGVyLmFkZE9uZSwKICAgIGN1c3RvbWVyU3RhdHVzQWRkTWFueTogY3VzdG9tZXJTdGF0dXNBZGFwdGVyLmFkZE1hbnksCiAgICBjdXN0b21lclN0YXR1c1VwZGF0ZTogY3VzdG9tZXJTdGF0dXNBZGFwdGVyLnVwZGF0ZU9uZSwKICAgIGN1c3RvbWVyU3RhdHVzUmVtb3ZlOiBjdXN0b21lclN0YXR1c0FkYXB0ZXIucmVtb3ZlT25lCiAgfSwKICBleHRyYVJlZHVjZXJzOiAoX2V4dHJhUmVkdWNlcnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9leHRyYVJlZHVjZXJzLCBjcmVhdGluZ0N1c3RvbWVyU3RhdHVzLmZ1bGZpbGxlZCwgZnVuY3Rpb24gKHN0YXRlLCBhY3Rpb24pIHsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS51cGRhdGluZ1N1Y2Nlc3MgPSB0cnVlOwogICAgc3RhdGUuaW5pdGlhbFN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9leHRyYVJlZHVjZXJzLCBnZXREZXRhaWxDdXN0b21lclN0YXR1cy5mdWxmaWxsZWQsIGZ1bmN0aW9uIChzdGF0ZSwgYWN0aW9uKSB7CiAgICBjdXN0b21lclN0YXR1c0FkYXB0ZXIuc2V0QWxsKHN0YXRlLCBbYWN0aW9uLnBheWxvYWRdKTsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfZXh0cmFSZWR1Y2VycywgZ2V0Q3VzdG9tZXJTdGF0dXMuZnVsZmlsbGVkLCBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikgewogICAgY3VzdG9tZXJTdGF0dXNBZGFwdGVyLnNldEFsbChzdGF0ZSwgYWN0aW9uLnBheWxvYWQuZGF0YSk7CiAgICBzdGF0ZS5pbml0aWFsU3RhdGUudG90YWxJdGVtID0gYWN0aW9uLnBheWxvYWQudG90YWw7CiAgICBzdGF0ZS5pbml0aWFsU3RhdGUubG9hZGluZyA9IGZhbHNlOwogIH0pLCBfZGVmaW5lUHJvcGVydHkoX2V4dHJhUmVkdWNlcnMsIHVwZGF0ZUN1c3RvbWVyU3RhdHVzLmZ1bGZpbGxlZCwgZnVuY3Rpb24gKHN0YXRlLCBhY3Rpb24pIHsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgICBzdGF0ZS5pbml0aWFsU3RhdGUudXBkYXRpbmdTdWNjZXNzID0gdHJ1ZTsKICB9KSwgX2V4dHJhUmVkdWNlcnMpCn0pOwpleHBvcnQgZGVmYXVsdCBzbGljZS5yZWR1Y2VyOwp2YXIgX3NsaWNlJGFjdGlvbnMgPSBzbGljZS5hY3Rpb25zLAogICAgZmV0Y2hpbmcgPSBfc2xpY2UkYWN0aW9ucy5mZXRjaGluZywKICAgIHJlc2V0ID0gX3NsaWNlJGFjdGlvbnMucmVzZXQ7CmV4cG9ydCB7IGZldGNoaW5nLCByZXNldCB9OwpleHBvcnQgdmFyIGdsb2JhbGl6ZWRjdXN0b21lclN0YXR1c2VsZWN0b3JzID0gY3VzdG9tZXJTdGF0dXNBZGFwdGVyLmdldFNlbGVjdG9ycyhmdW5jdGlvbiAoc3RhdGUpIHsKICByZXR1cm4gc3RhdGUuY3VzdG9tZXJTdGF0dXM7Cn0pOw=="},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerStatus/customer-status.reducer.js"],"names":["createEntityAdapter","createSelector","createSlice","creatingCustomerStatus","getCustomerStatus","getDetailCustomerStatus","updateCustomerStatus","initialState","loading","updatingSuccess","customerStatusAdapter","selectId","customerStatus","id","sortComparer","a","b","name","localeCompare","slice","getInitialState","reducers","fetching","state","reset","customerStatusAddOne","addOne","customerStatusAddMany","addMany","customerStatusUpdate","updateOne","customerStatusRemove","removeOne","extraReducers","fulfilled","action","setAll","payload","data","totalItem","total","reducer","actions","globalizedcustomerStatuselectors","getSelectors"],"mappings":"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","sourcesContent":["import { createEntityAdapter, createSelector, createSlice } from '@reduxjs/toolkit';\nimport { creatingCustomerStatus } from '../customer.api';\nimport { getCustomerStatus, getDetailCustomerStatus, updateCustomerStatus } from './customer-status.api';\n\nconst initialState = {\n  loading: false,\n  updatingSuccess: false\n};\n\nexport const customerStatusAdapter = createEntityAdapter({\n  // Assume IDs are stored in a field other than `book.id`\n  selectId: customerStatus => customerStatus.id,\n  // Keep the \"all IDs\" array sorted based on book titles\n  sortComparer: (a, b) => a.name.localeCompare(b.name)\n});\n\nconst slice = createSlice({\n  name: 'customerStatus',\n  initialState: customerStatusAdapter.getInitialState({ initialState }),\n  reducers: {\n    fetching(state) {\n      state.initialState.loading = true;\n    },\n    reset(state) {\n      state.initialState.loading = false;\n      state.initialState.updatingSuccess = false;\n    },\n    customerStatusAddOne: customerStatusAdapter.addOne,\n    customerStatusAddMany: customerStatusAdapter.addMany,\n    customerStatusUpdate: customerStatusAdapter.updateOne,\n    customerStatusRemove: customerStatusAdapter.removeOne\n  },\n  extraReducers: {\n    [creatingCustomerStatus.fulfilled]: (state, action) => {\n      state.initialState.updatingSuccess = true;\n      state.initialState.loading = false;\n    },\n    [getDetailCustomerStatus.fulfilled]: (state, action) => {\n      customerStatusAdapter.setAll(state, [action.payload]);\n      state.initialState.loading = false;\n    },\n    [getCustomerStatus.fulfilled]: (state, action) => {\n      customerStatusAdapter.setAll(state, action.payload.data);\n      state.initialState.totalItem = action.payload.total;\n      state.initialState.loading = false;\n    },\n    [updateCustomerStatus.fulfilled]: (state, action) => {\n      state.initialState.loading = false;\n      state.initialState.updatingSuccess = true;\n    }\n  }\n});\n\nexport default slice.reducer;\nexport const { fetching, reset } = slice.actions;\n\nexport const globalizedcustomerStatuselectors = customerStatusAdapter.getSelectors(state => state.customerStatus);\n"]}]}