{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/product/ProductList/EditProduct.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/product/ProductList/EditProduct.js","mtime":1621239268504},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/product/ProductList/EditProduct.js"],"names":["React","useEffect","useRef","useState","CButton","CCard","CCardHeader","CCardBody","CCol","CForm","CInvalidFeedback","CFormGroup","CLabel","CInput","CRow","CCardTitle","CIcon","Formik","Yup","useDispatch","useSelector","getDetailProduct","updateProduct","getProductGroup","Select","useHistory","fetching","globalizedProductSelectors","globalizedproductGroupsSelectors","ProductStatus","UnitType","mappingStatus","Dropzone","CurrencyInput","getCodeByName","validationSchema","object","shape","name","string","min","required","validate","EditProduct","props","state","product","initialState","initialValues","agentPrice","barcode","code","createdBy","createdDate","desc","id","image","lastModifiedBy","lastModifiedDate","price","productBrand","productGroup","ref","images","dispatch","history","initValues","setInitValues","selectById","selectAll","match","params","initImages","setInitImages","temp","JSON","parse","e","arrRequest","map","fetch","Promise","all","then","arrRes","arr","res","arrayBuffer","buf","File","url","type","onSubmit","values","resetForm","stringify","current","getUploadParams","process","env","NODE_ENV","handleChangeStatus","status","xhr","response","push","updatingSuccess","goBack","renderProductCode","codeName","volume","setFieldValue","errors","handleChange","handleBlur","handleSubmit","item","value","label","unit","title","loading"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport {\n  CButton,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CCol,\n  CForm,\n  CInvalidFeedback,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CRow,\n\n  CCardTitle,\n} from '@coreui/react/lib';\nimport CIcon from '@coreui/icons-react/lib/CIcon';;\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getDetailProduct, updateProduct} from './product.api';\nimport {getProductGroup} from '../ProductGroup/product-group.api';\nimport Select from 'react-select';\nimport {useHistory} from 'react-router-dom';\nimport {fetching, globalizedProductSelectors} from './product.reducer';\nimport {globalizedproductGroupsSelectors} from '../ProductGroup/product-group.reducer';\nimport {ProductStatus, UnitType} from './contants';\nimport {mappingStatus} from './CreateProduct';\nimport Dropzone from 'react-dropzone-uploader';\nimport 'react-dropzone-uploader/dist/styles.css';\nimport CurrencyInput from '../../../components/currency-input/currency-input';\nimport {getCodeByName} from '../../../../shared/utils/normalize';\n\nconst validationSchema = function() {\n  return Yup.object().shape({\n    name: Yup.string()\n        .min(5, `Tên phải lớn hơn 5 kí tự`)\n        .required('Tên không để trống'),\n  });\n};\n\nimport { validate } from '../../../../shared/utils/normalize';\n\n\nconst EditProduct = (props) => {\n  const {initialState} = useSelector((state) => state.product);\n  const initialValues = {\n    agentPrice: 0,\n    barcode: '',\n    code: '',\n    createdBy: null,\n    createdDate: '',\n    desc: '',\n    id: '',\n    image: '[]',\n    lastModifiedBy: null,\n    lastModifiedDate: null,\n    name: '',\n    price: 0,\n    productBrand: null,\n    productGroup: null,\n    code: '',\n    createdBy: null,\n    createdDate: '',\n    description: null,\n    id: '',\n    lastModifiedBy: null,\n    lastModifiedDate: null,\n    name: '',\n    status: '',\n    unit: '',\n    volume: 0,\n  };\n  const ref = useRef(null);\n  const images = useRef([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [initValues, setInitValues] = useState(null);\n  const {selectById} = globalizedProductSelectors;\n  const {selectAll} = globalizedproductGroupsSelectors;\n  const product = useSelector((state) => selectById(state, props.match.params.id));\n  const [initImages, setInitImages] = useState([]);\n  const productGroup = useSelector(selectAll);\n  useEffect(() => {\n    dispatch(getDetailProduct(props.match.params.id));\n    dispatch(getProductGroup());\n  }, []);\n\n  useEffect(() => {\n    if (product) {\n      const temp = {...product};\n      temp.image = [];\n      try {\n        temp.image = JSON.parse(product.image);\n      } catch (e) {}\n      const arrRequest = temp.image?.map((image) => fetch(image));\n      Promise.all(arrRequest).then((arrRes) => {\n        const arr = arrRes.map((res) => {\n          return res?.arrayBuffer().then((buf) => {\n            return new File([buf], res.url.match(/.*\\/(.*)$/)[1], {type: 'image/jpeg'});\n          });\n        });\n        Promise.all(arr).then((res) => setInitImages(res));\n      });\n      setInitValues(temp);\n    }\n  }, [product]);\n\n  const onSubmit = (values, {resetForm}) => {\n    dispatch(fetching());\n    values.image = JSON.stringify(images.current);\n    dispatch(updateProduct(values));\n    resetForm();\n  };\n\n  const getUploadParams = () => {\n    return {url: process.env.NODE_ENV === 'development' ? 'http://localhost:8082/api/files' : 'http://localhost:8082/api/files'};\n  };\n\n  const handleChangeStatus = ({xhr}, status) => {\n    if (status === 'done') {\n      const response = JSON.parse(xhr.response);\n      const arr = [...images.current];\n      arr.push(response[0].url);\n      images.current = arr;\n    }\n  };\n\n  useEffect(() => {\n    if (initialState.updatingSuccess) {\n      history.goBack();\n    }\n  }, [initialState.updatingSuccess]);\n\n  const renderProductCode = () => {\n    const codeName = getCodeByName(ref.current.values.name);\n    const code = `${ref.current.values.productGroup?.productBrand?.code || ''}_${ref.current.values.productGroup?.code || ''}_${codeName}_${\n      ref.current.values.volume\n    }`;\n    ref.current.setFieldValue('code', `${code}`);\n  };\n  return (\n    <CCard>\n      <CCardHeader>\n        <CCardTitle>Chỉnh sửa sản phẩm</CCardTitle>\n      </CCardHeader>\n      <CCardBody>\n        <Formik\n          initialValues={initValues || initialValues}\n          innerRef={ref}\n          validate={validate(validationSchema)}\n          enableReinitialize\n          onSubmit={onSubmit}\n        >\n          {({\n            values,\n            errors,\n\n\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            setFieldValue\n\n\n            ,\n          }) => (\n            <CForm onSubmit={handleSubmit} noValidate name=\"simpleForm\">\n              <CRow>\n                <CCol lg=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"code\">Mã sản phẩm</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"code\"\n                      id=\"code\"\n                      placeholder=\"Mã sản phẩm\"\n                      disabled\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={`${values.code}`}\n                    />\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"lastName\">Tên sản phẩm</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"name\"\n                      id=\"name\"\n                      placeholder=\"Tên sản phẩm\"\n                      autoComplete=\"family-name\"\n                      invalid={errors.name}\n                      required\n                      onChange={async (e) => {\n                        await handleChange(e);\n                        renderProductCode();\n                      }}\n                      onBlur={handleBlur}\n                      value={values.name}\n                    />\n                    <CInvalidFeedback>{errors.name}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"userName\">Mô tả</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"desc\"\n                      id=\"desc\"\n                      placeholder=\"Mô tả\"\n                      autoComplete=\"desc\"\n                      invalid={errors.desc}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.desc}\n                    />\n                    <CInvalidFeedback>{errors.desc}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"productGroup\">Nhóm sản phẩm</CLabel>\n                    <Select\n                      name=\"productGroup\"\n                      onChange={async (item) => {\n                        await setFieldValue('productGroup', item.value);\n                        renderProductCode();\n                      }}\n                      value={{\n                        value: values.productGroup,\n                        label: `${values.productGroup?.productBrand?.name} - ${values.productGroup?.name}`,\n                      }}\n                      options={productGroup.map((item) => ({\n                        value: item,\n                        label: `${item.productBrand?.name} - ${item.name}`,\n                      }))}\n                    />\n                    <CInvalidFeedback>{errors.productGroup}</CInvalidFeedback>\n                  </CFormGroup>\n                </CCol>\n                <CCol lg=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"password\">Giá đại lý</CLabel>\n                    <CurrencyInput name=\"agentPrice\" handleChange={handleChange} />\n                    <CInvalidFeedback className=\"d-block\">{errors.agentPrice}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"password\">Giá Salon</CLabel>\n                    <CurrencyInput name=\"price\" handleChange={handleChange} />\n                    <CInvalidFeedback className=\"d-block\">{errors.price}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"volume\">Dung tích</CLabel>\n                    <CInput\n                      type=\"number\"\n                      name=\"volume\"\n                      id=\"volume\"\n                      placeholder=\"Dung tích\"\n                      autoComplete=\"volume\"\n                      onChange={async (e) => {\n                        await handleChange(e);\n                        renderProductCode();\n                      }}\n                      valid={errors.volume}\n                      onBlur={handleBlur}\n                      value={values.volume}\n                    />\n                    <CInvalidFeedback className=\"d-block\">{errors.volume}</CInvalidFeedback>\n                  </CFormGroup>\n\n                  <CFormGroup>\n                    <CLabel htmlFor=\"userName\">Đơn vị</CLabel>\n                    <Select\n                      name=\"unit\"\n                      onChange={(item) => {\n                        setFieldValue('unit', item.value);\n                      }}\n                      value={{\n                        value: values.unit,\n                        label: values.unit,\n                      }}\n                      options={UnitType.map((item) => ({\n                        value: item.value,\n                        label: `${item.title}`,\n                      }))}\n                    />\n                    <CInvalidFeedback className=\"d-block\">{errors.type}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"code\">Trạng thái</CLabel>\n                    <Select\n                      name=\"status\"\n                      onChange={(item) => {\n                        setFieldValue('status', item.value);\n                      }}\n                      value={{\n                        value: values.status,\n                        label: mappingStatus[values.status],\n                      }}\n                      options={ProductStatus.map((item) => ({\n                        value: item.value,\n                        label: item.title,\n                      }))}\n                    />\n                    <CInvalidFeedback className=\"d-block\">{errors.status}</CInvalidFeedback>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CFormGroup>\n                <Dropzone\n                  getUploadParams={getUploadParams}\n                  onChangeStatus={handleChangeStatus}\n                  accept=\"image/*,audio/*,video/*\"\n                  inputLabel=\"Upload Ảnh\"\n                  inputContent=\"Kéo thả hình ảnh hoặc bấm để chọn ảnh\"\n                  submitButtonContent=\"Hoàn thành\"\n                  inputWithFilesContent=\"Thêm file\"\n                  initialFiles={initImages}\n                />\n              </CFormGroup>\n              <CFormGroup className=\"d-flex justify-content-center\">\n                <CButton type=\"submit\" color=\"primary\" disabled={initialState.loading}>\n                  <CIcon name=\"cil-save\" /> {initialState.loading ? 'Đang xử lý' : 'Lưu thay đổi'}\n                </CButton>\n              </CFormGroup>\n            </CForm>\n          )}\n        </Formik>\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default EditProduct;\n"]}]}