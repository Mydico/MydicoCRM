{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerStatus/CustomerStatus.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerStatus/CustomerStatus.js","mtime":1621611489553},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerStatus/CustomerStatus.js"],"names":["React","useEffect","useState","CCardBody","CBadge","CButton","CCollapse","CDataTable","CCard","CCardHeader","CPagination","CIcon","useDispatch","useSelector","useHistory","getCustomerStatus","globalizedcustomerStatuselectors","reset","CustomerStatus","props","details","setDetails","state","authentication","account","isAdmin","authorities","filter","item","length","customerStatus","initialState","activePage","setActivePage","size","setSize","dispatch","history","selectAll","customerStatuses","page","sort","toggleDetails","index","position","indexOf","newDetails","slice","splice","fields","key","label","_style","width","getBadge","status","csvContent","map","Object","values","join","csvCode","encodeURIComponent","toCreateCustomer","push","match","url","onFilterColumn","value","keys","toEditCustomerStatus","statusId","role","rol","method","entity","val","console","log","order","show_details","id","includes","name","description","Math","floor","totalItem","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { CCardBody, CBadge, CButton, CCollapse, CDataTable, CCard, CCardHeader, CPagination } from '@coreui/react/lib';\nimport CIcon from '@coreui/icons-react/lib/CIcon';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { getCustomerStatus } from '../customer.api.js';\nimport { useHistory } from 'react-router-dom';\nimport { getCustomerStatus } from './customer-status.api.js';\nimport { globalizedcustomerStatuselectors, reset } from './customer-status.reducer.js';\n\nconst CustomerStatus = props => {\n  const [details, setDetails] = useState([]);\n  const { account } = useSelector(state => state.authentication);\n  const isAdmin = account.authorities.filter(item => item === 'ROLE_ADMIN').length > 0;\n  const { initialState } = useSelector(state => state.customerStatus);\n  const [activePage, setActivePage] = useState(1);\n  const [size, setSize] = useState(20);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { selectAll } = globalizedcustomerStatuselectors;\n  const customerStatuses = useSelector(selectAll);\n  useEffect(() => {\n    dispatch(reset());\n  }, []);\n\n  useEffect(() => {\n    dispatch(getCustomerStatus({ page: activePage - 1, size: size, sort: 'createdDate,desc' }));\n  }, [activePage, size]);\n\n  const toggleDetails = index => {\n    const position = details.indexOf(index);\n    let newDetails = details.slice();\n    if (position !== -1) {\n      newDetails.splice(position, 1);\n    } else {\n      newDetails = [...details, index];\n    }\n    setDetails(newDetails);\n  };\n\n  // Code\tTên cửa hàng/đại lý\tNgười liên lạc\tNăm Sinh\tĐiện thoại\tNhân viên quản lý\tLoại khách hàng\tPhân loại\tSửa\tTạo đơn\n  const fields = [\n    {\n      key: 'order',\n      label: 'STT',\n      _style: { width: '1%' },\n      filter: false\n    },\n    { key: 'name', label: 'Tên trạng thái', _style: { width: '15%' } },\n    { key: 'description', label: 'Mô tả', _style: { width: '15%' } },\n    {\n      key: 'show_details',\n      label: '',\n      _style: { width: '1%' },\n      filter: false\n    }\n  ];\n\n  const getBadge = status => {\n    switch (status) {\n      case 'Active':\n        return 'success';\n      case 'Inactive':\n        return 'secondary';\n      case 'Pending':\n        return 'warning';\n      case 'Banned':\n        return 'danger';\n      default:\n        return 'primary';\n    }\n  };\n  const [,] = useState([]);\n  const csvContent = customerStatuses.map(item => Object.values(item).join(',')).join('\\n');\n  const csvCode = 'data:text/csv;charset=utf-8,SEP=,%0A' + encodeURIComponent(csvContent);\n  const toCreateCustomer = () => {\n    history.push(`${props.match.url}/new`);\n  };\n\n  const onFilterColumn = value => {\n    if (Object.keys(value).length > 0) {\n      dispatch(getCustomerStatus({ page: 0, size: size, sort: 'createdDate,desc', ...value }));\n    }\n  };\n\n  const toEditCustomerStatus = statusId => {\n    history.push(`${props.match.url}/${statusId}/edit`);\n  };\n\n  return (\n    <CCard>\n      <CCardHeader>\n        <CIcon name=\"cil-grid\" /> Danh sách trạng thái khách hàng\n        {(isAdmin || account.role.filter(rol => rol.method === 'POST' && rol.entity === '/api/customer-statuses').length > 0) && (\n          <CButton color=\"success\" variant=\"outline\" className=\"ml-3\" onClick={toCreateCustomer}>\n            <CIcon name=\"cil-plus\" /> Thêm mới\n          </CButton>\n        )}\n      </CCardHeader>\n      <CCardBody>\n        <CButton color=\"primary\" className=\"mb-2\" href={csvCode} download=\"coreui-table-data.csv\" target=\"_blank\">\n          Tải excel (.csv)\n        </CButton>\n        <CDataTable\n          items={customerStatuses}\n          fields={fields}\n          columnFilter\n          tableFilter\n          cleaner\n          itemsPerPageSelect={{ label: 'Số lượng trên một trang', values: [20, 30, 50] }}\n          itemsPerPage={size}\n          hover\n          sorter\n          // loading\n          // onRowClick={(item,index,col,e) => console.log(item,index,col,e)}\n          onPageChange={val => console.log('new page:', val)}\n          onPagesChange={val => console.log('new pages:', val)}\n          onPaginationChange={val => setSize(val)}\n          // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\n          // onSorterValueChange={(val) => console.log('new sorter value:', val)}\n          onTableFilterChange={val => console.log('new table filter:', val)}\n          onColumnFilterChange={onFilterColumn}\n          scopedSlots={{\n            order: (item, index) => <td>{index + 1}</td>,\n            status: item => (\n              <td>\n                <CBadge color={getBadge(item.status)}>{item.status}</CBadge>\n              </td>\n            ),\n            show_details: item => {\n              return (\n                <td className=\"d-flex py-2\">\n                  {(isAdmin || account.role.filter(rol => rol.method === 'PUT' && rol.entity === '/api/customer-statuses').length > 0) && (\n                    <CButton\n                      color=\"primary\"\n                      variant=\"outline\"\n                      shape=\"square\"\n                      size=\"sm\"\n                      className=\"mr-3\"\n                      onClick={() => {\n                        toEditCustomerStatus(item.id);\n                      }}\n                    >\n                      <CIcon name=\"cil-pencil\" />\n                    </CButton>\n                  )}\n                  <CButton\n                    color=\"primary\"\n                    variant=\"outline\"\n                    shape=\"square\"\n                    size=\"sm\"\n                    onClick={() => {\n                      toggleDetails(item.id);\n                    }}\n                  >\n                    <CIcon name=\"cil-user\" />\n                  </CButton>\n                </td>\n              );\n            },\n            details: item => {\n              return (\n                <CCollapse show={details.includes(item.id)}>\n                  <CCardBody>\n                    <h5>Thông tin trạng thái khách hàng</h5>\n                    <dl className=\"row\">\n                      <dt className=\"col-sm-2\">Tên trạng thái khách hàng:</dt>\n                      <dd className=\"col-sm-9\">{item.name}</dd>\n                    </dl>\n                    <dl className=\"row\">\n                      <dt className=\"col-sm-2\">Mô tả:</dt>\n                      <dd className=\"col-sm-9\">{item.description}</dd>\n                    </dl>\n                  </CCardBody>\n                </CCollapse>\n              );\n            }\n          }}\n        />\n        <CPagination\n          activePage={activePage}\n          pages={Math.floor(initialState.totalItem / size) + 1}\n          onActivePageChange={i => setActivePage(i)}\n        />\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default CustomerStatus;\n"]}]}