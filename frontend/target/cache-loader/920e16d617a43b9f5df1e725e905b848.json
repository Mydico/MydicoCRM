{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/components/charts/MainChartExample.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/components/charts/MainChartExample.js","mtime":1621018037950},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0KCmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCB7IENDaGFydExpbmUgfSBmcm9tICdAY29yZXVpL3JlYWN0LWNoYXJ0anMnOwppbXBvcnQgeyBnZXRTdHlsZSwgaGV4VG9SZ2JhIH0gZnJvbSAnQGNvcmV1aS91dGlscyc7Cgp2YXIgTWFpbkNoYXJ0ID0gZnVuY3Rpb24gTWFpbkNoYXJ0KGF0dHJpYnV0ZXMpIHsKICB2YXIgZGVmYXVsdERhdGFzZXRzID0gZnVuY3Rpb24gKCkgewogICAgdmFyIGRhdGEgPSBhdHRyaWJ1dGVzLmRhdGEgPyBPYmplY3QudmFsdWVzKGF0dHJpYnV0ZXMuZGF0YSkgOiBbXTsKICAgIHJldHVybiBbewogICAgICBsYWJlbDogYXR0cmlidXRlcy5uYW1lLAogICAgICBiYWNrZ3JvdW5kQ29sb3I6IGhleFRvUmdiYShhdHRyaWJ1dGVzLmNvbG9yLCAxMCksCiAgICAgIGJvcmRlckNvbG9yOiBhdHRyaWJ1dGVzLmNvbG9yLAogICAgICBwb2ludEhvdmVyQmFja2dyb3VuZENvbG9yOiBhdHRyaWJ1dGVzLmNvbG9yLAogICAgICBib3JkZXJXaWR0aDogMiwKICAgICAgZGF0YTogZGF0YQogICAgfV07CiAgfSgpOwoKICB2YXIgZGVmYXVsdE9wdGlvbnMgPSBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gewogICAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSwKICAgICAgbGVnZW5kOiB7CiAgICAgICAgZGlzcGxheTogdHJ1ZQogICAgICB9LAogICAgICBzY2FsZXM6IHsKICAgICAgICB4QXhlczogW3sKICAgICAgICAgIGJlZ2luQXRaZXJvOiBmYWxzZSwKICAgICAgICAgIHRpY2tzOiB7CiAgICAgICAgICAgIGF1dG9Ta2lwOiBmYWxzZQogICAgICAgICAgfSwKICAgICAgICAgIGdyaWRMaW5lczogewogICAgICAgICAgICBkcmF3T25DaGFydEFyZWE6IGZhbHNlCiAgICAgICAgICB9CiAgICAgICAgfV0sCiAgICAgICAgeUF4ZXM6IFt7CiAgICAgICAgICB0aWNrczogewogICAgICAgICAgICBiZWdpbkF0WmVybzogZmFsc2UsCiAgICAgICAgICAgIG1heFRpY2tzTGltaXQ6IDUsCiAgICAgICAgICAgIHN0ZXBTaXplOiBNYXRoLmNlaWwoMjUwIC8gNSkKICAgICAgICAgIH0sCiAgICAgICAgICBncmlkTGluZXM6IHsKICAgICAgICAgICAgZGlzcGxheTogdHJ1ZQogICAgICAgICAgfQogICAgICAgIH1dCiAgICAgIH0sCiAgICAgIGVsZW1lbnRzOiB7CiAgICAgICAgcG9pbnQ6IHsKICAgICAgICAgIHJhZGl1czogMCwKICAgICAgICAgIGhpdFJhZGl1czogMTAsCiAgICAgICAgICBob3ZlclJhZGl1czogNCwKICAgICAgICAgIGhvdmVyQm9yZGVyV2lkdGg6IDMKICAgICAgICB9CiAgICAgIH0KICAgIH07CiAgfSgpOyAvLyByZW5kZXIKCgogIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDQ2hhcnRMaW5lLCBfZXh0ZW5kcyh7fSwgYXR0cmlidXRlcywgewogICAgZGF0YXNldHM6IGRlZmF1bHREYXRhc2V0cywKICAgIG9wdGlvbnM6IGRlZmF1bHRPcHRpb25zLAogICAgbGFiZWxzOiBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzLmRhdGEpCiAgfSkpOwp9OwoKZXhwb3J0IGRlZmF1bHQgTWFpbkNoYXJ0Ow=="},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/components/charts/MainChartExample.js"],"names":["React","CChartLine","getStyle","hexToRgba","MainChart","attributes","defaultDatasets","data","Object","values","label","name","backgroundColor","color","borderColor","pointHoverBackgroundColor","borderWidth","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","beginAtZero","ticks","autoSkip","gridLines","drawOnChartArea","yAxes","maxTicksLimit","stepSize","Math","ceil","elements","point","radius","hitRadius","hoverRadius","hoverBorderWidth","keys"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,eAApC;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,UAAU,EAAI;AAG9B,MAAMC,eAAe,GAAI,YAAM;AAC7B,QAAMC,IAAI,GAAGF,UAAU,CAACE,IAAX,GAAkBC,MAAM,CAACC,MAAP,CAAcJ,UAAU,CAACE,IAAzB,CAAlB,GAAmD,EAAhE;AACA,WAAO,CACL;AACEG,MAAAA,KAAK,EAAEL,UAAU,CAACM,IADpB;AAEEC,MAAAA,eAAe,EAAET,SAAS,CAACE,UAAU,CAACQ,KAAZ,EAAmB,EAAnB,CAF5B;AAGEC,MAAAA,WAAW,EAAET,UAAU,CAACQ,KAH1B;AAIEE,MAAAA,yBAAyB,EAAEV,UAAU,CAACQ,KAJxC;AAKEG,MAAAA,WAAW,EAAE,CALf;AAMET,MAAAA,IAAI,EAAEA;AANR,KADK,CAAP;AAUD,GAZuB,EAAxB;;AAcA,MAAMU,cAAc,GAAI,YAAM;AAC5B,WAAO;AACLC,MAAAA,mBAAmB,EAAE,KADhB;AAELC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AADH,OAFH;AAKLC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,WAAW,EAAE,KADf;AAEEC,UAAAA,KAAK,EAAE;AACJC,YAAAA,QAAQ,EAAE;AADN,WAFT;AAKEC,UAAAA,SAAS,EAAE;AACTC,YAAAA,eAAe,EAAE;AADR;AALb,SADK,CADD;AAYNC,QAAAA,KAAK,EAAE,CACL;AACEJ,UAAAA,KAAK,EAAE;AACLD,YAAAA,WAAW,EAAE,KADR;AAELM,YAAAA,aAAa,EAAE,CAFV;AAGLC,YAAAA,QAAQ,EAAEC,IAAI,CAACC,IAAL,CAAU,MAAM,CAAhB;AAHL,WADT;AAMEN,UAAAA,SAAS,EAAE;AACTN,YAAAA,OAAO,EAAE;AADA;AANb,SADK;AAZD,OALH;AA8BLa,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAE,CADH;AAELC,UAAAA,SAAS,EAAE,EAFN;AAGLC,UAAAA,WAAW,EAAE,CAHR;AAILC,UAAAA,gBAAgB,EAAE;AAJb;AADC;AA9BL,KAAP;AAuCD,GAxCsB,EAAvB,CAjB8B,CA2D9B;;;AACA,sBACE,oBAAC,UAAD,eACMjC,UADN;AAEE,IAAA,QAAQ,EAAEC,eAFZ;AAGE,IAAA,OAAO,EAAEW,cAHX;AAIE,IAAA,MAAM,EAAET,MAAM,CAAC+B,IAAP,CAAYlC,UAAU,CAACE,IAAvB;AAJV,KADF;AAQD,CApED;;AAsEA,eAAeH,SAAf","sourcesContent":["import React from 'react';\nimport { CChartLine } from '@coreui/react-chartjs';\nimport { getStyle, hexToRgba } from '@coreui/utils';\n\n\n\nconst MainChart = attributes => {\n  \n\n  const defaultDatasets = (() => {\n    const data = attributes.data ? Object.values(attributes.data) : [];\n    return [\n      {\n        label: attributes.name,\n        backgroundColor: hexToRgba(attributes.color, 10),\n        borderColor: attributes.color,\n        pointHoverBackgroundColor: attributes.color,\n        borderWidth: 2,\n        data: data\n      },\n    ];\n  })();\n\n  const defaultOptions = (() => {\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: true\n      },\n      scales: {\n        xAxes: [\n          {\n            beginAtZero: false,\n            ticks: {\n               autoSkip: false\n            },\n            gridLines: {\n              drawOnChartArea: false\n            }\n          }\n        ],\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: false,\n              maxTicksLimit: 5,\n              stepSize: Math.ceil(250 / 5),\n            },\n            gridLines: {\n              display: true\n            }\n          }\n        ]\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4,\n          hoverBorderWidth: 3\n        }\n      }\n    };\n  })();\n\n  // render\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={Object.keys(attributes.data)}\n    />\n  );\n};\n\nexport default MainChart;\n"]}]}