{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerType/customer-type.reducer.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerType/customer-type.reducer.js","mtime":1621533489582},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9leHRyYVJlZHVjZXJzOwoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCmltcG9ydCB7IGNyZWF0ZUVudGl0eUFkYXB0ZXIsIGNyZWF0ZVNsaWNlIH0gZnJvbSAnQHJlZHV4anMvdG9vbGtpdCc7CmltcG9ydCB7IGdldEN1c3RvbWVyVHlwZSwgZ2V0RGV0YWlsQ3VzdG9tZXJUeXBlLCB1cGRhdGVDdXN0b21lclR5cGUsIGNyZWF0aW5nQ3VzdG9tZXJUeXBlIH0gZnJvbSAnLi9jdXN0b21lci10eXBlLmFwaSc7CnZhciBpbml0aWFsU3RhdGUgPSB7CiAgbG9hZGluZzogZmFsc2UsCiAgdXBkYXRpbmdTdWNjZXNzOiBmYWxzZQp9OwpleHBvcnQgdmFyIGN1c3RvbWVyVHlwZUFkYXB0ZXIgPSBjcmVhdGVFbnRpdHlBZGFwdGVyKHsKICAvLyBBc3N1bWUgSURzIGFyZSBzdG9yZWQgaW4gYSBmaWVsZCBvdGhlciB0aGFuIGBib29rLmlkYAogIHNlbGVjdElkOiBmdW5jdGlvbiBzZWxlY3RJZChjdXN0b21lclR5cGUpIHsKICAgIHJldHVybiBjdXN0b21lclR5cGUuaWQ7CiAgfSwKICAvLyBLZWVwIHRoZSAiYWxsIElEcyIgYXJyYXkgc29ydGVkIGJhc2VkIG9uIGJvb2sgdGl0bGVzCiAgc29ydENvbXBhcmVyOiBmdW5jdGlvbiBzb3J0Q29tcGFyZXIoYSwgYikgewogICAgcmV0dXJuIGEubmFtZS5sb2NhbGVDb21wYXJlKGIubmFtZSk7CiAgfQp9KTsKdmFyIHNsaWNlID0gY3JlYXRlU2xpY2UoewogIG5hbWU6ICdjdXN0b21lclR5cGUnLAogIGluaXRpYWxTdGF0ZTogY3VzdG9tZXJUeXBlQWRhcHRlci5nZXRJbml0aWFsU3RhdGUoewogICAgaW5pdGlhbFN0YXRlOiBpbml0aWFsU3RhdGUKICB9KSwKICByZWR1Y2VyczogewogICAgZmV0Y2hpbmc6IGZ1bmN0aW9uIGZldGNoaW5nKHN0YXRlKSB7CiAgICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gdHJ1ZTsKICAgIH0sCiAgICByZXNldDogZnVuY3Rpb24gcmVzZXQoc3RhdGUpIHsKICAgICAgc3RhdGUuaW5pdGlhbFN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgc3RhdGUuaW5pdGlhbFN0YXRlLnVwZGF0aW5nU3VjY2VzcyA9IGZhbHNlOwogICAgfSwKICAgIGN1c3RvbWVyVHlwZUFkZE9uZTogY3VzdG9tZXJUeXBlQWRhcHRlci5hZGRPbmUsCiAgICBjdXN0b21lclR5cGVBZGRNYW55OiBjdXN0b21lclR5cGVBZGFwdGVyLmFkZE1hbnksCiAgICBjdXN0b21lclR5cGVVcGRhdGU6IGN1c3RvbWVyVHlwZUFkYXB0ZXIudXBkYXRlT25lLAogICAgY3VzdG9tZXJUeXBlUmVtb3ZlOiBjdXN0b21lclR5cGVBZGFwdGVyLnJlbW92ZU9uZQogIH0sCiAgZXh0cmFSZWR1Y2VyczogKF9leHRyYVJlZHVjZXJzID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfZXh0cmFSZWR1Y2VycywgY3JlYXRpbmdDdXN0b21lclR5cGUuZnVsZmlsbGVkLCBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikgewogICAgc3RhdGUuaW5pdGlhbFN0YXRlLnVwZGF0aW5nU3VjY2VzcyA9IHRydWU7CiAgICBzdGF0ZS5pbml0aWFsU3RhdGUubG9hZGluZyA9IGZhbHNlOwogIH0pLCBfZGVmaW5lUHJvcGVydHkoX2V4dHJhUmVkdWNlcnMsIGNyZWF0aW5nQ3VzdG9tZXJUeXBlLnJlamVjdGVkLCBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikgewogICAgc3RhdGUuaW5pdGlhbFN0YXRlLnVwZGF0aW5nU3VjY2VzcyA9IGZhbHNlOwogICAgc3RhdGUuaW5pdGlhbFN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9leHRyYVJlZHVjZXJzLCBnZXREZXRhaWxDdXN0b21lclR5cGUuZnVsZmlsbGVkLCBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikgewogICAgY3VzdG9tZXJUeXBlQWRhcHRlci5zZXRBbGwoc3RhdGUsIFthY3Rpb24ucGF5bG9hZF0pOwogICAgc3RhdGUuaW5pdGlhbFN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9leHRyYVJlZHVjZXJzLCBnZXRDdXN0b21lclR5cGUuZnVsZmlsbGVkLCBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikgewogICAgY3VzdG9tZXJUeXBlQWRhcHRlci5zZXRBbGwoc3RhdGUsIGFjdGlvbi5wYXlsb2FkLmRhdGEpOwogICAgc3RhdGUuaW5pdGlhbFN0YXRlLnRvdGFsSXRlbSA9IGFjdGlvbi5wYXlsb2FkLnRvdGFsOwogICAgc3RhdGUuaW5pdGlhbFN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9leHRyYVJlZHVjZXJzLCB1cGRhdGVDdXN0b21lclR5cGUuZnVsZmlsbGVkLCBmdW5jdGlvbiAoc3RhdGUpIHsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgICBzdGF0ZS5pbml0aWFsU3RhdGUudXBkYXRpbmdTdWNjZXNzID0gdHJ1ZTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9leHRyYVJlZHVjZXJzLCB1cGRhdGVDdXN0b21lclR5cGUucmVqZWN0ZWQsIGZ1bmN0aW9uIChzdGF0ZSkgewogICAgc3RhdGUuaW5pdGlhbFN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS51cGRhdGluZ1N1Y2Nlc3MgPSB0cnVlOwogIH0pLCBfZXh0cmFSZWR1Y2VycykKfSk7CmV4cG9ydCBkZWZhdWx0IHNsaWNlLnJlZHVjZXI7CnZhciBfc2xpY2UkYWN0aW9ucyA9IHNsaWNlLmFjdGlvbnMsCiAgICBmZXRjaGluZyA9IF9zbGljZSRhY3Rpb25zLmZldGNoaW5nLAogICAgcmVzZXQgPSBfc2xpY2UkYWN0aW9ucy5yZXNldDsKZXhwb3J0IHsgZmV0Y2hpbmcsIHJlc2V0IH07CmV4cG9ydCB2YXIgZ2xvYmFsaXplZGN1c3RvbWVyVHlwZVNlbGVjdG9ycyA9IGN1c3RvbWVyVHlwZUFkYXB0ZXIuZ2V0U2VsZWN0b3JzKGZ1bmN0aW9uIChzdGF0ZSkgewogIHJldHVybiBzdGF0ZS5jdXN0b21lclR5cGU7Cn0pOw=="},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerType/customer-type.reducer.js"],"names":["createEntityAdapter","createSlice","getCustomerType","getDetailCustomerType","updateCustomerType","creatingCustomerType","initialState","loading","updatingSuccess","customerTypeAdapter","selectId","customerType","id","sortComparer","a","b","name","localeCompare","slice","getInitialState","reducers","fetching","state","reset","customerTypeAddOne","addOne","customerTypeAddMany","addMany","customerTypeUpdate","updateOne","customerTypeRemove","removeOne","extraReducers","fulfilled","action","rejected","setAll","payload","data","totalItem","total","reducer","actions","globalizedcustomerTypeSelectors","getSelectors"],"mappings":";;;;AAAA,SAAQA,mBAAR,EAA6BC,WAA7B,QAA+C,kBAA/C;AACA,SAAQC,eAAR,EAAyBC,qBAAzB,EAAgDC,kBAAhD,EAAoEC,oBAApE,QAA+F,qBAA/F;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,eAAe,EAAE;AAFE,CAArB;AAKA,OAAO,IAAMC,mBAAmB,GAAGT,mBAAmB,CAAC;AACrD;AACAU,EAAAA,QAAQ,EAAE,kBAACC,YAAD;AAAA,WAAkBA,YAAY,CAACC,EAA/B;AAAA,GAF2C;AAGrD;AACAC,EAAAA,YAAY,EAAE,sBAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUD,CAAC,CAACE,IAAF,CAAOC,aAAP,CAAqBF,CAAC,CAACC,IAAvB,CAAV;AAAA;AAJuC,CAAD,CAA/C;AAOP,IAAME,KAAK,GAAGjB,WAAW,CAAC;AACxBe,EAAAA,IAAI,EAAE,cADkB;AAExBV,EAAAA,YAAY,EAAEG,mBAAmB,CAACU,eAApB,CAAoC;AAACb,IAAAA,YAAY,EAAZA;AAAD,GAApC,CAFU;AAGxBc,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QADQ,oBACCC,KADD,EACQ;AACdA,MAAAA,KAAK,CAAChB,YAAN,CAAmBC,OAAnB,GAA6B,IAA7B;AACD,KAHO;AAIRgB,IAAAA,KAJQ,iBAIFD,KAJE,EAIK;AACXA,MAAAA,KAAK,CAAChB,YAAN,CAAmBC,OAAnB,GAA6B,KAA7B;AACAe,MAAAA,KAAK,CAAChB,YAAN,CAAmBE,eAAnB,GAAqC,KAArC;AACD,KAPO;AAQRgB,IAAAA,kBAAkB,EAAEf,mBAAmB,CAACgB,MARhC;AASRC,IAAAA,mBAAmB,EAAEjB,mBAAmB,CAACkB,OATjC;AAURC,IAAAA,kBAAkB,EAAEnB,mBAAmB,CAACoB,SAVhC;AAWRC,IAAAA,kBAAkB,EAAErB,mBAAmB,CAACsB;AAXhC,GAHc;AAgBxBC,EAAAA,aAAa,wDACV3B,oBAAoB,CAAC4B,SADX,EACuB,UAACX,KAAD,EAAQY,MAAR,EAAmB;AACnDZ,IAAAA,KAAK,CAAChB,YAAN,CAAmBE,eAAnB,GAAqC,IAArC;AACAc,IAAAA,KAAK,CAAChB,YAAN,CAAmBC,OAAnB,GAA6B,KAA7B;AACD,GAJU,mCAKVF,oBAAoB,CAAC8B,QALX,EAKsB,UAACb,KAAD,EAAQY,MAAR,EAAmB;AAClDZ,IAAAA,KAAK,CAAChB,YAAN,CAAmBE,eAAnB,GAAqC,KAArC;AACAc,IAAAA,KAAK,CAAChB,YAAN,CAAmBC,OAAnB,GAA6B,KAA7B;AACD,GARU,mCASVJ,qBAAqB,CAAC8B,SATZ,EASwB,UAACX,KAAD,EAAQY,MAAR,EAAmB;AACpDzB,IAAAA,mBAAmB,CAAC2B,MAApB,CAA2Bd,KAA3B,EAAkC,CAACY,MAAM,CAACG,OAAR,CAAlC;AACAf,IAAAA,KAAK,CAAChB,YAAN,CAAmBC,OAAnB,GAA6B,KAA7B;AACD,GAZU,mCAaVL,eAAe,CAAC+B,SAbN,EAakB,UAACX,KAAD,EAAQY,MAAR,EAAmB;AAC9CzB,IAAAA,mBAAmB,CAAC2B,MAApB,CAA2Bd,KAA3B,EAAkCY,MAAM,CAACG,OAAP,CAAeC,IAAjD;AACAhB,IAAAA,KAAK,CAAChB,YAAN,CAAmBiC,SAAnB,GAA+BL,MAAM,CAACG,OAAP,CAAeG,KAA9C;AACAlB,IAAAA,KAAK,CAAChB,YAAN,CAAmBC,OAAnB,GAA6B,KAA7B;AACD,GAjBU,mCAkBVH,kBAAkB,CAAC6B,SAlBT,EAkBqB,UAACX,KAAD,EAAY;AAC1CA,IAAAA,KAAK,CAAChB,YAAN,CAAmBC,OAAnB,GAA6B,KAA7B;AACAe,IAAAA,KAAK,CAAChB,YAAN,CAAmBE,eAAnB,GAAqC,IAArC;AACD,GArBU,mCAsBVJ,kBAAkB,CAAC+B,QAtBT,EAsBoB,UAAAb,KAAK,EAAI;AACtCA,IAAAA,KAAK,CAAChB,YAAN,CAAmBC,OAAnB,GAA6B,KAA7B;AACAe,IAAAA,KAAK,CAAChB,YAAN,CAAmBE,eAAnB,GAAqC,IAArC;AACD,GAzBU;AAhBW,CAAD,CAAzB;AA6CA,eAAeU,KAAK,CAACuB,OAArB;qBACiCvB,KAAK,CAACwB,O;IAAzBrB,Q,kBAAAA,Q;IAAUE,K,kBAAAA,K;;AAExB,OAAO,IAAMoB,+BAA+B,GAAGlC,mBAAmB,CAACmC,YAApB,CAAiC,UAACtB,KAAD;AAAA,SAAWA,KAAK,CAACX,YAAjB;AAAA,CAAjC,CAAxC","sourcesContent":["import {createEntityAdapter, createSlice} from '@reduxjs/toolkit';\nimport {getCustomerType, getDetailCustomerType, updateCustomerType, creatingCustomerType} from './customer-type.api';\n\nconst initialState = {\n  loading: false,\n  updatingSuccess: false,\n};\n\nexport const customerTypeAdapter = createEntityAdapter({\n  // Assume IDs are stored in a field other than `book.id`\n  selectId: (customerType) => customerType.id,\n  // Keep the \"all IDs\" array sorted based on book titles\n  sortComparer: (a, b) => a.name.localeCompare(b.name),\n});\n\nconst slice = createSlice({\n  name: 'customerType',\n  initialState: customerTypeAdapter.getInitialState({initialState}),\n  reducers: {\n    fetching(state) {\n      state.initialState.loading = true;\n    },\n    reset(state) {\n      state.initialState.loading = false;\n      state.initialState.updatingSuccess = false;\n    },\n    customerTypeAddOne: customerTypeAdapter.addOne,\n    customerTypeAddMany: customerTypeAdapter.addMany,\n    customerTypeUpdate: customerTypeAdapter.updateOne,\n    customerTypeRemove: customerTypeAdapter.removeOne,\n  },\n  extraReducers: {\n    [creatingCustomerType.fulfilled]: (state, action) => {\n      state.initialState.updatingSuccess = true;\n      state.initialState.loading = false;\n    },\n    [creatingCustomerType.rejected]: (state, action) => {\n      state.initialState.updatingSuccess = false;\n      state.initialState.loading = false;\n    },\n    [getDetailCustomerType.fulfilled]: (state, action) => {\n      customerTypeAdapter.setAll(state, [action.payload]);\n      state.initialState.loading = false;\n    },\n    [getCustomerType.fulfilled]: (state, action) => {\n      customerTypeAdapter.setAll(state, action.payload.data);\n      state.initialState.totalItem = action.payload.total;\n      state.initialState.loading = false;\n    },\n    [updateCustomerType.fulfilled]: (state ) => {\n      state.initialState.loading = false;\n      state.initialState.updatingSuccess = true;\n    },\n    [updateCustomerType.rejected]: state => {\n      state.initialState.loading = false;\n      state.initialState.updatingSuccess = true;\n    },\n  },\n});\n\nexport default slice.reducer;\nexport const {fetching, reset} = slice.actions;\n\nexport const globalizedcustomerTypeSelectors = customerTypeAdapter.getSelectors((state) => state.customerType);\n"]}]}