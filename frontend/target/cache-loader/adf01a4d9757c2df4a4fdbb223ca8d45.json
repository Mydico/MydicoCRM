{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerType/customer-type.reducer.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerType/customer-type.reducer.js","mtime":1619203469808},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9leHRyYVJlZHVjZXJzOwoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCmltcG9ydCB7IGNyZWF0ZUVudGl0eUFkYXB0ZXIsIGNyZWF0ZVNlbGVjdG9yLCBjcmVhdGVTbGljZSB9IGZyb20gJ0ByZWR1eGpzL3Rvb2xraXQnOwppbXBvcnQgeyBnZXRDdXN0b21lclR5cGUsIGdldERldGFpbEN1c3RvbWVyVHlwZSwgdXBkYXRlQ3VzdG9tZXJUeXBlLCBjcmVhdGluZ0N1c3RvbWVyVHlwZSB9IGZyb20gJy4vY3VzdG9tZXItdHlwZS5hcGknOwp2YXIgaW5pdGlhbFN0YXRlID0gewogIGxvYWRpbmc6IGZhbHNlLAogIHVwZGF0aW5nU3VjY2VzczogZmFsc2UKfTsKZXhwb3J0IHZhciBjdXN0b21lclR5cGVBZGFwdGVyID0gY3JlYXRlRW50aXR5QWRhcHRlcih7CiAgLy8gQXNzdW1lIElEcyBhcmUgc3RvcmVkIGluIGEgZmllbGQgb3RoZXIgdGhhbiBgYm9vay5pZGAKICBzZWxlY3RJZDogZnVuY3Rpb24gc2VsZWN0SWQoY3VzdG9tZXJUeXBlKSB7CiAgICByZXR1cm4gY3VzdG9tZXJUeXBlLmlkOwogIH0sCiAgLy8gS2VlcCB0aGUgImFsbCBJRHMiIGFycmF5IHNvcnRlZCBiYXNlZCBvbiBib29rIHRpdGxlcwogIHNvcnRDb21wYXJlcjogZnVuY3Rpb24gc29ydENvbXBhcmVyKGEsIGIpIHsKICAgIHJldHVybiBhLm5hbWUubG9jYWxlQ29tcGFyZShiLm5hbWUpOwogIH0KfSk7CnZhciBzbGljZSA9IGNyZWF0ZVNsaWNlKHsKICBuYW1lOiAnY3VzdG9tZXJUeXBlJywKICBpbml0aWFsU3RhdGU6IGN1c3RvbWVyVHlwZUFkYXB0ZXIuZ2V0SW5pdGlhbFN0YXRlKHsKICAgIGluaXRpYWxTdGF0ZTogaW5pdGlhbFN0YXRlCiAgfSksCiAgcmVkdWNlcnM6IHsKICAgIGZldGNoaW5nOiBmdW5jdGlvbiBmZXRjaGluZyhzdGF0ZSkgewogICAgICBzdGF0ZS5pbml0aWFsU3RhdGUubG9hZGluZyA9IHRydWU7CiAgICB9LAogICAgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KHN0YXRlKSB7CiAgICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgICAgIHN0YXRlLmluaXRpYWxTdGF0ZS51cGRhdGluZ1N1Y2Nlc3MgPSBmYWxzZTsKICAgIH0sCiAgICBjdXN0b21lclR5cGVBZGRPbmU6IGN1c3RvbWVyVHlwZUFkYXB0ZXIuYWRkT25lLAogICAgY3VzdG9tZXJUeXBlQWRkTWFueTogY3VzdG9tZXJUeXBlQWRhcHRlci5hZGRNYW55LAogICAgY3VzdG9tZXJUeXBlVXBkYXRlOiBjdXN0b21lclR5cGVBZGFwdGVyLnVwZGF0ZU9uZSwKICAgIGN1c3RvbWVyVHlwZVJlbW92ZTogY3VzdG9tZXJUeXBlQWRhcHRlci5yZW1vdmVPbmUKICB9LAogIGV4dHJhUmVkdWNlcnM6IChfZXh0cmFSZWR1Y2VycyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2V4dHJhUmVkdWNlcnMsIGNyZWF0aW5nQ3VzdG9tZXJUeXBlLmZ1bGZpbGxlZCwgZnVuY3Rpb24gKHN0YXRlLCBhY3Rpb24pIHsKICAgIGNvbnNvbGUubG9nKGFjdGlvbik7CiAgICBzdGF0ZS5pbml0aWFsU3RhdGUudXBkYXRpbmdTdWNjZXNzID0gdHJ1ZTsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfZXh0cmFSZWR1Y2VycywgY3JlYXRpbmdDdXN0b21lclR5cGUucmVqZWN0ZWQsIGZ1bmN0aW9uIChzdGF0ZSwgYWN0aW9uKSB7CiAgICBjb25zb2xlLmxvZyhhY3Rpb24pOwogICAgc3RhdGUuaW5pdGlhbFN0YXRlLnVwZGF0aW5nU3VjY2VzcyA9IGZhbHNlOwogICAgc3RhdGUuaW5pdGlhbFN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9leHRyYVJlZHVjZXJzLCBnZXREZXRhaWxDdXN0b21lclR5cGUuZnVsZmlsbGVkLCBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikgewogICAgY3VzdG9tZXJUeXBlQWRhcHRlci5zZXRBbGwoc3RhdGUsIFthY3Rpb24ucGF5bG9hZF0pOwogICAgc3RhdGUuaW5pdGlhbFN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9leHRyYVJlZHVjZXJzLCBnZXRDdXN0b21lclR5cGUuZnVsZmlsbGVkLCBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikgewogICAgY3VzdG9tZXJUeXBlQWRhcHRlci5zZXRBbGwoc3RhdGUsIGFjdGlvbi5wYXlsb2FkLmRhdGEpOwogICAgc3RhdGUuaW5pdGlhbFN0YXRlLnRvdGFsSXRlbSA9IGFjdGlvbi5wYXlsb2FkLnRvdGFsOwogICAgc3RhdGUuaW5pdGlhbFN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9leHRyYVJlZHVjZXJzLCB1cGRhdGVDdXN0b21lclR5cGUuZnVsZmlsbGVkLCBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikgewogICAgc3RhdGUuaW5pdGlhbFN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS51cGRhdGluZ1N1Y2Nlc3MgPSB0cnVlOwogIH0pLCBfZXh0cmFSZWR1Y2VycykKfSk7CmV4cG9ydCBkZWZhdWx0IHNsaWNlLnJlZHVjZXI7CnZhciBfc2xpY2UkYWN0aW9ucyA9IHNsaWNlLmFjdGlvbnMsCiAgICBmZXRjaGluZyA9IF9zbGljZSRhY3Rpb25zLmZldGNoaW5nLAogICAgcmVzZXQgPSBfc2xpY2UkYWN0aW9ucy5yZXNldDsKZXhwb3J0IHsgZmV0Y2hpbmcsIHJlc2V0IH07CmV4cG9ydCB2YXIgZ2xvYmFsaXplZGN1c3RvbWVyVHlwZVNlbGVjdG9ycyA9IGN1c3RvbWVyVHlwZUFkYXB0ZXIuZ2V0U2VsZWN0b3JzKGZ1bmN0aW9uIChzdGF0ZSkgewogIHJldHVybiBzdGF0ZS5jdXN0b21lclR5cGU7Cn0pOw=="},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerType/customer-type.reducer.js"],"names":["createEntityAdapter","createSelector","createSlice","getCustomerType","getDetailCustomerType","updateCustomerType","creatingCustomerType","initialState","loading","updatingSuccess","customerTypeAdapter","selectId","customerType","id","sortComparer","a","b","name","localeCompare","slice","getInitialState","reducers","fetching","state","reset","customerTypeAddOne","addOne","customerTypeAddMany","addMany","customerTypeUpdate","updateOne","customerTypeRemove","removeOne","extraReducers","fulfilled","action","console","log","rejected","setAll","payload","data","totalItem","total","reducer","actions","globalizedcustomerTypeSelectors","getSelectors"],"mappings":"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","sourcesContent":["import { createEntityAdapter, createSelector, createSlice } from '@reduxjs/toolkit';\nimport { getCustomerType, getDetailCustomerType, updateCustomerType, creatingCustomerType } from './customer-type.api';\n\nconst initialState = {\n  loading: false,\n  updatingSuccess: false\n};\n\nexport const customerTypeAdapter = createEntityAdapter({\n  // Assume IDs are stored in a field other than `book.id`\n  selectId: customerType => customerType.id,\n  // Keep the \"all IDs\" array sorted based on book titles\n  sortComparer: (a, b) => a.name.localeCompare(b.name)\n});\n\nconst slice = createSlice({\n  name: 'customerType',\n  initialState: customerTypeAdapter.getInitialState({ initialState }),\n  reducers: {\n    fetching(state) {\n      state.initialState.loading = true;\n    },\n    reset(state) {\n      state.initialState.loading = false;\n      state.initialState.updatingSuccess = false;\n    },\n    customerTypeAddOne: customerTypeAdapter.addOne,\n    customerTypeAddMany: customerTypeAdapter.addMany,\n    customerTypeUpdate: customerTypeAdapter.updateOne,\n    customerTypeRemove: customerTypeAdapter.removeOne\n  },\n  extraReducers: {\n    [creatingCustomerType.fulfilled]: (state, action) => {\n      console.log(action);\n      state.initialState.updatingSuccess = true;\n      state.initialState.loading = false;\n    },\n    [creatingCustomerType.rejected]: (state, action) => {\n      console.log(action);\n      state.initialState.updatingSuccess = false;\n      state.initialState.loading = false;\n    },\n    [getDetailCustomerType.fulfilled]: (state, action) => {\n      customerTypeAdapter.setAll(state, [action.payload]);\n      state.initialState.loading = false;\n    },\n    [getCustomerType.fulfilled]: (state, action) => {\n      customerTypeAdapter.setAll(state, action.payload.data);\n      state.initialState.totalItem = action.payload.total;\n      state.initialState.loading = false;\n    },\n    [updateCustomerType.fulfilled]: (state, action) => {\n      state.initialState.loading = false;\n      state.initialState.updatingSuccess = true;\n    }\n  }\n});\n\nexport default slice.reducer;\nexport const { fetching, reset } = slice.actions;\n\nexport const globalizedcustomerTypeSelectors = customerTypeAdapter.getSelectors(state => state.customerType);\n"]}]}