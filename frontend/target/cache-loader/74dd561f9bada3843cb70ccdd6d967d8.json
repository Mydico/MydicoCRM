{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/Provider/provider.reducer.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/Provider/provider.reducer.js","mtime":1619209863621},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9leHRyYVJlZHVjZXJzOwoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCmltcG9ydCB7IGNyZWF0ZUVudGl0eUFkYXB0ZXIsIGNyZWF0ZVNsaWNlIH0gZnJvbSAnQHJlZHV4anMvdG9vbGtpdCc7CmltcG9ydCB7IGNyZWF0aW5nUHJvdmlkZXIsIGdldFByb3ZpZGVyLCBnZXREZXRhaWxQcm92aWRlciwgdXBkYXRlUHJvdmlkZXIgfSBmcm9tICcuL3Byb3ZpZGVyLmFwaSc7CnZhciBpbml0aWFsU3RhdGUgPSB7CiAgbG9hZGluZzogZmFsc2UsCiAgdXBkYXRpbmdTdWNjZXNzOiBmYWxzZSwKICB0b3RhbEl0ZW06IDAsCiAgY2l0aWVzOiBbXSwKICBkaXN0cmljdHM6IFtdLAogIHdhcmRzOiBbXSwKICB0eXBlOiBbXSwKICBicmFuY2g6IFtdLAogIHN0YXR1czogW10KfTsKZXhwb3J0IHZhciBwcm92aWRlcnNBZGFwdGVyID0gY3JlYXRlRW50aXR5QWRhcHRlcih7CiAgLy8gQXNzdW1lIElEcyBhcmUgc3RvcmVkIGluIGEgZmllbGQgb3RoZXIgdGhhbiBgYm9vay5pZGAKICBzZWxlY3RJZDogZnVuY3Rpb24gc2VsZWN0SWQocHJvdmlkZXIpIHsKICAgIHJldHVybiBwcm92aWRlci5pZDsKICB9LAogIC8vIEtlZXAgdGhlICJhbGwgSURzIiBhcnJheSBzb3J0ZWQgYmFzZWQgb24gYm9vayB0aXRsZXMKICBzb3J0Q29tcGFyZXI6IGZ1bmN0aW9uIHNvcnRDb21wYXJlcihhLCBiKSB7CiAgICByZXR1cm4gYS5uYW1lLmxvY2FsZUNvbXBhcmUoYi5uYW1lKTsKICB9Cn0pOwp2YXIgc2xpY2UgPSBjcmVhdGVTbGljZSh7CiAgbmFtZTogJ3Byb3ZpZGVyJywKICBpbml0aWFsU3RhdGU6IHByb3ZpZGVyc0FkYXB0ZXIuZ2V0SW5pdGlhbFN0YXRlKHsKICAgIGluaXRpYWxTdGF0ZTogaW5pdGlhbFN0YXRlCiAgfSksCiAgcmVkdWNlcnM6IHsKICAgIGZldGNoaW5nOiBmdW5jdGlvbiBmZXRjaGluZyhzdGF0ZSkgewogICAgICBzdGF0ZS5pbml0aWFsU3RhdGUubG9hZGluZyA9IHRydWU7CiAgICB9LAogICAgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KHN0YXRlKSB7CiAgICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgICAgIHN0YXRlLmluaXRpYWxTdGF0ZS51cGRhdGluZ1N1Y2Nlc3MgPSBmYWxzZTsKICAgIH0sCiAgICBwcm92aWRlcnNBZGRPbmU6IHByb3ZpZGVyc0FkYXB0ZXIuYWRkT25lLAogICAgcHJvdmlkZXJzQWRkTWFueTogcHJvdmlkZXJzQWRhcHRlci5hZGRNYW55LAogICAgcHJvdmlkZXJVcGRhdGU6IHByb3ZpZGVyc0FkYXB0ZXIudXBkYXRlT25lLAogICAgcHJvdmlkZXJSZW1vdmU6IHByb3ZpZGVyc0FkYXB0ZXIucmVtb3ZlT25lCiAgfSwKICBleHRyYVJlZHVjZXJzOiAoX2V4dHJhUmVkdWNlcnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9leHRyYVJlZHVjZXJzLCBjcmVhdGluZ1Byb3ZpZGVyLmZ1bGZpbGxlZCwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgICBzdGF0ZS5pbml0aWFsU3RhdGUudXBkYXRpbmdTdWNjZXNzID0gdHJ1ZTsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfZXh0cmFSZWR1Y2VycywgdXBkYXRlUHJvdmlkZXIuZnVsZmlsbGVkLCBmdW5jdGlvbiAoc3RhdGUpIHsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS51cGRhdGluZ1N1Y2Nlc3MgPSB0cnVlOwogICAgc3RhdGUuaW5pdGlhbFN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9leHRyYVJlZHVjZXJzLCBnZXREZXRhaWxQcm92aWRlci5mdWxmaWxsZWQsIGZ1bmN0aW9uIChzdGF0ZSwgYWN0aW9uKSB7CiAgICBwcm92aWRlcnNBZGFwdGVyLmFkZE9uZShzdGF0ZSwgYWN0aW9uLnBheWxvYWQpOwogICAgc3RhdGUuaW5pdGlhbFN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9leHRyYVJlZHVjZXJzLCBnZXRQcm92aWRlci5mdWxmaWxsZWQsIGZ1bmN0aW9uIChzdGF0ZSwgYWN0aW9uKSB7CiAgICBwcm92aWRlcnNBZGFwdGVyLnNldEFsbChzdGF0ZSwgYWN0aW9uLnBheWxvYWQuZGF0YSk7CiAgICBzdGF0ZS5pbml0aWFsU3RhdGUudG90YWxJdGVtID0gYWN0aW9uLnBheWxvYWQudG90YWw7CiAgICBzdGF0ZS5pbml0aWFsU3RhdGUubG9hZGluZyA9IGZhbHNlOwogIH0pLCBfZGVmaW5lUHJvcGVydHkoX2V4dHJhUmVkdWNlcnMsIGdldFByb3ZpZGVyLnJlamVjdGVkLCBmdW5jdGlvbiAoc3RhdGUpIHsKICAgIHN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICB9KSwgX2V4dHJhUmVkdWNlcnMpCn0pOwpleHBvcnQgZGVmYXVsdCBzbGljZS5yZWR1Y2VyOwp2YXIgX3NsaWNlJGFjdGlvbnMgPSBzbGljZS5hY3Rpb25zLAogICAgZmV0Y2hpbmcgPSBfc2xpY2UkYWN0aW9ucy5mZXRjaGluZywKICAgIHJlc2V0ID0gX3NsaWNlJGFjdGlvbnMucmVzZXQ7CmV4cG9ydCB7IGZldGNoaW5nLCByZXNldCB9OwpleHBvcnQgdmFyIGdsb2JhbGl6ZWRQcm92aWRlclNlbGVjdG9ycyA9IHByb3ZpZGVyc0FkYXB0ZXIuZ2V0U2VsZWN0b3JzKGZ1bmN0aW9uIChzdGF0ZSkgewogIHJldHVybiBzdGF0ZS5wcm92aWRlcjsKfSk7"},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/Provider/provider.reducer.js"],"names":["createEntityAdapter","createSlice","creatingProvider","getProvider","getDetailProvider","updateProvider","initialState","loading","updatingSuccess","totalItem","cities","districts","wards","type","branch","status","providersAdapter","selectId","provider","id","sortComparer","a","b","name","localeCompare","slice","getInitialState","reducers","fetching","state","reset","providersAddOne","addOne","providersAddMany","addMany","providerUpdate","updateOne","providerRemove","removeOne","extraReducers","fulfilled","action","payload","setAll","data","total","rejected","reducer","actions","globalizedProviderSelectors","getSelectors"],"mappings":"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","sourcesContent":["import {createEntityAdapter, createSlice} from '@reduxjs/toolkit';\nimport {creatingProvider, getProvider, getDetailProvider, updateProvider} from './provider.api';\n\nconst initialState = {\n  loading: false,\n  updatingSuccess: false,\n  totalItem: 0,\n  cities: [],\n  districts: [],\n  wards: [],\n  type: [],\n  branch: [],\n  status: [],\n};\n\nexport const providersAdapter = createEntityAdapter({\n  // Assume IDs are stored in a field other than `book.id`\n  selectId: (provider) => provider.id,\n  // Keep the \"all IDs\" array sorted based on book titles\n  sortComparer: (a, b) => a.name.localeCompare(b.name),\n});\n\nconst slice = createSlice({\n  name: 'provider',\n  initialState: providersAdapter.getInitialState({initialState}),\n  reducers: {\n    fetching(state) {\n      state.initialState.loading = true;\n    },\n    reset(state) {\n      state.initialState.loading = false;\n      state.initialState.updatingSuccess = false;\n    },\n    providersAddOne: providersAdapter.addOne,\n    providersAddMany: providersAdapter.addMany,\n    providerUpdate: providersAdapter.updateOne,\n    providerRemove: providersAdapter.removeOne,\n  },\n  extraReducers: {\n    [creatingProvider.fulfilled]: (state ) => {\n      state.initialState.updatingSuccess = true;\n      state.initialState.loading = false;\n    },\n    [updateProvider.fulfilled]: (state ) => {\n      state.initialState.updatingSuccess = true;\n      state.initialState.loading = false;\n    },\n    [getDetailProvider.fulfilled]: (state, action) => {\n      providersAdapter.addOne(state, action.payload);\n      state.initialState.loading = false;\n    },\n    [getProvider.fulfilled]: (state, action) => {\n      providersAdapter.setAll(state, action.payload.data);\n      state.initialState.totalItem = action.payload.total;\n      state.initialState.loading = false;\n    },\n    [getProvider.rejected]: (state ) => {\n      state.loading = false;\n    },\n  },\n});\n\nexport default slice.reducer;\nexport const {fetching, reset} = slice.actions;\n\nexport const globalizedProviderSelectors = providersAdapter.getSelectors((state) => state.provider);\n"]}]}