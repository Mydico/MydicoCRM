{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/History/warehouse-history.reducer.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/History/warehouse-history.reducer.js","mtime":1624686429863},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9leHRyYVJlZHVjZXJzOwoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCmltcG9ydCB7IGNyZWF0ZUVudGl0eUFkYXB0ZXIsIGNyZWF0ZVNsaWNlIH0gZnJvbSAnQHJlZHV4anMvdG9vbGtpdCc7CmltcG9ydCB7IGNyZWF0aW5nU3RvcmVIaXN0b3J5LCBnZXRTdG9yZUhpc3RvcnksIGdldERldGFpbFN0b3JlSGlzdG9yeSwgdXBkYXRlU3RvcmVIaXN0b3J5IH0gZnJvbSAnLi93YXJlaG91c2UtaGlzdG9yeS5hcGknOwp2YXIgaW5pdGlhbFN0YXRlID0gewogIGxvYWRpbmc6IGZhbHNlLAogIHVwZGF0aW5nU3VjY2VzczogZmFsc2UsCiAgdG90YWxJdGVtOiAwLAogIGNpdGllczogW10sCiAgZGlzdHJpY3RzOiBbXSwKICB3YXJkczogW10sCiAgdHlwZTogW10sCiAgYnJhbmNoOiBbXSwKICBzdGF0dXM6IFtdCn07CmV4cG9ydCB2YXIgc3RvcmVIaXN0b3J5c0FkYXB0ZXIgPSBjcmVhdGVFbnRpdHlBZGFwdGVyKHsKICAvLyBBc3N1bWUgSURzIGFyZSBzdG9yZWQgaW4gYSBmaWVsZCBvdGhlciB0aGFuIGBib29rLmlkYAogIHNlbGVjdElkOiBmdW5jdGlvbiBzZWxlY3RJZChzdG9yZUhpc3RvcnkpIHsKICAgIHJldHVybiBzdG9yZUhpc3RvcnkuaWQ7CiAgfSwKICAvLyBLZWVwIHRoZSAiYWxsIElEcyIgYXJyYXkgc29ydGVkIGJhc2VkIG9uIGJvb2sgdGl0bGVzCiAgc29ydENvbXBhcmVyOiBmdW5jdGlvbiBzb3J0Q29tcGFyZXIoYSwgYikgewogICAgcmV0dXJuIGEubGFzdE1vZGlmaWVkRGF0ZS5sb2NhbGVDb21wYXJlKGIubGFzdE1vZGlmaWVkRGF0ZSk7CiAgfQp9KTsKdmFyIHNsaWNlID0gY3JlYXRlU2xpY2UoewogIG5hbWU6ICdzdG9yZUhpc3RvcnknLAogIGluaXRpYWxTdGF0ZTogc3RvcmVIaXN0b3J5c0FkYXB0ZXIuZ2V0SW5pdGlhbFN0YXRlKHsKICAgIGluaXRpYWxTdGF0ZTogaW5pdGlhbFN0YXRlCiAgfSksCiAgcmVkdWNlcnM6IHsKICAgIGZldGNoaW5nOiBmdW5jdGlvbiBmZXRjaGluZyhzdGF0ZSkgewogICAgICBzdGF0ZS5pbml0aWFsU3RhdGUubG9hZGluZyA9IHRydWU7CiAgICB9LAogICAgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KHN0YXRlKSB7CiAgICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgICAgIHN0YXRlLmluaXRpYWxTdGF0ZS51cGRhdGluZ1N1Y2Nlc3MgPSBmYWxzZTsKICAgIH0sCiAgICBzdG9yZUhpc3RvcnlzQWRkT25lOiBzdG9yZUhpc3RvcnlzQWRhcHRlci5hZGRPbmUsCiAgICBzdG9yZUhpc3RvcnlzQWRkTWFueTogc3RvcmVIaXN0b3J5c0FkYXB0ZXIuYWRkTWFueSwKICAgIHN0b3JlSGlzdG9yeVVwZGF0ZTogc3RvcmVIaXN0b3J5c0FkYXB0ZXIudXBkYXRlT25lLAogICAgc3RvcmVIaXN0b3J5UmVtb3ZlOiBzdG9yZUhpc3RvcnlzQWRhcHRlci5yZW1vdmVPbmUKICB9LAogIGV4dHJhUmVkdWNlcnM6IChfZXh0cmFSZWR1Y2VycyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2V4dHJhUmVkdWNlcnMsIGNyZWF0aW5nU3RvcmVIaXN0b3J5LmZ1bGZpbGxlZCwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgICBzdGF0ZS5pbml0aWFsU3RhdGUudXBkYXRpbmdTdWNjZXNzID0gdHJ1ZTsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfZXh0cmFSZWR1Y2VycywgdXBkYXRlU3RvcmVIaXN0b3J5LmZ1bGZpbGxlZCwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgICBzdGF0ZS5pbml0aWFsU3RhdGUudXBkYXRpbmdTdWNjZXNzID0gdHJ1ZTsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfZXh0cmFSZWR1Y2VycywgZ2V0RGV0YWlsU3RvcmVIaXN0b3J5LmZ1bGZpbGxlZCwgZnVuY3Rpb24gKHN0YXRlLCBhY3Rpb24pIHsKICAgIHN0b3JlSGlzdG9yeXNBZGFwdGVyLmFkZE9uZShzdGF0ZSwgYWN0aW9uLnBheWxvYWQpOwogICAgc3RhdGUuaW5pdGlhbFN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9leHRyYVJlZHVjZXJzLCBnZXRTdG9yZUhpc3RvcnkuZnVsZmlsbGVkLCBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikgewogICAgc3RvcmVIaXN0b3J5c0FkYXB0ZXIuc2V0QWxsKHN0YXRlLCBhY3Rpb24ucGF5bG9hZC5kYXRhKTsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS50b3RhbEl0ZW0gPSBhY3Rpb24ucGF5bG9hZC50b3RhbDsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfZXh0cmFSZWR1Y2VycywgZ2V0U3RvcmVIaXN0b3J5LnJlamVjdGVkLCBmdW5jdGlvbiAoc3RhdGUpIHsKICAgIHN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICB9KSwgX2V4dHJhUmVkdWNlcnMpCn0pOwpleHBvcnQgZGVmYXVsdCBzbGljZS5yZWR1Y2VyOwp2YXIgX3NsaWNlJGFjdGlvbnMgPSBzbGljZS5hY3Rpb25zLAogICAgZmV0Y2hpbmcgPSBfc2xpY2UkYWN0aW9ucy5mZXRjaGluZywKICAgIHJlc2V0ID0gX3NsaWNlJGFjdGlvbnMucmVzZXQ7CmV4cG9ydCB7IGZldGNoaW5nLCByZXNldCB9OwpleHBvcnQgdmFyIGdsb2JhbGl6ZWRTdG9yZUhpc3RvcnlTZWxlY3RvcnMgPSBzdG9yZUhpc3RvcnlzQWRhcHRlci5nZXRTZWxlY3RvcnMoZnVuY3Rpb24gKHN0YXRlKSB7CiAgcmV0dXJuIHN0YXRlLnN0b3JlSGlzdG9yeTsKfSk7"},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/History/warehouse-history.reducer.js"],"names":["createEntityAdapter","createSlice","creatingStoreHistory","getStoreHistory","getDetailStoreHistory","updateStoreHistory","initialState","loading","updatingSuccess","totalItem","cities","districts","wards","type","branch","status","storeHistorysAdapter","selectId","storeHistory","id","sortComparer","a","b","lastModifiedDate","localeCompare","slice","name","getInitialState","reducers","fetching","state","reset","storeHistorysAddOne","addOne","storeHistorysAddMany","addMany","storeHistoryUpdate","updateOne","storeHistoryRemove","removeOne","extraReducers","fulfilled","action","payload","setAll","data","total","rejected","reducer","actions","globalizedStoreHistorySelectors","getSelectors"],"mappings":"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","sourcesContent":["import {createEntityAdapter, createSlice} from '@reduxjs/toolkit';\nimport {creatingStoreHistory, getStoreHistory, getDetailStoreHistory, updateStoreHistory} from './warehouse-history.api';\n\nconst initialState = {\n  loading: false,\n  updatingSuccess: false,\n  totalItem: 0,\n  cities: [],\n  districts: [],\n  wards: [],\n  type: [],\n  branch: [],\n  status: [],\n};\n\nexport const storeHistorysAdapter = createEntityAdapter({\n  // Assume IDs are stored in a field other than `book.id`\n  selectId: (storeHistory) => storeHistory.id,\n  // Keep the \"all IDs\" array sorted based on book titles\n  sortComparer: (a, b) => a.lastModifiedDate.localeCompare(b.lastModifiedDate),\n});\n\nconst slice = createSlice({\n  name: 'storeHistory',\n  initialState: storeHistorysAdapter.getInitialState({initialState}),\n  reducers: {\n    fetching(state) {\n      state.initialState.loading = true;\n    },\n    reset(state) {\n      state.initialState.loading = false;\n      state.initialState.updatingSuccess = false;\n    },\n    storeHistorysAddOne: storeHistorysAdapter.addOne,\n    storeHistorysAddMany: storeHistorysAdapter.addMany,\n    storeHistoryUpdate: storeHistorysAdapter.updateOne,\n    storeHistoryRemove: storeHistorysAdapter.removeOne,\n  },\n  extraReducers: {\n    [creatingStoreHistory.fulfilled]: (state ) => {\n      state.initialState.updatingSuccess = true;\n      state.initialState.loading = false;\n    },\n    [updateStoreHistory.fulfilled]: (state ) => {\n      state.initialState.updatingSuccess = true;\n      state.initialState.loading = false;\n    },\n    [getDetailStoreHistory.fulfilled]: (state, action) => {\n      storeHistorysAdapter.addOne(state, action.payload);\n      state.initialState.loading = false;\n    },\n    [getStoreHistory.fulfilled]: (state, action) => {\n      storeHistorysAdapter.setAll(state, action.payload.data);\n      state.initialState.totalItem = action.payload.total;\n      state.initialState.loading = false;\n    },\n    [getStoreHistory.rejected]: (state ) => {\n      state.loading = false;\n    },\n  },\n});\n\nexport default slice.reducer;\nexport const {fetching, reset} = slice.actions;\n\nexport const globalizedStoreHistorySelectors = storeHistorysAdapter.getSelectors((state) => state.storeHistory);\n"]}]}