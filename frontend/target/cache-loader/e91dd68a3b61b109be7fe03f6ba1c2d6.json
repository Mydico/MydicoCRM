{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/components/charts/ChartLineSimple.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/components/charts/ChartLineSimple.js","mtime":1621018034921},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0KCmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCk7IHZhciBrZXksIGk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzb3VyY2VTeW1ib2xLZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlU3ltYm9sS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VTeW1ib2xLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzb3VyY2UsIGtleSkpIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkgeyBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTsgdmFyIHRhcmdldCA9IHt9OyB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7IHZhciBrZXksIGk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZUtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gcmV0dXJuIHRhcmdldDsgfQoKaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJzsKaW1wb3J0IHsgZ2V0Q29sb3IsIGRlZXBPYmplY3RzTWVyZ2UgfSBmcm9tICdAY29yZXVpL3V0aWxzJzsKaW1wb3J0IHsgQ0NoYXJ0TGluZSB9IGZyb20gJ0Bjb3JldWkvcmVhY3QtY2hhcnRqcyc7Cgp2YXIgQ2hhcnRMaW5lU2ltcGxlID0gZnVuY3Rpb24gQ2hhcnRMaW5lU2ltcGxlKHByb3BzKSB7CiAgdmFyIGJvcmRlckNvbG9yID0gcHJvcHMuYm9yZGVyQ29sb3IsCiAgICAgIGJhY2tncm91bmRDb2xvciA9IHByb3BzLmJhY2tncm91bmRDb2xvciwKICAgICAgcG9pbnRIb3ZlckJhY2tncm91bmRDb2xvciA9IHByb3BzLnBvaW50SG92ZXJCYWNrZ3JvdW5kQ29sb3IsCiAgICAgIGRhdGFQb2ludHMgPSBwcm9wcy5kYXRhUG9pbnRzLAogICAgICBsYWJlbCA9IHByb3BzLmxhYmVsLAogICAgICBwb2ludGVkID0gcHJvcHMucG9pbnRlZCwKICAgICAgYXR0cmlidXRlcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwcm9wcywgWyJib3JkZXJDb2xvciIsICJiYWNrZ3JvdW5kQ29sb3IiLCAicG9pbnRIb3ZlckJhY2tncm91bmRDb2xvciIsICJkYXRhUG9pbnRzIiwgImxhYmVsIiwgInBvaW50ZWQiXSk7CgogIHZhciBwb2ludEhvdmVyQ29sb3IgPSBmdW5jdGlvbiAoKSB7CiAgICBpZiAocG9pbnRIb3ZlckJhY2tncm91bmRDb2xvcikgewogICAgICByZXR1cm4gcG9pbnRIb3ZlckJhY2tncm91bmRDb2xvcjsKICAgIH0gZWxzZSBpZiAoYmFja2dyb3VuZENvbG9yICE9PSAndHJhbnNwYXJlbnQnKSB7CiAgICAgIHJldHVybiBiYWNrZ3JvdW5kQ29sb3I7CiAgICB9CgogICAgcmV0dXJuIGJvcmRlckNvbG9yOwogIH0oKTsKCiAgdmFyIGRlZmF1bHREYXRhc2V0cyA9IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBbewogICAgICBkYXRhOiBkYXRhUG9pbnRzLAogICAgICBib3JkZXJDb2xvcjogZ2V0Q29sb3IoYm9yZGVyQ29sb3IpLAogICAgICBiYWNrZ3JvdW5kQ29sb3I6IGdldENvbG9yKGJhY2tncm91bmRDb2xvciksCiAgICAgIHBvaW50QmFja2dyb3VuZENvbG9yOiBnZXRDb2xvcihwb2ludEhvdmVyQ29sb3IpLAogICAgICBwb2ludEhvdmVyQmFja2dyb3VuZENvbG9yOiBnZXRDb2xvcihwb2ludEhvdmVyQ29sb3IpLAogICAgICBsYWJlbDogbGFiZWwKICAgIH1dOwogIH0oKTsKCiAgdmFyIHBvaW50ZWRPcHRpb25zID0gZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgc2NhbGVzOiB7CiAgICAgICAgeEF4ZXM6IFt7CiAgICAgICAgICBvZmZzZXQ6IHRydWUsCiAgICAgICAgICBncmlkTGluZXM6IHsKICAgICAgICAgICAgY29sb3I6ICd0cmFuc3BhcmVudCcsCiAgICAgICAgICAgIHplcm9MaW5lQ29sb3I6ICd0cmFuc3BhcmVudCcKICAgICAgICAgIH0sCiAgICAgICAgICB0aWNrczogewogICAgICAgICAgICBmb250U2l6ZTogMiwKICAgICAgICAgICAgZm9udENvbG9yOiAndHJhbnNwYXJlbnQnCiAgICAgICAgICB9CiAgICAgICAgfV0sCiAgICAgICAgeUF4ZXM6IFt7CiAgICAgICAgICBkaXNwbGF5OiBmYWxzZSwKICAgICAgICAgIHRpY2tzOiB7CiAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLAogICAgICAgICAgICBtaW46IE1hdGgubWluLmFwcGx5KE1hdGgsIGRhdGFQb2ludHMpIC0gNSwKICAgICAgICAgICAgbWF4OiBNYXRoLm1heC5hcHBseShNYXRoLCBkYXRhUG9pbnRzKSArIDUKICAgICAgICAgIH0KICAgICAgICB9XQogICAgICB9LAogICAgICBlbGVtZW50czogewogICAgICAgIGxpbmU6IHsKICAgICAgICAgIGJvcmRlcldpZHRoOiAxCiAgICAgICAgfSwKICAgICAgICBwb2ludDogewogICAgICAgICAgcmFkaXVzOiA0LAogICAgICAgICAgaGl0UmFkaXVzOiAxMCwKICAgICAgICAgIGhvdmVyUmFkaXVzOiA0CiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH0oKTsKCiAgdmFyIHN0cmFpZ2h0T3B0aW9ucyA9IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB7CiAgICAgIHNjYWxlczogewogICAgICAgIHhBeGVzOiBbewogICAgICAgICAgZGlzcGxheTogZmFsc2UKICAgICAgICB9XSwKICAgICAgICB5QXhlczogW3sKICAgICAgICAgIGRpc3BsYXk6IGZhbHNlCiAgICAgICAgfV0KICAgICAgfSwKICAgICAgZWxlbWVudHM6IHsKICAgICAgICBsaW5lOiB7CiAgICAgICAgICBib3JkZXJXaWR0aDogMgogICAgICAgIH0sCiAgICAgICAgcG9pbnQ6IHsKICAgICAgICAgIHJhZGl1czogMCwKICAgICAgICAgIGhpdFJhZGl1czogMTAsCiAgICAgICAgICBob3ZlclJhZGl1czogNAogICAgICAgIH0KICAgICAgfQogICAgfTsKICB9KCk7CgogIHZhciBkZWZhdWx0T3B0aW9ucyA9IGZ1bmN0aW9uICgpIHsKICAgIHZhciBvcHRpb25zID0gcG9pbnRlZCA/IHBvaW50ZWRPcHRpb25zIDogc3RyYWlnaHRPcHRpb25zOwogICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMsIHsKICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsCiAgICAgIGxlZ2VuZDogewogICAgICAgIGRpc3BsYXk6IGZhbHNlCiAgICAgIH0KICAgIH0pOwogIH0oKTsKCiAgdmFyIGNvbXB1dGVkRGF0YXNldHMgPSBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gZGVlcE9iamVjdHNNZXJnZShkZWZhdWx0RGF0YXNldHMsIGF0dHJpYnV0ZXMuZGF0YXNldHMgfHwge30pOwogIH0oKTsKCiAgdmFyIGNvbXB1dGVkT3B0aW9ucyA9IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBkZWVwT2JqZWN0c01lcmdlKGRlZmF1bHRPcHRpb25zLCBhdHRyaWJ1dGVzLm9wdGlvbnMgfHwge30pOwogIH0oKTsgLy8gcmVuZGVyCgoKICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ0NoYXJ0TGluZSwgX2V4dGVuZHMoe30sIGF0dHJpYnV0ZXMsIHsKICAgIGRhdGFzZXRzOiBjb21wdXRlZERhdGFzZXRzLAogICAgb3B0aW9uczogY29tcHV0ZWRPcHRpb25zLAogICAgbGFiZWxzOiBsYWJlbAogIH0pKTsKfTsKCkNoYXJ0TGluZVNpbXBsZS5wcm9wVHlwZXMgPSB7CiAgdGFnOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnN0cmluZ10pLAogIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZywKICAvLwogIGJvcmRlckNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLAogIGJhY2tncm91bmRDb2xvcjogUHJvcFR5cGVzLnN0cmluZywKICBwb2ludEhvdmVyQmFja2dyb3VuZENvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLAogIGRhdGFQb2ludHM6IFByb3BUeXBlcy5hcnJheSwKICBsYWJlbDogUHJvcFR5cGVzLnN0cmluZywKICBwb2ludGVkOiBQcm9wVHlwZXMuYm9vbAp9OwpDaGFydExpbmVTaW1wbGUuZGVmYXVsdFByb3BzID0gewogIGJvcmRlckNvbG9yOiAncmdiYSgyNTUsMjU1LDI1NSwuNTUpJywKICBiYWNrZ3JvdW5kQ29sb3I6ICd0cmFuc3BhcmVudCcsCiAgZGF0YVBvaW50czogWzEwLCAyMiwgMzQsIDQ2LCA1OCwgNzAsIDQ2LCAyMywgNDUsIDc4LCAzNCwgMTJdLAogIGxhYmVsOiAnU2FsZXMnCn07CmV4cG9ydCBkZWZhdWx0IENoYXJ0TGluZVNpbXBsZTs="},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/components/charts/ChartLineSimple.js"],"names":["React","PropTypes","getColor","deepObjectsMerge","CChartLine","ChartLineSimple","props","borderColor","backgroundColor","pointHoverBackgroundColor","dataPoints","label","pointed","attributes","pointHoverColor","defaultDatasets","data","pointBackgroundColor","pointedOptions","scales","xAxes","offset","gridLines","color","zeroLineColor","ticks","fontSize","fontColor","yAxes","display","min","Math","apply","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","straightOptions","defaultOptions","options","Object","assign","maintainAspectRatio","legend","computedDatasets","datasets","computedOptions","propTypes","tag","oneOfType","func","string","className","array","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {getColor, deepObjectsMerge} from '@coreui/utils';\nimport {CChartLine} from '@coreui/react-chartjs';\n\nconst ChartLineSimple = (props) => {\n  const {borderColor, backgroundColor, pointHoverBackgroundColor, dataPoints, label, pointed, ...attributes} = props;\n\n  const pointHoverColor = (() => {\n    if (pointHoverBackgroundColor) {\n      return pointHoverBackgroundColor;\n    } else if (backgroundColor !== 'transparent') {\n      return backgroundColor;\n    }\n    return borderColor;\n  })();\n\n  const defaultDatasets = (() => {\n    return [\n      {\n        data: dataPoints,\n        borderColor: getColor(borderColor),\n        backgroundColor: getColor(backgroundColor),\n        pointBackgroundColor: getColor(pointHoverColor),\n        pointHoverBackgroundColor: getColor(pointHoverColor),\n        label,\n      },\n    ];\n  })();\n\n  const pointedOptions = (() => {\n    return {\n      scales: {\n        xAxes: [\n          {\n            offset: true,\n            gridLines: {\n              color: 'transparent',\n              zeroLineColor: 'transparent',\n            },\n            ticks: {\n              fontSize: 2,\n              fontColor: 'transparent',\n            },\n          },\n        ],\n        yAxes: [\n          {\n            display: false,\n            ticks: {\n              display: false,\n              min: Math.min.apply(Math, dataPoints) - 5,\n              max: Math.max.apply(Math, dataPoints) + 5,\n            },\n          },\n        ],\n      },\n      elements: {\n        line: {\n          borderWidth: 1,\n        },\n        point: {\n          radius: 4,\n          hitRadius: 10,\n          hoverRadius: 4,\n        },\n      },\n    };\n  })();\n\n  const straightOptions = (() => {\n    return {\n      scales: {\n        xAxes: [\n          {\n            display: false,\n          },\n        ],\n        yAxes: [\n          {\n            display: false,\n          },\n        ],\n      },\n      elements: {\n        line: {\n          borderWidth: 2,\n        },\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4,\n        },\n      },\n    };\n  })();\n\n  const defaultOptions = (() => {\n    const options = pointed ? pointedOptions : straightOptions;\n    return Object.assign({}, options, {\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n      },\n    });\n  })();\n\n  const computedDatasets = (() => {\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {});\n  })();\n\n  const computedOptions = (() => {\n    return deepObjectsMerge(defaultOptions, attributes.options || {});\n  })();\n\n  // render\n\n  return <CChartLine {...attributes} datasets={computedDatasets} options={computedOptions} labels={label} />;\n};\n\nChartLineSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  borderColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool,\n};\n\nChartLineSimple.defaultProps = {\n  borderColor: 'rgba(255,255,255,.55)',\n  backgroundColor: 'transparent',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales',\n};\n\nexport default ChartLineSimple;\n"]}]}