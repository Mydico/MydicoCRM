{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/components/notifications/toaster/Toaster.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/components/notifications/toaster/Toaster.js","mtime":1619203469175},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOyB9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpOyB9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHsgaWYgKHR5cGVvZiBTeW1ib2wgIT09ICJ1bmRlZmluZWQiICYmIFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOyB9CgpmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShhcnIpOyB9CgpmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsgfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC4iKTsgfQoKZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSAic3RyaW5nIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09ICJPYmplY3QiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSAiTWFwIiB8fCBuID09PSAiU2V0IikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSAiQXJndW1lbnRzIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH0KCmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gInVuZGVmaW5lZCIgfHwgIShTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpKSByZXR1cm47IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSAhPSBudWxsKSBfaVsicmV0dXJuIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9CgpmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH0KCmltcG9ydCBSZWFjdCwgeyB1c2VJbXBlcmF0aXZlSGFuZGxlLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgQ0NhcmQsIENDYXJkSGVhZGVyLCBDQ2FyZEJvZHksIENUb2FzdCwgQ1RvYXN0Qm9keSwgQ1RvYXN0SGVhZGVyLCBDVG9hc3RlciwgQ0Zvcm0sIENJbnB1dCwgQ0lucHV0Q2hlY2tib3gsIENCdXR0b24sIENDb250YWluZXIsIENSb3csIENDb2wsIENGb3JtR3JvdXAsIENMYWJlbCB9IGZyb20gJ0Bjb3JldWkvcmVhY3QnOwpleHBvcnQgdmFyIFRvYXN0ZXIgPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiAocHJvcHMsIHJlZikgewogIHZhciBwb3NpdGlvbnMgPSBbJ3N0YXRpYycsICd0b3AtbGVmdCcsICd0b3AtY2VudGVyJywgJ3RvcC1yaWdodCcsICd0b3AtZnVsbCcsICdib3R0b20tbGVmdCcsICdib3R0b20tY2VudGVyJywgJ2JvdHRvbS1yaWdodCcsICdib3R0b20tZnVsbCddOwoKICB2YXIgX3VzZVN0YXRlID0gdXNlU3RhdGUoW10pLAogICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSwKICAgICAgdG9hc3RzID0gX3VzZVN0YXRlMlswXSwKICAgICAgc2V0VG9hc3RzID0gX3VzZVN0YXRlMlsxXTsKCiAgdmFyIF91c2VTdGF0ZTMgPSB1c2VTdGF0ZSgndG9wLXJpZ2h0JyksCiAgICAgIF91c2VTdGF0ZTQgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUzLCAyKSwKICAgICAgcG9zaXRpb24gPSBfdXNlU3RhdGU0WzBdLAogICAgICBzZXRQb3NpdGlvbiA9IF91c2VTdGF0ZTRbMV07CgogIHZhciBfdXNlU3RhdGU1ID0gdXNlU3RhdGUodHJ1ZSksCiAgICAgIF91c2VTdGF0ZTYgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGU1LCAyKSwKICAgICAgYXV0b2hpZGUgPSBfdXNlU3RhdGU2WzBdLAogICAgICBzZXRBdXRvaGlkZSA9IF91c2VTdGF0ZTZbMV07CgogIHZhciBfdXNlU3RhdGU3ID0gdXNlU3RhdGUoMTAwMCksCiAgICAgIF91c2VTdGF0ZTggPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGU3LCAyKSwKICAgICAgYXV0b2hpZGVWYWx1ZSA9IF91c2VTdGF0ZThbMF0sCiAgICAgIHNldEF1dG9oaWRlVmFsdWUgPSBfdXNlU3RhdGU4WzFdOwoKICB2YXIgX3VzZVN0YXRlOSA9IHVzZVN0YXRlKHRydWUpLAogICAgICBfdXNlU3RhdGUxMCA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZTksIDIpLAogICAgICBjbG9zZUJ1dHRvbiA9IF91c2VTdGF0ZTEwWzBdLAogICAgICBzZXRDbG9zZUJ1dHRvbiA9IF91c2VTdGF0ZTEwWzFdOwoKICB2YXIgX3VzZVN0YXRlMTEgPSB1c2VTdGF0ZSh0cnVlKSwKICAgICAgX3VzZVN0YXRlMTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUxMSwgMiksCiAgICAgIGZhZGUgPSBfdXNlU3RhdGUxMlswXSwKICAgICAgc2V0RmFkZSA9IF91c2VTdGF0ZTEyWzFdOyAvLyBjb25zdCBhZGRUb2FzdCA9ICgpID0+IHsKICAvLyAgIHNldFRvYXN0cyhbCiAgLy8gICAgIC4uLnRvYXN0cywKICAvLyAgICAgeyBwb3NpdGlvbiwgYXV0b2hpZGU6IGF1dG9oaWRlICYmIGF1dG9oaWRlVmFsdWUsIGNsb3NlQnV0dG9uLCBmYWRlIH0KICAvLyAgIF0pCiAgLy8gfQoKCiAgdXNlSW1wZXJhdGl2ZUhhbmRsZShyZWYsIGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB7CiAgICAgIGFkZFRvYXN0OiBmdW5jdGlvbiBhZGRUb2FzdCgpIHsKICAgICAgICBzZXRUb2FzdHMoW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSh0b2FzdHMpLCBbewogICAgICAgICAgcG9zaXRpb246IHBvc2l0aW9uLAogICAgICAgICAgYXV0b2hpZGU6IGF1dG9oaWRlICYmIGF1dG9oaWRlVmFsdWUsCiAgICAgICAgICBjbG9zZUJ1dHRvbjogY2xvc2VCdXR0b24sCiAgICAgICAgICBmYWRlOiBmYWRlCiAgICAgICAgfV0pKTsKICAgICAgfQogICAgfTsKICB9KTsKCiAgdmFyIHRvYXN0ZXJzID0gZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHRvYXN0cy5yZWR1Y2UoZnVuY3Rpb24gKHRvYXN0ZXJzLCB0b2FzdCkgewogICAgICB0b2FzdGVyc1t0b2FzdC5wb3NpdGlvbl0gPSB0b2FzdGVyc1t0b2FzdC5wb3NpdGlvbl0gfHwgW107CiAgICAgIHRvYXN0ZXJzW3RvYXN0LnBvc2l0aW9uXS5wdXNoKHRvYXN0KTsKICAgICAgcmV0dXJuIHRvYXN0ZXJzOwogICAgfSwge30pOwogIH0oKTsKCiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENDYXJkLCB7CiAgICByZWY6IHJlZiwKICAgIGNsYXNzTmFtZTogIiIKICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDQ2FyZEJvZHksIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENDb250YWluZXIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENSb3csIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENDb2wsIHsKICAgIHNtOiAiMTIiLAogICAgbGc6ICI2IgogIH0sIE9iamVjdC5rZXlzKHRvYXN0ZXJzKS5tYXAoZnVuY3Rpb24gKHRvYXN0ZXJLZXkpIHsKICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDVG9hc3RlciwgewogICAgICBwb3NpdGlvbjogdG9hc3RlcktleSwKICAgICAga2V5OiAndG9hc3RlcicgKyB0b2FzdGVyS2V5CiAgICB9LCB0b2FzdGVyc1t0b2FzdGVyS2V5XS5tYXAoZnVuY3Rpb24gKHRvYXN0LCBrZXkpIHsKICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENUb2FzdCwgewogICAgICAgIGtleTogJ3RvYXN0JyArIGtleSwKICAgICAgICBzaG93OiB0cnVlLAogICAgICAgIGF1dG9oaWRlOiB0b2FzdC5hdXRvaGlkZSwKICAgICAgICBmYWRlOiB0b2FzdC5mYWRlLAogICAgICAgIHN0eWxlOiB7CiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdncmVlbicKICAgICAgICB9CiAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENUb2FzdEhlYWRlciwgewogICAgICAgIGNsb3NlQnV0dG9uOiB0b2FzdC5jbG9zZUJ1dHRvbiwKICAgICAgICBzdHlsZTogewogICAgICAgICAgY29sb3I6ICdncmVlbicKICAgICAgICB9CiAgICAgIH0sICJUaFx4RjRuZyBiXHhFMW8iKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ1RvYXN0Qm9keSwgewogICAgICAgIHN0eWxlOiB7CiAgICAgICAgICBjb2xvcjogJ3doaXRlJwogICAgICAgIH0KICAgICAgfSwgcHJvcHMubWVzc2FnZSkpOwogICAgfSkpOwogIH0pKSkpKSk7Cn0pOwpleHBvcnQgZGVmYXVsdCBUb2FzdGVyOw=="},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/components/notifications/toaster/Toaster.js"],"names":["React","useImperativeHandle","useState","CCard","CCardHeader","CCardBody","CToast","CToastBody","CToastHeader","CToaster","CForm","CInput","CInputCheckbox","CButton","CContainer","CRow","CCol","CFormGroup","CLabel","Toaster","forwardRef","props","ref","positions","toasts","setToasts","position","setPosition","autohide","setAutohide","autohideValue","setAutohideValue","closeButton","setCloseButton","fade","setFade","addToast","toasters","reduce","toast","push","Object","keys","map","toasterKey","key","backgroundColor","color","message"],"mappings":"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","sourcesContent":["import React, { useImperativeHandle, useState } from 'react';\nimport {\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CToast,\n  CToastBody,\n  CToastHeader,\n  CToaster,\n  CForm,\n  CInput,\n  CInputCheckbox,\n  CButton,\n  CContainer,\n  CRow,\n  CCol,\n  CFormGroup,\n  CLabel\n} from '@coreui/react';\n\nexport const Toaster = React.forwardRef((props, ref) => {\n  const positions = [\n    'static',\n    'top-left',\n    'top-center',\n    'top-right',\n    'top-full',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right',\n    'bottom-full'\n  ];\n\n  const [toasts, setToasts] = useState([]);\n\n  const [position, setPosition] = useState('top-right');\n  const [autohide, setAutohide] = useState(true);\n  const [autohideValue, setAutohideValue] = useState(1000);\n  const [closeButton, setCloseButton] = useState(true);\n  const [fade, setFade] = useState(true);\n\n  // const addToast = () => {\n  //   setToasts([\n  //     ...toasts,\n  //     { position, autohide: autohide && autohideValue, closeButton, fade }\n  //   ])\n  // }\n\n  useImperativeHandle(ref, () => ({\n    addToast() {\n      setToasts([...toasts, { position, autohide: autohide && autohideValue, closeButton, fade }]);\n    }\n  }));\n\n  const toasters = (() => {\n    return toasts.reduce((toasters, toast) => {\n      toasters[toast.position] = toasters[toast.position] || [];\n      toasters[toast.position].push(toast);\n      return toasters;\n    }, {});\n  })();\n\n  return (\n    <CCard ref={ref} className=\"\">\n      <CCardBody>\n        <CContainer>\n          <CRow>\n            <CCol sm=\"12\" lg=\"6\">\n              {Object.keys(toasters).map(toasterKey => (\n                <CToaster position={toasterKey} key={'toaster' + toasterKey}>\n                  {toasters[toasterKey].map((toast, key) => {\n                    return (\n                      <CToast\n                        key={'toast' + key}\n                        show={true}\n                        autohide={toast.autohide}\n                        fade={toast.fade}\n                        style={{ backgroundColor: 'green' }}\n                      >\n                        <CToastHeader closeButton={toast.closeButton} style={{ color: 'green' }}>\n                          Thông báo\n                        </CToastHeader>\n                        <CToastBody style={{ color: 'white' }}>{props.message}</CToastBody>\n                      </CToast>\n                    );\n                  })}\n                </CToaster>\n              ))}\n            </CCol>\n          </CRow>\n        </CContainer>\n      </CCardBody>\n    </CCard>\n  );\n});\n\nexport default Toaster;\n"]}]}