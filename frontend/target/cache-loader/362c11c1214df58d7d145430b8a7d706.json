{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/user/UserPermission/create-permission.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/user/UserPermission/create-permission.js","mtime":1617822485359},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/user/UserPermission/create-permission.js"],"names":["React","useEffect","useRef","useState","CButton","CCard","CCardHeader","CCardBody","CCol","CForm","CInvalidFeedback","CFormGroup","CLabel","CInput","CRow","CToaster","CCardTitle","CInputCheckbox","CButtonGroup","CTextarea","CIcon","Formik","Yup","useDispatch","useSelector","creatingPermissionGroups","getPermissions","getPermissionType","Toaster","current","useHistory","fetching","globalizedPermissionGroupsSelectors","reset","Select","Table","validationSchema","values","object","shape","name","string","min","required","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","mappingStatus","ACTIVE","INACTIVE","DELETED","validationError","FIRST_ERROR","inner","reduce","errors","path","findFirstError","formName","hasError","form","document","forms","i","length","focus","validateForm","fieldName","Boolean","CreatePermissionGroups","state","permission","initialState","checkboxRef","toastRef","dispatch","history","checkbox","setCheckbox","selectedPermission","setSelectedPermission","initialValues","note","onGetPermission","value","params","type","onSubmit","setSubmitting","setErrors","setStatus","resetForm","arrPermission","forEach","selectPer","permissions","concat","map","prev","e","console","log","onCheck","setCheckboxFunc","checkboxValue","persist","prevState","target","onSelectAll","checkedValue","copyCheckbox","Object","keys","key","checked","Array","isArray","selectedArr","push","handleSelectPermission","removePermission","index","arr","splice","typeName","foundedIndex","findIndex","per","filter","includes","id","selectedPermissionObj","findEmpty","item","tempPer","updatingSuccess","addToast","goBack","touched","status","dirty","handleChange","handleBlur","handleSubmit","setFieldValue","isSubmitting","isValid","handleReset","setTouched","permissionTypes","label","description","entity","join","loading"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n  CButton,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CCol,\n  CForm,\n  CInvalidFeedback,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CRow,\n  CToaster,\n  CCardTitle,\n  CInputCheckbox,\n  CButtonGroup,\n  CTextarea\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { creatingPermissionGroups, getPermissions, getPermissionType } from './permission.api';\n\nimport Toaster from '../../../components/notifications/toaster/Toaster';\nimport { current } from '@reduxjs/toolkit';\nimport { useHistory } from 'react-router-dom';\nimport { fetching, globalizedPermissionGroupsSelectors, reset } from './permission.reducer';\nimport Select from 'react-select';\nimport { Table } from 'reactstrap';\n\nconst validationSchema = function(values) {\n  return Yup.object().shape({\n    name: Yup.string()\n      .min(5, `Tên nhóm quyền phải lớn hơn 5 kí tự`)\n      .required('Tên nhóm quyền không để trống')\n  });\n};\n\nconst validate = getValidationSchema => {\n  return values => {\n    const validationSchema = getValidationSchema(values);\n    try {\n      validationSchema.validateSync(values, { abortEarly: false });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nexport const mappingStatus = {\n  ACTIVE: 'ĐANG HOẠT ĐỘNG',\n  INACTIVE: 'KHÔNG HOẠT ĐỘNG',\n  DELETED: 'ĐÃ XÓA'\n};\n\nconst getErrorsFromValidationError = validationError => {\n  const FIRST_ERROR = 0;\n  return validationError.inner.reduce((errors, error) => {\n    return {\n      ...errors,\n      [error.path]: error.errors[FIRST_ERROR]\n    };\n  }, {});\n};\n\nconst findFirstError = (formName, hasError) => {\n  const form = document.forms[formName];\n  for (let i = 0; i < form.length; i++) {\n    if (hasError(form[i].name)) {\n      form[i].focus();\n      break;\n    }\n  }\n};\n\nconst validateForm = errors => {\n  findFirstError('simpleForm', fieldName => {\n    return Boolean(errors[fieldName]);\n  });\n};\n\nconst CreatePermissionGroups = () => {\n  const { initialState } = useSelector(state => state.permission);\n  const checkboxRef = useRef();\n  const toastRef = useRef();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [checkbox, setCheckbox] = useState({});\n  const [selectedPermission, setSelectedPermission] = useState([]);\n  const initialValues = {\n    name: '',\n    note: ''\n  };\n\n  useEffect(() => {\n    dispatch(getPermissionType());\n    return () => {\n      dispatch(reset())\n    }\n  }, []);\n\n  const onGetPermission = value => {\n    const params = { type: value };\n    dispatch(getPermissions(params));\n  };\n\n  const onSubmit = (values, { setSubmitting, setErrors, setStatus, resetForm }) => {\n    let arrPermission = [];\n    try {\n      selectedPermission.forEach(selectPer => {\n        if (selectPer.permissions) {\n          arrPermission = arrPermission.concat(selectPer.permissions);\n        }\n      });\n      if (arrPermission.length === 0) return;\n      if (selectedPermission.map(permission => permission.permissions).reduce((prev, current) => [...prev, ...current], []).length === 0)\n        return;\n      values.permissions = arrPermission;\n    } catch (e) {\n      console.log(e);\n    }\n    dispatch(fetching());\n    dispatch(creatingPermissionGroups(values));\n    resetForm();\n  };\n\n  const onCheck = (setCheckboxFunc, checkboxValue) => {\n    return e => {\n      e.persist();\n      setCheckboxFunc(prevState => ({ ...prevState, [e.target.value]: !checkboxValue[e.target.value] }));\n    };\n  };\n\n  const onSelectAll = checkedValue => () => {\n    const copyCheckbox = { ...checkbox };\n    Object.keys(copyCheckbox).forEach(key => {\n      copyCheckbox[key] = checkedValue;\n    });\n    setCheckbox(copyCheckbox);\n    if (checkboxRef.current) {\n      checkboxRef.current.checked = checkedValue;\n    }\n  };\n\n  useEffect(() => {\n    if (checkbox && initialState.permissions && Array.isArray(initialState.permissions) && initialState.permissions.length > 0) {\n      const selectedArr = [];\n      Object.keys(checkbox).forEach(key => {\n        if (checkbox[key]) {\n          selectedArr.push(key);\n        }\n      });\n      handleSelectPermission(null, selectedArr);\n    }\n  }, [checkbox]);\n\n  const removePermission = index => {\n    const arr = [...selectedPermission];\n    arr.splice(index, 1);\n    setSelectedPermission(arr);\n  };\n\n  const handleSelectPermission = (e, values) => {\n    /* eslint-disable no-console */\n    if (values && Array.isArray(values) && values.length > 0) {\n      const type = initialState.permissions[0].type;\n      const typeName = initialState.permissions[0].typeName;\n      const foundedIndex = selectedPermission.findIndex(per => per.type === type);\n      if (foundedIndex > -1) {\n        selectedPermission[foundedIndex].permissions = initialState.permissions.filter(permission => values.includes(permission.id));\n        setSelectedPermission([...selectedPermission]);\n      } else {\n        const selectedPermissionObj = {\n          type,\n          typeName,\n          permissions: initialState.permissions.filter(permission => values.includes(permission.id))\n        };\n\n        setSelectedPermission([...selectedPermission, selectedPermissionObj]);\n      }\n    } else if (values && Array.isArray(values) && values.length == 0) {\n      setSelectedPermission([...selectedPermission, values]);\n    } else {\n      const arr = [...selectedPermission];\n      const findEmpty = arr.findIndex(item => item.permissions.length === 0);\n      if (findEmpty > -1) arr.splice(findEmpty, 1);\n      setSelectedPermission(arr);\n    }\n  };\n\n  useEffect(() => {\n    if (initialState.permissions && Array.isArray(initialState.permissions)) {\n      const tempPer = {};\n      initialState.permissions.forEach(per => {\n        tempPer[per.id] = false;\n      });\n      setCheckbox(tempPer);\n    }\n  }, [initialState.permissions]);\n\n  useEffect(() => {\n    if (initialState.updatingSuccess) {\n      toastRef.current.addToast();\n      dispatch(reset());\n      history.goBack();\n    }\n  }, [initialState.updatingSuccess]);\n\n  return (\n    <CCard>\n      <CCardHeader>\n        <CCardTitle className=\"card-title mb-0\">Thêm mới nhóm quyền</CCardTitle>\n      </CCardHeader>\n      <CCardBody>\n        <Formik initialValues={initialValues} validate={validate(validationSchema)} onSubmit={onSubmit}>\n          {({\n            values,\n            errors,\n            touched,\n            status,\n            dirty,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            setFieldValue,\n            isSubmitting,\n            isValid,\n            handleReset,\n            setTouched\n          }) => (\n            <CForm onSubmit={handleSubmit} noValidate name=\"simpleForm\">\n              <CCol lg=\"12\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"login\">Tên nhóm quyền</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    placeholder=\"Tên nhóm quyền\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.name}\n                  />\n                  <CInvalidFeedback className=\"d-block\">{errors.name}</CInvalidFeedback>\n                </CFormGroup>\n              </CCol>\n              <CCol lg=\"12\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"userName\">Chọn nhóm chức năng</CLabel>\n                  <Select\n                    name=\"department\"\n                    onChange={e => {\n                      onGetPermission(e.value);\n                    }}\n                    placeholder=\"Chọn nhóm chức năng\"\n                    options={initialState.permissionTypes.map(item => ({\n                      value: item.name,\n                      label: item.description\n                    }))}\n                  />\n                </CFormGroup>\n              </CCol>\n              <CCol lg=\"12\">\n                <CFormGroup column>\n                  <CRow>\n                    <CCol className=\"mb-2\">\n                      <CLabel>Chức năng</CLabel>\n                    </CCol>\n                    <CCol className=\"mb-2\">\n                      <CButtonGroup>\n                        <CButton color=\"secondary\" onClick={onSelectAll(true)}>\n                          Chọn tất cả\n                        </CButton>\n                        <CButton color=\"secondary\" onClick={onSelectAll(false)}>\n                          Bỏ chọn tất cả\n                        </CButton>\n                      </CButtonGroup>\n                    </CCol>\n                  </CRow>\n                  <CCol md=\"9\">\n                    {initialState.permissions &&\n                      initialState.permissions.map(entity => {\n                        return (\n                          <CFormGroup variant=\"checkbox\" className=\"mb-2\">\n                            <CInputCheckbox\n                              className=\"form-check-input\"\n                              id={entity.id}\n                              checked={checkbox[entity.id]}\n                              onChange={onCheck(setCheckbox, checkbox)}\n                              name={entity.id}\n                              value={entity.id}\n                            />\n                            <CLabel variant=\"checkbox\" htmlFor=\"radio1\">\n                              {entity.description}\n                            </CLabel>\n                          </CFormGroup>\n                        );\n                      })}\n                  </CCol>\n                </CFormGroup>\n              </CCol>\n              <Table responsive>\n                <thead>\n                  <tr>\n                    <th className=\"hand text-right index-column\">\n                      <span>STT</span>\n                    </th>\n                    <th className=\"hand text-left\">\n                      <span>Nhóm chức năng</span>\n                    </th>\n                    <th className=\"hand text-left\">\n                      <span>Danh sách chức năng</span>\n                    </th>\n                    <th>\n                      <span>Thao tác</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {selectedPermission.map((permission, i) => {\n                    if (permission.permissions && permission.permissions.length > 0) {\n                      return (\n                        <tr key={permission.type}>\n                          <td className=\"text-center\">{i + 1}</td>\n                          <td>{permission.typeName}</td>\n                          <td>{permission.permissions ? permission.permissions.map(per => per.description).join(' -- ') : ''}</td>\n                          <td className=\"text-center\">\n                            <CButton type=\"reset\" size=\"lg\" color=\"danger\" onClick={() => removePermission(i)} className=\"ml-5\">\n                              <CIcon name=\"cil-ban\" />\n                            </CButton>\n                          </td>\n                        </tr>\n                      );\n                    }\n                  })}\n                </tbody>\n              </Table>\n              <CCol lg=\"12\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"login\">Ghi chú</CLabel>\n                  <CTextarea\n                    type=\"textarea\"\n                    name=\"note\"\n                    id=\"note\"\n                    placeholder=\"Ghi chú\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.note}\n                  />\n                </CFormGroup>\n              </CCol>\n              <CFormGroup className=\"d-flex justify-content-center\">\n                <CButton type=\"submit\" size=\"lg\" color=\"primary\" disabled={initialState.loading}>\n                  <CIcon name=\"cil-save\" /> {initialState.loading ? 'Đang xử lý' : 'Tạo mới'}\n                </CButton>\n                <CButton type=\"reset\" size=\"lg\" color=\"danger\" onClick={handleReset} className=\"ml-5\">\n                  <CIcon name=\"cil-ban\" /> Xóa nhập liệu\n                </CButton>\n              </CFormGroup>\n            </CForm>\n          )}\n        </Formik>\n      </CCardBody>\n      <Toaster ref={toastRef} message=\"Tạo mới nhóm quyền thành công\" />\n    </CCard>\n  );\n};\n\nexport default CreatePermissionGroups;\n"]}]}