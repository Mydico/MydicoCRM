{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/user/UserPermission/create-permission.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/user/UserPermission/create-permission.js","mtime":1620802363158},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/user/UserPermission/create-permission.js"],"names":["React","useEffect","useRef","useState","CButton","CCard","CCardHeader","CCardBody","CCol","CForm","CInvalidFeedback","CFormGroup","CLabel","CInput","CRow","CCardTitle","CInputCheckbox","CButtonGroup","CTextarea","CIcon","Formik","Yup","useDispatch","useSelector","creatingPermissionGroups","getPermissions","getPermissionType","useHistory","fetching","reset","Select","Table","validationSchema","object","shape","name","string","min","required","validate","mappingStatus","ACTIVE","DISABLED","DELETED","CreatePermissionGroups","state","permission","initialState","checkboxRef","dispatch","history","checkbox","setCheckbox","selectedPermission","setSelectedPermission","initialValues","note","onGetPermission","value","params","type","onSubmit","values","resetForm","arrPermission","forEach","selectPer","permissions","concat","length","map","reduce","prev","current","e","console","log","onCheck","setCheckboxFunc","checkboxValue","persist","prevState","target","onSelectAll","checkedValue","copyCheckbox","Object","keys","key","checked","Array","isArray","selectedArr","push","handleSelectPermission","removePermission","index","arr","splice","typeName","foundedIndex","findIndex","per","filter","includes","id","toString","selectedPermissionObj","findEmpty","item","tempPer","updatingSuccess","goBack","errors","handleChange","handleBlur","handleSubmit","handleReset","zIndex","permissionTypes","label","description","entity","i","join","loading"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n  CButton,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CCol,\n  CForm,\n  CInvalidFeedback,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CRow,\n  CCardTitle,\n  CInputCheckbox,\n  CButtonGroup,\n  CTextarea\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { creatingPermissionGroups, getPermissions, getPermissionType } from './permission.api';\n\nimport { useHistory } from 'react-router-dom';\nimport { fetching, reset } from './permission.reducer';\nimport Select from 'react-select';\nimport { Table } from 'reactstrap';\n\nconst validationSchema = function() {\n  return Yup.object().shape({\n    name: Yup.string()\n      .min(5, `Tên nhóm quyền phải lớn hơn 5 kí tự`)\n      .required('Tên nhóm quyền không để trống')\n  });\n};\n\nimport { validate } from '../../../../shared/utils/normalize';\n\nexport const mappingStatus = {\n  ACTIVE: 'ĐANG HOẠT ĐỘNG',\n  DISABLED: 'KHÔNG HOẠT ĐỘNG',\n  DELETED: 'ĐÃ XÓA'\n};\n\nconst CreatePermissionGroups = () => {\n  const { initialState } = useSelector(state => state.permission);\n  const checkboxRef = useRef();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [checkbox, setCheckbox] = useState({});\n  const [selectedPermission, setSelectedPermission] = useState([]);\n  const initialValues = {\n    name: '',\n    note: ''\n  };\n\n  useEffect(() => {\n    dispatch(getPermissionType());\n    return () => {\n      dispatch(reset());\n    };\n  }, []);\n\n  const onGetPermission = value => {\n    const params = { type: value };\n    dispatch(getPermissions(params));\n  };\n\n  const onSubmit = (values, { resetForm }) => {\n    let arrPermission = [];\n    try {\n      selectedPermission.forEach(selectPer => {\n        if (selectPer.permissions) {\n          arrPermission = arrPermission.concat(selectPer.permissions);\n        }\n      });\n      if (arrPermission.length === 0) return;\n      if (selectedPermission.map(permission => permission.permissions).reduce((prev, current) => [...prev, ...current], []).length === 0) {\n        return;\n      }\n      values.permissions = arrPermission;\n    } catch (e) {\n      console.log(e);\n    }\n    dispatch(fetching());\n    dispatch(creatingPermissionGroups(values));\n    resetForm();\n  };\n\n  const onCheck = (setCheckboxFunc, checkboxValue) => {\n    return e => {\n      e.persist();\n      setCheckboxFunc(prevState => ({ ...prevState, [e.target.value]: !checkboxValue[e.target.value] }));\n    };\n  };\n\n  const onSelectAll = checkedValue => () => {\n    const copyCheckbox = { ...checkbox };\n    Object.keys(copyCheckbox).forEach(key => {\n      copyCheckbox[key] = checkedValue;\n    });\n    setCheckbox(copyCheckbox);\n    if (checkboxRef.current) {\n      checkboxRef.current.checked = checkedValue;\n    }\n  };\n\n  useEffect(() => {\n    if (checkbox && initialState.permissions && Array.isArray(initialState.permissions) && initialState.permissions.length > 0) {\n      const selectedArr = [];\n      Object.keys(checkbox).forEach(key => {\n        if (checkbox[key]) {\n          selectedArr.push(key);\n        }\n      });\n      handleSelectPermission(null, selectedArr);\n    }\n  }, [checkbox]);\n\n  const removePermission = index => {\n    const arr = [...selectedPermission];\n    arr.splice(index, 1);\n    setSelectedPermission(arr);\n  };\n\n  const handleSelectPermission = (e, values) => {\n    console.log(values);\n    /* eslint-disable no-console */\n    const type = initialState.permissions[0].type;\n    const typeName = initialState.permissions[0].typeName;\n    console.log(type, typeName);\n    const foundedIndex = selectedPermission.findIndex(per => per.type === type);\n    if (values && Array.isArray(values) && values.length > 0) {\n      if (foundedIndex > -1) {\n        selectedPermission[foundedIndex].permissions = initialState.permissions.filter(permission =>\n          values.includes(permission.id.toString())\n        );\n        setSelectedPermission([...selectedPermission]);\n      } else {\n        const selectedPermissionObj = {\n          type,\n          typeName,\n          permissions: initialState.permissions.filter(permission => values.includes(permission.id.toString()))\n        };\n\n        setSelectedPermission([...selectedPermission, selectedPermissionObj]);\n      }\n    } else if (values && Array.isArray(values) && values.length == 0) {\n      console.log(selectedPermission);\n      if (foundedIndex > -1) {\n        const arr = [...selectedPermission];\n        arr.splice(foundedIndex, 1);\n        console.log(arr);\n\n        setSelectedPermission(arr);\n      }\n    } else {\n      const arr = [...selectedPermission];\n      const findEmpty = arr.findIndex(item => item.permissions.length === 0);\n      if (findEmpty > -1) arr.splice(findEmpty, 1);\n      setSelectedPermission(arr);\n    }\n  };\n\n  useEffect(() => {\n    if (initialState.permissions && Array.isArray(initialState.permissions)) {\n      const tempPer = {};\n      initialState.permissions.forEach(per => {\n        tempPer[per.id] = false;\n      });\n      setCheckbox(tempPer);\n    }\n  }, [initialState.permissions]);\n\n  useEffect(() => {\n    if (initialState.updatingSuccess) {\n      dispatch(reset());\n      history.goBack();\n    }\n  }, [initialState.updatingSuccess]);\n\n  return (\n    <CCard>\n      <CCardHeader>\n        <CCardTitle className=\"card-title mb-0\">Thêm mới nhóm quyền</CCardTitle>\n      </CCardHeader>\n      <CCardBody>\n        <Formik initialValues={initialValues} validate={validate(validationSchema)} onSubmit={onSubmit}>\n          {({ values, errors, handleChange, handleBlur, handleSubmit, handleReset }) => (\n            <CForm onSubmit={handleSubmit} noValidate name=\"simpleForm\">\n              <CCol lg=\"12\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"login\">Tên nhóm quyền</CLabel>\n                  <CInput\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    placeholder=\"Tên nhóm quyền\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.name}\n                  />\n                  <CInvalidFeedback className=\"d-block\">{errors.name}</CInvalidFeedback>\n                </CFormGroup>\n              </CCol>\n              <CCol lg=\"12\" style={{ zIndex: 100 }}>\n                <CFormGroup>\n                  <CLabel htmlFor=\"userName\">Chọn nhóm chức năng</CLabel>\n                  <Select\n                    name=\"department\"\n                    onChange={e => {\n                      onGetPermission(e.value);\n                    }}\n                    placeholder=\"Chọn nhóm chức năng\"\n                    options={initialState.permissionTypes.map(item => ({\n                      value: item.name,\n                      label: item.description\n                    }))}\n                  />\n                </CFormGroup>\n              </CCol>\n              <CCol lg=\"12\">\n                <CFormGroup column>\n                  <CRow>\n                    <CCol className=\"mb-2\">\n                      <CLabel>Chức năng</CLabel>\n                    </CCol>\n                    <CCol className=\"mb-2\">\n                      <CButtonGroup>\n                        <CButton color=\"secondary\" onClick={onSelectAll(true)}>\n                          Chọn tất cả\n                        </CButton>\n                        <CButton color=\"secondary\" onClick={onSelectAll(false)}>\n                          Bỏ chọn tất cả\n                        </CButton>\n                      </CButtonGroup>\n                    </CCol>\n                  </CRow>\n                  <CCol md=\"9\">\n                    {initialState.permissions &&\n                      initialState.permissions.map(entity => {\n                        return (\n                          <CFormGroup variant=\"checkbox\" className=\"mb-2\">\n                            <CInputCheckbox\n                              className=\"form-check-input\"\n                              id={entity.id}\n                              checked={checkbox[entity.id]}\n                              onChange={onCheck(setCheckbox, checkbox)}\n                              name={entity.id}\n                              value={entity.id}\n                            />\n                            <CLabel variant=\"checkbox\" htmlFor=\"radio1\">\n                              {entity.description}\n                            </CLabel>\n                          </CFormGroup>\n                        );\n                      })}\n                  </CCol>\n                </CFormGroup>\n              </CCol>\n              <Table responsive>\n                <thead>\n                  <tr>\n                    <th className=\"hand text-right index-column\">\n                      <span>STT</span>\n                    </th>\n                    <th className=\"hand text-left\">\n                      <span>Nhóm chức năng</span>\n                    </th>\n                    <th className=\"hand text-left\">\n                      <span>Danh sách chức năng</span>\n                    </th>\n                    <th>\n                      <span>Thao tác</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {selectedPermission.map((permission, i) => {\n                    if (permission.permissions && permission.permissions.length > 0) {\n                      return (\n                        <tr key={permission.type}>\n                          <td className=\"text-center\">{i + 1}</td>\n                          <td>{permission.typeName}</td>\n                          <td>{permission.permissions ? permission.permissions.map(per => per.description).join(' -- ') : ''}</td>\n                          <td className=\"text-center\">\n                            <CButton type=\"reset\" size=\"lg\" color=\"danger\" onClick={() => removePermission(i)} className=\"ml-5\">\n                              <CIcon name=\"cil-ban\" />\n                            </CButton>\n                          </td>\n                        </tr>\n                      );\n                    }\n                  })}\n                </tbody>\n              </Table>\n              <CCol lg=\"12\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"login\">Ghi chú</CLabel>\n                  <CTextarea\n                    type=\"textarea\"\n                    name=\"note\"\n                    id=\"note\"\n                    placeholder=\"Ghi chú\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.note}\n                  />\n                </CFormGroup>\n              </CCol>\n              <CFormGroup className=\"d-flex justify-content-center\">\n                <CButton type=\"submit\" size=\"lg\" color=\"primary\" disabled={initialState.loading}>\n                  <CIcon name=\"cil-save\" /> {initialState.loading ? 'Đang xử lý' : 'Tạo mới'}\n                </CButton>\n                <CButton type=\"reset\" size=\"lg\" color=\"danger\" onClick={handleReset} className=\"ml-5\">\n                  <CIcon name=\"cil-ban\" /> Xóa nhập liệu\n                </CButton>\n              </CFormGroup>\n            </CForm>\n          )}\n        </Formik>\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default CreatePermissionGroups;\n"]}]}