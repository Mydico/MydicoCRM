{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/Import/warehouse-import.reducer.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/Import/warehouse-import.reducer.js","mtime":1619203472680},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9leHRyYVJlZHVjZXJzOwoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCmltcG9ydCB7IGNyZWF0ZUVudGl0eUFkYXB0ZXIsIGNyZWF0ZVNlbGVjdG9yLCBjcmVhdGVTbGljZSB9IGZyb20gJ0ByZWR1eGpzL3Rvb2xraXQnOwppbXBvcnQgeyBjcmVhdGluZ1dhcmVob3VzZUltcG9ydCwgZ2V0V2FyZWhvdXNlSW1wb3J0LCBnZXREZXRhaWxXYXJlaG91c2VJbXBvcnQsIHVwZGF0ZVdhcmVob3VzZUltcG9ydCwgZ2V0V2FyZWhvdXNlRXhwb3J0IH0gZnJvbSAnLi93YXJlaG91c2UtaW1wb3J0LmFwaSc7CnZhciBpbml0aWFsU3RhdGUgPSB7CiAgbG9hZGluZzogZmFsc2UsCiAgdXBkYXRpbmdTdWNjZXNzOiBmYWxzZSwKICB0b3RhbEl0ZW06IDAsCiAgY2l0aWVzOiBbXSwKICBkaXN0cmljdHM6IFtdLAogIHdhcmRzOiBbXSwKICB0eXBlOiBbXSwKICBicmFuY2g6IFtdLAogIHN0YXR1czogW10KfTsKZXhwb3J0IHZhciB3YXJlaG91c2VJbXBvcnRBZGFwdGVyID0gY3JlYXRlRW50aXR5QWRhcHRlcih7CiAgLy8gQXNzdW1lIElEcyBhcmUgc3RvcmVkIGluIGEgZmllbGQgb3RoZXIgdGhhbiBgYm9vay5pZGAKICBzZWxlY3RJZDogZnVuY3Rpb24gc2VsZWN0SWQod2FyZWhvdXNlKSB7CiAgICByZXR1cm4gd2FyZWhvdXNlLmlkOwogIH0sCiAgLy8gS2VlcCB0aGUgImFsbCBJRHMiIGFycmF5IHNvcnRlZCBiYXNlZCBvbiBib29rIHRpdGxlcwogIHNvcnRDb21wYXJlcjogZnVuY3Rpb24gc29ydENvbXBhcmVyKGEsIGIpIHsKICAgIHJldHVybiBiLnN0YXR1cy5sb2NhbGVDb21wYXJlKGEuc3RhdHVzKTsKICB9Cn0pOwp2YXIgc2xpY2UgPSBjcmVhdGVTbGljZSh7CiAgbmFtZTogJ3dhcmVob3VzZUltcG9ydCcsCiAgaW5pdGlhbFN0YXRlOiB3YXJlaG91c2VJbXBvcnRBZGFwdGVyLmdldEluaXRpYWxTdGF0ZSh7CiAgICBpbml0aWFsU3RhdGU6IGluaXRpYWxTdGF0ZQogIH0pLAogIHJlZHVjZXJzOiB7CiAgICBmZXRjaGluZzogZnVuY3Rpb24gZmV0Y2hpbmcoc3RhdGUpIHsKICAgICAgc3RhdGUuaW5pdGlhbFN0YXRlLmxvYWRpbmcgPSB0cnVlOwogICAgfSwKICAgIHJlc2V0OiBmdW5jdGlvbiByZXNldChzdGF0ZSkgewogICAgICBzdGF0ZS5pbml0aWFsU3RhdGUubG9hZGluZyA9IGZhbHNlOwogICAgICBzdGF0ZS5pbml0aWFsU3RhdGUudXBkYXRpbmdTdWNjZXNzID0gZmFsc2U7CiAgICB9LAogICAgd2FyZWhvdXNlc0FkZE9uZTogd2FyZWhvdXNlSW1wb3J0QWRhcHRlci5hZGRPbmUsCiAgICB3YXJlaG91c2VzQWRkTWFueTogd2FyZWhvdXNlSW1wb3J0QWRhcHRlci5hZGRNYW55LAogICAgd2FyZWhvdXNlVXBkYXRlOiB3YXJlaG91c2VJbXBvcnRBZGFwdGVyLnVwZGF0ZU9uZSwKICAgIHdhcmVob3VzZVJlbW92ZTogd2FyZWhvdXNlSW1wb3J0QWRhcHRlci5yZW1vdmVPbmUKICB9LAogIGV4dHJhUmVkdWNlcnM6IChfZXh0cmFSZWR1Y2VycyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2V4dHJhUmVkdWNlcnMsIGNyZWF0aW5nV2FyZWhvdXNlSW1wb3J0LmZ1bGZpbGxlZCwgZnVuY3Rpb24gKHN0YXRlLCBhY3Rpb24pIHsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS51cGRhdGluZ1N1Y2Nlc3MgPSB0cnVlOwogICAgc3RhdGUuaW5pdGlhbFN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9leHRyYVJlZHVjZXJzLCBjcmVhdGluZ1dhcmVob3VzZUltcG9ydC5yZWplY3RlZCwgZnVuY3Rpb24gKHN0YXRlLCBhY3Rpb24pIHsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS51cGRhdGluZ1N1Y2Nlc3MgPSBmYWxzZTsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfZXh0cmFSZWR1Y2VycywgdXBkYXRlV2FyZWhvdXNlSW1wb3J0LmZ1bGZpbGxlZCwgZnVuY3Rpb24gKHN0YXRlLCBhY3Rpb24pIHsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS51cGRhdGluZ1N1Y2Nlc3MgPSB0cnVlOwogICAgc3RhdGUuaW5pdGlhbFN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9leHRyYVJlZHVjZXJzLCBnZXREZXRhaWxXYXJlaG91c2VJbXBvcnQuZnVsZmlsbGVkLCBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikgewogICAgd2FyZWhvdXNlSW1wb3J0QWRhcHRlci5hZGRPbmUoc3RhdGUsIGFjdGlvbi5wYXlsb2FkKTsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfZXh0cmFSZWR1Y2VycywgZ2V0V2FyZWhvdXNlSW1wb3J0LmZ1bGZpbGxlZCwgZnVuY3Rpb24gKHN0YXRlLCBhY3Rpb24pIHsKICAgIHdhcmVob3VzZUltcG9ydEFkYXB0ZXIuc2V0QWxsKHN0YXRlLCBhY3Rpb24ucGF5bG9hZC5kYXRhKTsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS50b3RhbEl0ZW0gPSBhY3Rpb24ucGF5bG9hZC50b3RhbDsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfZXh0cmFSZWR1Y2VycywgZ2V0V2FyZWhvdXNlRXhwb3J0LmZ1bGZpbGxlZCwgZnVuY3Rpb24gKHN0YXRlLCBhY3Rpb24pIHsKICAgIHdhcmVob3VzZUltcG9ydEFkYXB0ZXIuc2V0QWxsKHN0YXRlLCBhY3Rpb24ucGF5bG9hZC5kYXRhKTsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS50b3RhbEl0ZW0gPSBhY3Rpb24ucGF5bG9hZC50b3RhbDsKICAgIHN0YXRlLmluaXRpYWxTdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfZXh0cmFSZWR1Y2VycywgZ2V0V2FyZWhvdXNlSW1wb3J0LnJlamVjdGVkLCBmdW5jdGlvbiAoc3RhdGUsIGFjdGlvbikgewogICAgc3RhdGUubG9hZGluZyA9IGZhbHNlOwogIH0pLCBfZXh0cmFSZWR1Y2VycykKfSk7CmV4cG9ydCBkZWZhdWx0IHNsaWNlLnJlZHVjZXI7CnZhciBfc2xpY2UkYWN0aW9ucyA9IHNsaWNlLmFjdGlvbnMsCiAgICBmZXRjaGluZyA9IF9zbGljZSRhY3Rpb25zLmZldGNoaW5nLAogICAgcmVzZXQgPSBfc2xpY2UkYWN0aW9ucy5yZXNldDsKZXhwb3J0IHsgZmV0Y2hpbmcsIHJlc2V0IH07CmV4cG9ydCB2YXIgZ2xvYmFsaXplZFdhcmVob3VzZUltcG9ydFNlbGVjdG9ycyA9IHdhcmVob3VzZUltcG9ydEFkYXB0ZXIuZ2V0U2VsZWN0b3JzKGZ1bmN0aW9uIChzdGF0ZSkgewogIHJldHVybiBzdGF0ZS53YXJlaG91c2VJbXBvcnQ7Cn0pOw=="},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/Import/warehouse-import.reducer.js"],"names":["createEntityAdapter","createSelector","createSlice","creatingWarehouseImport","getWarehouseImport","getDetailWarehouseImport","updateWarehouseImport","getWarehouseExport","initialState","loading","updatingSuccess","totalItem","cities","districts","wards","type","branch","status","warehouseImportAdapter","selectId","warehouse","id","sortComparer","a","b","localeCompare","slice","name","getInitialState","reducers","fetching","state","reset","warehousesAddOne","addOne","warehousesAddMany","addMany","warehouseUpdate","updateOne","warehouseRemove","removeOne","extraReducers","fulfilled","action","rejected","payload","setAll","data","total","reducer","actions","globalizedWarehouseImportSelectors","getSelectors","warehouseImport"],"mappings":"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","sourcesContent":["import { createEntityAdapter, createSelector, createSlice } from '@reduxjs/toolkit';\nimport {\n  creatingWarehouseImport,\n  getWarehouseImport,\n  getDetailWarehouseImport,\n  updateWarehouseImport,\n  getWarehouseExport\n} from './warehouse-import.api';\n\nconst initialState = {\n  loading: false,\n  updatingSuccess: false,\n  totalItem: 0,\n  cities: [],\n  districts: [],\n  wards: [],\n  type: [],\n  branch: [],\n  status: []\n};\n\nexport const warehouseImportAdapter = createEntityAdapter({\n  // Assume IDs are stored in a field other than `book.id`\n  selectId: warehouse => warehouse.id,\n  // Keep the \"all IDs\" array sorted based on book titles\n  sortComparer: (a, b) => b.status.localeCompare(a.status)\n});\n\nconst slice = createSlice({\n  name: 'warehouseImport',\n  initialState: warehouseImportAdapter.getInitialState({ initialState }),\n  reducers: {\n    fetching(state) {\n      state.initialState.loading = true;\n    },\n    reset(state) {\n      state.initialState.loading = false;\n      state.initialState.updatingSuccess = false;\n    },\n    warehousesAddOne: warehouseImportAdapter.addOne,\n    warehousesAddMany: warehouseImportAdapter.addMany,\n    warehouseUpdate: warehouseImportAdapter.updateOne,\n    warehouseRemove: warehouseImportAdapter.removeOne\n  },\n  extraReducers: {\n    [creatingWarehouseImport.fulfilled]: (state, action) => {\n      state.initialState.updatingSuccess = true;\n      state.initialState.loading = false;\n    },\n    [creatingWarehouseImport.rejected]: (state, action) => {\n      state.initialState.updatingSuccess = false;\n      state.initialState.loading = false;\n    },\n    [updateWarehouseImport.fulfilled]: (state, action) => {\n      state.initialState.updatingSuccess = true;\n      state.initialState.loading = false;\n    },\n    [getDetailWarehouseImport.fulfilled]: (state, action) => {\n      warehouseImportAdapter.addOne(state, action.payload);\n      state.initialState.loading = false;\n    },\n    [getWarehouseImport.fulfilled]: (state, action) => {\n      warehouseImportAdapter.setAll(state, action.payload.data);\n      state.initialState.totalItem = action.payload.total;\n      state.initialState.loading = false;\n    },\n    [getWarehouseExport.fulfilled]: (state, action) => {\n      warehouseImportAdapter.setAll(state, action.payload.data);\n      state.initialState.totalItem = action.payload.total;\n      state.initialState.loading = false;\n    },\n    [getWarehouseImport.rejected]: (state, action) => {\n      state.loading = false;\n    }\n  }\n});\n\nexport default slice.reducer;\nexport const { fetching, reset } = slice.actions;\n\nexport const globalizedWarehouseImportSelectors = warehouseImportAdapter.getSelectors(state => state.warehouseImport);\n"]}]}