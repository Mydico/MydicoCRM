{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/user/UserRole/user-roles.api.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/user/UserRole/user-roles.api.js","mtime":1621950737487},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykgeyB0cnkgeyB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7IHZhciB2YWx1ZSA9IGluZm8udmFsdWU7IH0gY2F0Y2ggKGVycm9yKSB7IHJlamVjdChlcnJvcik7IHJldHVybjsgfSBpZiAoaW5mby5kb25lKSB7IHJlc29sdmUodmFsdWUpOyB9IGVsc2UgeyBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7IH0gfQoKZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIHNlbGYgPSB0aGlzLCBhcmdzID0gYXJndW1lbnRzOyByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgeyB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7IGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgIm5leHQiLCB2YWx1ZSk7IH0gZnVuY3Rpb24gX3Rocm93KGVycikgeyBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJ0aHJvdyIsIGVycik7IH0gX25leHQodW5kZWZpbmVkKTsgfSk7IH07IH0KCmltcG9ydCB7IGNyZWF0ZUFzeW5jVGh1bmsgfSBmcm9tICdAcmVkdXhqcy90b29sa2l0JzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IHZhciBnZXRVc2VyUm9sZSA9IGNyZWF0ZUFzeW5jVGh1bmsoJ2FwaS91c2VyLXJvbGVzJywgLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICB2YXIgcGFyYW1zLAogICAgICB0aHVua0FQSSwKICAgICAgcmVzdWx0LAogICAgICBfYXJncyA9IGFyZ3VtZW50czsKICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgIHdoaWxlICgxKSB7CiAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICBwYXJhbXMgPSBfYXJncy5sZW5ndGggPiAwICYmIF9hcmdzWzBdICE9PSB1bmRlZmluZWQgPyBfYXJnc1swXSA6IHsKICAgICAgICAgICAgcGFnZTogMCwKICAgICAgICAgICAgc2l6ZTogMjAsCiAgICAgICAgICAgIHNvcnQ6ICdjcmVhdGVkRGF0ZSxERVNDJwogICAgICAgICAgfTsKICAgICAgICAgIHRodW5rQVBJID0gX2FyZ3MubGVuZ3RoID4gMSA/IF9hcmdzWzFdIDogdW5kZWZpbmVkOwogICAgICAgICAgX2NvbnRleHQucHJldiA9IDI7CiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoJ2FwaS91c2VyLXJvbGVzJywgewogICAgICAgICAgICBwYXJhbXM6IHBhcmFtcwogICAgICAgICAgfSk7CgogICAgICAgIGNhc2UgNToKICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCB7CiAgICAgICAgICAgIGRhdGE6IHJlc3VsdC5kYXRhLAogICAgICAgICAgICB0b3RhbDogcmVzdWx0LmhlYWRlcnNbJ3gtdG90YWwtY291bnQnXQogICAgICAgICAgfSk7CgogICAgICAgIGNhc2UgOToKICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA5OwogICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgyKTsKICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHRodW5rQVBJLnJlamVjdFdpdGhWYWx1ZShfY29udGV4dC50MC5yZXNwb25zZS5kYXRhKSk7CgogICAgICAgIGNhc2UgMTI6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgIH0KICAgIH0KICB9LCBfY2FsbGVlLCBudWxsLCBbWzIsIDldXSk7Cn0pKSk7CmV4cG9ydCB2YXIgZ2V0RGV0YWlsVXNlclJvbGUgPSBjcmVhdGVBc3luY1RodW5rKCdhcGkvZGV0YWlsL3VzZXItcm9sZXMnLCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIocGFyYW1zLCB0aHVua0FQSSkgewogICAgdmFyIHJlc3VsdDsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdhcGkvdXNlci1yb2xlcy8nICsgcGFyYW1zLmlkLCB7CiAgICAgICAgICAgICAgcGFyYW1zOiBwYXJhbXMKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlc3VsdC5kYXRhKTsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgdGh1bmtBUEkucmVqZWN0V2l0aFZhbHVlKF9jb250ZXh0Mi50MC5yZXNwb25zZS5kYXRhKSk7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMCwgN11dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gsIF94MikgewogICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpKTsKZXhwb3J0IHZhciBjcmVhdGluZ1VzZXJSb2xlID0gY3JlYXRlQXN5bmNUaHVuaygnYXBpL2NyZWF0ZS91c2VyLXJvbGVzJywgLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGJvZHksIHRodW5rQVBJKSB7CiAgICB2YXIgcmVzdWx0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAwOwogICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KCdhcGkvdXNlci1yb2xlcycsIGJvZHkpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCB7CiAgICAgICAgICAgICAgZGF0YTogcmVzdWx0LmRhdGEsCiAgICAgICAgICAgICAgaGVhZGVyczogcmVzdWx0LmhlYWRlcnMsCiAgICAgICAgICAgICAgc3RhdHVzQ29kZTogcmVzdWx0LnN0YXR1cwogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDApOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgdGh1bmtBUEkucmVqZWN0V2l0aFZhbHVlKF9jb250ZXh0My50MC5yZXNwb25zZS5kYXRhKSk7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMCwgN11dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gzLCBfeDQpIHsKICAgIHJldHVybiBfcmVmMy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKSk7CmV4cG9ydCB2YXIgdXBkYXRlVXNlclJvbGUgPSBjcmVhdGVBc3luY1RodW5rKCdhcGkvdXBkYXRlL3VzZXItcm9sZXMnLCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoYm9keSwgdGh1bmtBUEkpIHsKICAgIHZhciByZXN1bHQ7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDA7CiAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnB1dCgnYXBpL3VzZXItcm9sZXMnLCBib2R5KTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgewogICAgICAgICAgICAgIGRhdGE6IHJlc3VsdC5kYXRhLAogICAgICAgICAgICAgIGhlYWRlcnM6IHJlc3VsdC5oZWFkZXJzLAogICAgICAgICAgICAgIHN0YXR1c0NvZGU6IHJlc3VsdC5zdGF0dXMKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDc7CiAgICAgICAgICAgIF9jb250ZXh0NC50MCA9IF9jb250ZXh0NFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIHRodW5rQVBJLnJlamVjdFdpdGhWYWx1ZShfY29udGV4dDQudDAucmVzcG9uc2UuZGF0YSkpOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU0LCBudWxsLCBbWzAsIDddXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94NSwgX3g2KSB7CiAgICByZXR1cm4gX3JlZjQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCkpOw=="},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/user/UserRole/user-roles.api.js"],"names":["createAsyncThunk","axios","getUserRole","params","page","size","sort","thunkAPI","get","result","data","total","headers","rejectWithValue","response","getDetailUserRole","id","creatingUserRole","body","post","statusCode","status","updateUserRole","put"],"mappings":"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","sourcesContent":["import {createAsyncThunk} from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const getUserRole = createAsyncThunk(\n    'api/user-roles',\n    async (params = {page: 0, size: 20, sort: 'createdDate,DESC'}, thunkAPI) => {\n      try {\n        const result = await axios.get('api/user-roles', {params: params});\n        return {data: result.data, total: result.headers['x-total-count']};\n      } catch (error) {\n        return thunkAPI.rejectWithValue(error.response.data);\n      }\n    },\n);\n\nexport const getDetailUserRole = createAsyncThunk('api/detail/user-roles', async (params, thunkAPI) => {\n  try {\n    const result = await axios.get('api/user-roles/' + params.id, { params: params });\n    return result.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\n\nexport const creatingUserRole = createAsyncThunk('api/create/user-roles', async (body, thunkAPI) => {\n  try {\n    const result = await axios.post('api/user-roles', body);\n    return {data: result.data, headers: result.headers, statusCode: result.status};\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\n\nexport const updateUserRole = createAsyncThunk('api/update/user-roles', async (body, thunkAPI) => {\n  try {\n    const result = await axios.put('api/user-roles', body);\n    return {data: result.data, headers: result.headers, statusCode: result.status};\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\n"]}]}