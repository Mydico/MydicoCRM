{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/Warehouse/warehouse.api.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/Warehouse/warehouse.api.js","mtime":1619555707837},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykgeyB0cnkgeyB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7IHZhciB2YWx1ZSA9IGluZm8udmFsdWU7IH0gY2F0Y2ggKGVycm9yKSB7IHJlamVjdChlcnJvcik7IHJldHVybjsgfSBpZiAoaW5mby5kb25lKSB7IHJlc29sdmUodmFsdWUpOyB9IGVsc2UgeyBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7IH0gfQoKZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIHNlbGYgPSB0aGlzLCBhcmdzID0gYXJndW1lbnRzOyByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgeyB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7IGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgIm5leHQiLCB2YWx1ZSk7IH0gZnVuY3Rpb24gX3Rocm93KGVycikgeyBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJ0aHJvdyIsIGVycik7IH0gX25leHQodW5kZWZpbmVkKTsgfSk7IH07IH0KCmltcG9ydCB7IGNyZWF0ZUFzeW5jVGh1bmsgfSBmcm9tICdAcmVkdXhqcy90b29sa2l0JzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IHZhciBnZXRXYXJlaG91c2UgPSBjcmVhdGVBc3luY1RodW5rKCdhcGkvc3RvcmVzJywgLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICB2YXIgcGFyYW1zLAogICAgICB0aHVua0FQSSwKICAgICAgcmVzdWx0LAogICAgICBfYXJncyA9IGFyZ3VtZW50czsKICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgIHdoaWxlICgxKSB7CiAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICBwYXJhbXMgPSBfYXJncy5sZW5ndGggPiAwICYmIF9hcmdzWzBdICE9PSB1bmRlZmluZWQgPyBfYXJnc1swXSA6IHsKICAgICAgICAgICAgcGFnZTogMCwKICAgICAgICAgICAgc2l6ZTogMjAsCiAgICAgICAgICAgIHNvcnQ6ICdjcmVhdGVkRGF0ZSxkZXNjJwogICAgICAgICAgfTsKICAgICAgICAgIHRodW5rQVBJID0gX2FyZ3MubGVuZ3RoID4gMSA/IF9hcmdzWzFdIDogdW5kZWZpbmVkOwogICAgICAgICAgX2NvbnRleHQucHJldiA9IDI7CiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoJ2FwaS9zdG9yZXMnLCB7CiAgICAgICAgICAgIHBhcmFtczogcGFyYW1zCiAgICAgICAgICB9KTsKCiAgICAgICAgY2FzZSA1OgogICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHsKICAgICAgICAgICAgZGF0YTogcmVzdWx0LmRhdGEsCiAgICAgICAgICAgIHRvdGFsOiByZXN1bHQuaGVhZGVyc1sneC10b3RhbC1jb3VudCddCiAgICAgICAgICB9KTsKCiAgICAgICAgY2FzZSA5OgogICAgICAgICAgX2NvbnRleHQucHJldiA9IDk7CiAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDIpOwogICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgdGh1bmtBUEkucmVqZWN0V2l0aFZhbHVlKF9jb250ZXh0LnQwLnJlc3BvbnNlLmRhdGEpKTsKCiAgICAgICAgY2FzZSAxMjoKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgfQogICAgfQogIH0sIF9jYWxsZWUsIG51bGwsIFtbMiwgOV1dKTsKfSkpKTsKZXhwb3J0IHZhciBnZXRBbGxXYXJlaG91c2UgPSBjcmVhdGVBc3luY1RodW5rKCdhcGkvYWxsLXN0b3JlcycsIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogIHZhciBwYXJhbXMsCiAgICAgIHRodW5rQVBJLAogICAgICByZXN1bHQsCiAgICAgIF9hcmdzMiA9IGFyZ3VtZW50czsKICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgd2hpbGUgKDEpIHsKICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgcGFyYW1zID0gX2FyZ3MyLmxlbmd0aCA+IDAgJiYgX2FyZ3MyWzBdICE9PSB1bmRlZmluZWQgPyBfYXJnczJbMF0gOiB7CiAgICAgICAgICAgIHBhZ2U6IDAsCiAgICAgICAgICAgIHNpemU6IDIwLAogICAgICAgICAgICBzb3J0OiAnY3JlYXRlZERhdGUsZGVzYycKICAgICAgICAgIH07CiAgICAgICAgICB0aHVua0FQSSA9IF9hcmdzMi5sZW5ndGggPiAxID8gX2FyZ3MyWzFdIDogdW5kZWZpbmVkOwogICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAyOwogICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgnYXBpL3N0b3JlcycsIHsKICAgICAgICAgICAgcGFyYW1zOiBwYXJhbXMKICAgICAgICAgIH0pOwoKICAgICAgICBjYXNlIDU6CiAgICAgICAgICByZXN1bHQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCB7CiAgICAgICAgICAgIGRhdGE6IHJlc3VsdC5kYXRhLAogICAgICAgICAgICB0b3RhbDogcmVzdWx0LmhlYWRlcnNbJ3gtdG90YWwtY291bnQnXQogICAgICAgICAgfSk7CgogICAgICAgIGNhc2UgOToKICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gOTsKICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgyKTsKICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCB0aHVua0FQSS5yZWplY3RXaXRoVmFsdWUoX2NvbnRleHQyLnQwLnJlc3BvbnNlLmRhdGEpKTsKCiAgICAgICAgY2FzZSAxMjoKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgIH0KICAgIH0KICB9LCBfY2FsbGVlMiwgbnVsbCwgW1syLCA5XV0pOwp9KSkpOwpleHBvcnQgdmFyIGdldERldGFpbFdhcmVob3VzZSA9IGNyZWF0ZUFzeW5jVGh1bmsoJ2FwaS9kZXRhaWwvc3RvcmVzJywgLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKHVzZXJJZCwgdGh1bmtBUEkpIHsKICAgIHZhciByZXN1bHQ7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDA7CiAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgnYXBpL3N0b3Jlcy8nICsgdXNlcklkKTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgcmVzdWx0LmRhdGEpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSA3OwogICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCB0aHVua0FQSS5yZWplY3RXaXRoVmFsdWUoX2NvbnRleHQzLnQwLnJlc3BvbnNlLmRhdGEpKTsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1swLCA3XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeCwgX3gyKSB7CiAgICByZXR1cm4gX3JlZjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCkpOwpleHBvcnQgdmFyIGNyZWF0aW5nV2FyZWhvdXNlID0gY3JlYXRlQXN5bmNUaHVuaygnYXBpL2NyZWF0ZS9zdG9yZXMnLCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoYm9keSwgdGh1bmtBUEkpIHsKICAgIHZhciByZXN1bHQ7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDA7CiAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoJ2FwaS9zdG9yZXMnLCBib2R5KTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgewogICAgICAgICAgICAgIGRhdGE6IHJlc3VsdC5kYXRhLAogICAgICAgICAgICAgIGhlYWRlcnM6IHJlc3VsdC5oZWFkZXJzLAogICAgICAgICAgICAgIHN0YXR1c0NvZGU6IHJlc3VsdC5zdGF0dXMKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDc7CiAgICAgICAgICAgIF9jb250ZXh0NC50MCA9IF9jb250ZXh0NFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIHRodW5rQVBJLnJlamVjdFdpdGhWYWx1ZShfY29udGV4dDQudDAucmVzcG9uc2UuZGF0YSkpOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU0LCBudWxsLCBbWzAsIDddXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94MywgX3g0KSB7CiAgICByZXR1cm4gX3JlZjQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCkpOwpleHBvcnQgdmFyIHVwZGF0ZVdhcmVob3VzZSA9IGNyZWF0ZUFzeW5jVGh1bmsoJ2FwaS91cGRhdGUvc3RvcmVzJywgLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KGJvZHksIHRodW5rQVBJKSB7CiAgICB2YXIgcmVzdWx0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQ1LnByZXYgPSAwOwogICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBheGlvcy5wdXQoJ2FwaS9zdG9yZXMnLCBib2R5KTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0NS5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgewogICAgICAgICAgICAgIGRhdGE6IHJlc3VsdC5kYXRhLAogICAgICAgICAgICAgIGhlYWRlcnM6IHJlc3VsdC5oZWFkZXJzLAogICAgICAgICAgICAgIHN0YXR1c0NvZGU6IHJlc3VsdC5zdGF0dXMKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBfY29udGV4dDUucHJldiA9IDc7CiAgICAgICAgICAgIF9jb250ZXh0NS50MCA9IF9jb250ZXh0NVsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIHRodW5rQVBJLnJlamVjdFdpdGhWYWx1ZShfY29udGV4dDUudDAucmVzcG9uc2UuZGF0YSkpOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU1LCBudWxsLCBbWzAsIDddXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94NSwgX3g2KSB7CiAgICByZXR1cm4gX3JlZjUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCkpOw=="},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/Warehouse/warehouse.api.js"],"names":["createAsyncThunk","axios","getWarehouse","params","page","size","sort","thunkAPI","get","result","data","total","headers","rejectWithValue","response","getAllWarehouse","getDetailWarehouse","userId","creatingWarehouse","body","post","statusCode","status","updateWarehouse","put"],"mappings":"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","sourcesContent":["import {createAsyncThunk} from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const getWarehouse = createAsyncThunk('api/stores', async (params = {page: 0, size: 20, sort: 'createdDate,desc'}, thunkAPI) => {\n  try {\n    const result = await axios.get('api/stores', {params: params});\n    return {data: result.data, total: result.headers['x-total-count']};\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\n\nexport const getAllWarehouse = createAsyncThunk('api/all-stores', async (params = {page: 0, size: 20, sort: 'createdDate,desc'}, thunkAPI) => {\n  try {\n    const result = await axios.get('api/stores', {params: params});\n    return {data: result.data, total: result.headers['x-total-count']};\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\n\nexport const getDetailWarehouse = createAsyncThunk('api/detail/stores', async (userId, thunkAPI) => {\n  try {\n    const result = await axios.get('api/stores/' + userId);\n    return result.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\n\nexport const creatingWarehouse = createAsyncThunk('api/create/stores', async (body, thunkAPI) => {\n  try {\n    const result = await axios.post('api/stores', body);\n    return {data: result.data, headers: result.headers, statusCode: result.status};\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\n\nexport const updateWarehouse = createAsyncThunk('api/update/stores', async (body, thunkAPI) => {\n  try {\n    const result = await axios.put('api/stores', body);\n    return {data: result.data, headers: result.headers, statusCode: result.status};\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\n"]}]}