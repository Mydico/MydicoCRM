{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerList/CreateCustomer.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerList/CreateCustomer.js","mtime":1619233003140},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerList/CreateCustomer.js"],"names":["React","useEffect","useRef","useState","CButton","CCard","CCardHeader","CCardBody","CCol","CForm","CInvalidFeedback","CFormGroup","CLabel","CInput","CRow","CCardTitle","CIcon","Formik","Yup","useDispatch","useSelector","creatingCustomer","getCity","getCustomerStatus","getCustomerType","getDistrict","Select","useHistory","fetching","getDepartment","globalizedDepartmentSelectors","getCodeByCustomer","validate","phoneRegExp","validationSchema","object","shape","contactName","string","min","required","name","tel","matches","type","department","city","CreateCustomer","ref","state","customer","initialState","initialValues","code","email","dateOfBirth","address","createdYear","obclubJoinTime","dispatch","history","selectedCity","setSelectedCity","selectAll","departments","onSubmit","values","resetForm","isNaN","Number","alert","updatingSuccess","goBack","renderCustomerCode","codeName","current","setFieldValue","errors","handleChange","handleBlur","handleSubmit","handleReset","e","Promise","resolve","value","cities","map","item","label","districts","status","loading"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport {\n  CButton,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CCol,\n  CForm,\n  CInvalidFeedback,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CRow,\n\n  CCardTitle,\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {creatingCustomer, getCity, getCustomerStatus, getCustomerType, getDistrict} from '../customer.api';\n\nimport Select from 'react-select';\nimport {useHistory} from 'react-router-dom';\nimport {fetching} from '../customer.reducer';\nimport {getDepartment} from '../../user/UserDepartment/department.api';\nimport {globalizedDepartmentSelectors} from '../../user/UserDepartment/department.reducer';\nimport {getCodeByCustomer, validate} from '../../../../shared/utils/normalize';\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst validationSchema = function() {\n  return Yup.object().shape({\n    contactName: Yup.string()\n        .min(5, `Tên liên lạc phải lớn hơn 5 kí tự`)\n        .required('Tên liên lạc không để trống'),\n    name: Yup.string()\n        .min(5, `Tên phải lớn hơn 5 kí tự`)\n        .required('Tên không để trống'),\n    tel: Yup.string()\n        .matches(phoneRegExp, 'Số điện thoại không đúng')\n        .required('Số điện thoại không để trống'),\n    type: Yup.object().required('Loại khách hàng không để trống'),\n    department: Yup.object().required('Chi nhánh không để trống'),\n    city: Yup.object().required('Thành phố không để trống'),\n  });\n};\n\nconst CreateCustomer = () => {\n  const ref = useRef(null);\n  const {initialState} = useSelector((state) => state.customer);\n  const initialValues = {\n    code: '',\n    name: '',\n    contactName: '',\n    email: '',\n    tel: '',\n    dateOfBirth: '',\n    address: '',\n    createdYear: '',\n    obclubJoinTime: '',\n  };\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [selectedCity, setSelectedCity] = useState(null);\n  const {selectAll} = globalizedDepartmentSelectors;\n  const departments = useSelector(selectAll);\n  useEffect(() => {\n    dispatch(getCity());\n    dispatch(getCustomerType());\n    dispatch(getDepartment());\n    dispatch(getCustomerStatus());\n  }, []);\n\n  useEffect(() => {\n    if (selectedCity) {\n      dispatch(getDistrict({city: selectedCity.code}));\n    }\n  }, [selectedCity]);\n\n  const onSubmit = (values, {resetForm}) => {\n    if (!isNaN(Number(values.name))) {\n      alert('Tên khách hàng phải có chữ cái');\n      return;\n    }\n    dispatch(fetching());\n    dispatch(creatingCustomer(values));\n    resetForm();\n  };\n\n  useEffect(() => {\n    if (initialState.updatingSuccess) {\n      history.goBack();\n    }\n  }, [initialState.updatingSuccess]);\n\n  const renderCustomerCode = () => {\n    const codeName = getCodeByCustomer(ref.current.values.name);\n    const code = `${ref.current.values.department?.code || ''}_${ref.current.values.type?.code || ''}_${codeName}`;\n    ref.current.setFieldValue('code', `${code}`);\n  };\n\n  return (\n    <CCard>\n      <CCardHeader>\n        <CCardTitle>Thêm mới khách hàng</CCardTitle>\n      </CCardHeader>\n      <CCardBody>\n        <Formik initialValues={initialValues} innerRef={ref} validate={validate(validationSchema)} onSubmit={onSubmit}>\n          {({\n            values,\n            errors,\n\n\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            setFieldValue,\n\n\n            handleReset\n            ,\n          }) => (\n            <CForm onSubmit={handleSubmit} noValidate name=\"simpleForm\">\n              <CRow>\n                <CCol lg=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"code\">Mã khách hàng</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"code\"\n                      id=\"code\"\n                      placeholder=\"Mã khách hàng\"\n                      disabled\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.code}\n                    />\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"lastName\">Tên cửa hàng/đại lý</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"name\"\n                      id=\"name\"\n                      placeholder=\"Tên cửa hàng/đại lý\"\n                      autoComplete=\"family-name\"\n                      invalid={errors.name}\n                      required\n                      onChange={async (e) => {\n                        await handleChange(e);\n                        Promise.resolve();\n                        renderCustomerCode();\n                      }}\n                      onBlur={handleBlur}\n                      value={values.name}\n                    />\n                    <CInvalidFeedback>{errors.name}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"userName\">Người liên lạc</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"contactName\"\n                      id=\"contactName\"\n                      placeholder=\"Người liên lạc\"\n                      autoComplete=\"contactName\"\n                      invalid={errors.contactName}\n                      required\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.contactName}\n                    />\n                    <CInvalidFeedback>{errors.contactName}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"tel\">Số điện thoại</CLabel>\n                    <CInput\n                      type=\"tel\"\n                      name=\"tel\"\n                      id=\"tel\"\n                      placeholder=\"Số điện thoại\"\n                      autoComplete=\"phone\"\n                      invalid={errors.tel}\n                      required\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.tel}\n                    />\n                    <CInvalidFeedback>{errors.tel}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel>Ngày tháng năm sinh</CLabel>\n                    <CInput type=\"date\" id=\"dateOfBirth\" name=\"dateOfBirth\" onChange={handleChange} placeholder=\"Ngày tháng năm sinh\" />\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"email\">Email</CLabel>\n                    <CInput\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      placeholder=\"Email\"\n                      autoComplete=\"email\"\n                      invalid={errors.email}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.email}\n                    />\n                    <CInvalidFeedback>{errors.email}</CInvalidFeedback>\n                  </CFormGroup>\n                </CCol>\n                <CCol lg=\"6\">\n                  <CRow>\n                    <CCol md={6}>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"password\">Tỉnh thành</CLabel>\n                        <Select\n                          name=\"city\"\n                          onChange={(e) => {\n                            setFieldValue('city', e.value);\n                            setSelectedCity(e.value);\n                          }}\n                          placeholder=\"Chọn thành phố\"\n                          options={initialState.cities.map((item) => ({\n                            value: item,\n                            label: item.name,\n                          }))}\n                        />\n                        <CInvalidFeedback className=\"d-block\">{errors.city}</CInvalidFeedback>\n                      </CFormGroup>\n                    </CCol>\n                    <CCol md={6}>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"password\">Quận huyện</CLabel>\n                        <Select\n                          name=\"district\"\n                          onChange={(e) => {\n                            setFieldValue('district', e.value);\n                          }}\n                          placeholder=\"Chọn Quận huyện\"\n                          options={initialState.districts.map((item) => ({\n                            value: item,\n                            label: item.name,\n                          }))}\n                        />\n                        <CInvalidFeedback className=\"d-block\">{errors.districts}</CInvalidFeedback>\n                      </CFormGroup>\n                    </CCol>\n                  </CRow>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"userName\">Địa chỉ</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"address\"\n                      id=\"address\"\n                      placeholder=\"Địa chỉ\"\n                      autoComplete=\"address\"\n                      onChange={handleChange}\n                      invalid={errors.address}\n                      onBlur={handleBlur}\n                      value={values.address}\n                    />\n                    <CInvalidFeedback>{errors.address}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"code\">Loại khách hàng</CLabel>\n                    <Select\n                      name=\"type\"\n                      onChange={async (item) => {\n                        setFieldValue('type', item.value);\n                        await Promise.resolve();\n                        renderCustomerCode();\n                      }}\n                      placeholder=\"Chọn loại khách hàng\"\n                      options={initialState.type.map((item) => ({\n                        value: item,\n                        label: item.name,\n                      }))}\n                    />\n                    <CInvalidFeedback className=\"d-block\">{errors.type}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"code\">Chi nhánh</CLabel>\n                    <Select\n                      name=\"department\"\n                      onChange={async (item) => {\n                        setFieldValue('department', item.value);\n                        await Promise.resolve();\n                        renderCustomerCode();\n                      }}\n                      placeholder=\"Chi nhánh\"\n                      options={departments.map((item) => ({\n                        value: item,\n                        label: item.name,\n                      }))}\n                    />\n                    <CInvalidFeedback className=\"d-block\">{errors.department}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"code\">Trạng thái</CLabel>\n                    <Select\n                      name=\"status\"\n                      onChange={ (item) => {\n                        setFieldValue('status', item.value);\n                      }}\n                      placeholder=\"Trạng thái\"\n                      options={initialState.status.map((item) => ({\n                        value: item,\n                        label: item.name,\n                      }))}\n                    />\n                    <CInvalidFeedback className=\"d-block\">{errors.status}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"createdYear\">Năm thành lập</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"createdYear\"\n                      id=\"createdYear\"\n                      autoComplete=\"createdYear\"\n                      onChange={handleChange}\n                      valid={errors.createdYear}\n                      onBlur={handleBlur}\n                      value={values.createdYear}\n                    />\n                    <CInvalidFeedback>{errors.createdYear}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"email\">Ngày tham gia ObClub</CLabel>\n                    <CInput type=\"date\" id=\"obclubJoinTime\" name=\"obclubJoinTime\" onChange={handleChange} />\n                    <CInvalidFeedback>{errors.obclubJoinTime}</CInvalidFeedback>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CFormGroup className=\"d-flex justify-content-center\">\n                <CButton type=\"submit\" size=\"lg\" color=\"primary\" disabled={initialState.loading}>\n                  <CIcon name=\"cil-save\" /> {initialState.loading ? 'Đang xử lý' : 'Tạo mới'}\n                </CButton>\n                <CButton type=\"reset\" size=\"lg\" color=\"danger\" onClick={handleReset} className=\"ml-5\">\n                  <CIcon name=\"cil-ban\" /> Xóa nhập liệu\n                </CButton>\n              </CFormGroup>\n            </CForm>\n          )}\n        </Formik>\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default CreateCustomer;\n"]}]}