{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerList/CreateCustomer.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerList/CreateCustomer.js","mtime":1625911225282},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerList/CreateCustomer.js"],"names":["React","useEffect","useRef","useState","CButton","CCard","CCardHeader","CCardBody","CCol","CForm","CInvalidFeedback","CFormGroup","CLabel","CInput","CRow","CCardTitle","CIcon","Formik","Yup","useDispatch","useSelector","creatingCustomer","getCity","getCustomerStatus","getCustomerType","getDistrict","Select","useHistory","fetching","getChildTreeDepartment","getDepartment","globalizedDepartmentSelectors","getCodeByCustomer","validate","cities","district","userSafeSelector","phoneRegExp","selectAll","validationSchema","object","shape","contactName","string","min","required","name","tel","matches","type","dateOfBirth","date","department","branch","city","social","CreateCustomer","ref","account","state","customer","initialState","initialDepartmentState","initialValues","code","address","createdYear","obclubJoinTime","dispatch","history","selectedCity","setSelectedCity","districts","setDistricts","departments","allChild","branches","page","size","sort","dependency","id","console","log","onSubmit","values","resetForm","filter","item","parent_code","updatingSuccess","goBack","renderCustomerCode","codeName","current","setFieldValue","errors","handleChange","handleBlur","handleSubmit","handleReset","e","value","map","label","status","length","loading"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n  CButton,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CCol,\n  CForm,\n  CInvalidFeedback,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CRow,\n  CCardTitle\n} from '@coreui/react/lib';\nimport CIcon from '@coreui/icons-react/lib/CIcon';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { creatingCustomer, getCity, getCustomerStatus, getCustomerType, getDistrict } from '../customer.api';\n\nimport Select from 'react-select';\nimport { useHistory } from 'react-router-dom';\nimport { fetching } from '../customer.reducer';\nimport { getChildTreeDepartment, getDepartment } from '../../user/UserDepartment/department.api';\nimport { globalizedDepartmentSelectors } from '../../user/UserDepartment/department.reducer';\nimport { getCodeByCustomer, validate } from '../../../../shared/utils/normalize';\nimport cities from '../../../../shared/utils/city';\nimport district from '../../../../shared/utils/district';\nimport { userSafeSelector } from '../../login/authenticate.reducer';\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst { selectAll } = globalizedDepartmentSelectors;\n\nconst validationSchema = function() {\n  return Yup.object().shape({\n    contactName: Yup.string()\n      .min(3, `Họ và tên khách hàng phải lớn hơn 3 kí tự`)\n      .required('Họ và tên khách hàng không để trống'),\n    name: Yup.string()\n      .min(3, `Tên phải lớn hơn 3 kí tự`)\n      .required('Tên không để trống'),\n    tel: Yup.string()\n      .matches(phoneRegExp, 'Số điện thoại không đúng')\n      .required('Số điện thoại không để trống'),\n    type: Yup.object().required('Loại khách hàng không để trống'),\n    dateOfBirth: Yup.date().required('Ngày tháng năm sinh không để trống'),\n    department: Yup.object().required('Chi nhánh không để trống'),\n    branch: Yup.object().required('Bạn chưa chọn hoặc chưa có phòng ban. Liên hệ quản trị viên để cài đặt'),\n    city: Yup.string().required('Thành phố không để trống'),\n    social: Yup.string().required('Link mạng xã hội không để trống')\n  });\n};\n\nconst CreateCustomer = () => {\n  const ref = useRef(null);\n  const { account } = useSelector(userSafeSelector);\n  const { initialState } = useSelector(state => state.customer);\n  const { initialState: initialDepartmentState } = useSelector(state => state.department);\n\n  const initialValues = {\n    code: '',\n    name: '',\n    contactName: '',\n    social: '',\n    tel: '',\n    address: '',\n    createdYear: '',\n    obclubJoinTime: '',\n    branch: account.branch || null\n  };\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [districts, setDistricts] = useState([]);\n  const departments = initialDepartmentState.allChild;\n  const branches = account.branch ? [account.branch] : [];\n  useEffect(() => {\n    dispatch(getCustomerType({ page: 0, size: 20, sort: 'createdDate,DESC', dependency: true }));\n    dispatch(getCustomerStatus({ page: 0, size: 20, sort: 'createdDate,DESC', dependency: true }));\n    dispatch(getChildTreeDepartment({ id: account.department.id }));\n  }, []);\n  useEffect(() => {\n    console.log(initialDepartmentState.allChild)\n  }, [initialDepartmentState.allChild])\n  const onSubmit = (values, { resetForm }) => {\n    dispatch(fetching());\n    dispatch(creatingCustomer(values));\n  };\n\n  useEffect(() => {\n    if (selectedCity) {\n      setDistricts(district.filter(item => item.parent_code === selectedCity));\n    }\n  }, [selectedCity]);\n\n  useEffect(() => {\n    if (initialState.updatingSuccess) {\n      history.goBack();\n    }\n  }, [initialState.updatingSuccess]);\n\n  const renderCustomerCode = () => {\n    const codeName = getCodeByCustomer(ref.current.values.name);\n    const code = `${ref.current.values.department?.code || ''}_${ref.current.values.type?.code || ''}_${codeName}`;\n    ref.current.setFieldValue('code', `${code}`);\n  };\n\n  return (\n    <CCard>\n      <CCardHeader>\n        <CCardTitle>Thêm mới khách hàng</CCardTitle>\n      </CCardHeader>\n      <CCardBody>\n        <Formik initialValues={initialValues} innerRef={ref} validate={validate(validationSchema)} onSubmit={onSubmit}>\n          {({\n            values,\n            errors,\n\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            setFieldValue,\n\n            handleReset\n          }) => (\n            <CForm onSubmit={handleSubmit} noValidate name=\"simpleForm\">\n              <CRow>\n                <CCol lg=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"code\">Mã khách hàng</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"code\"\n                      id=\"code\"\n                      placeholder=\"Mã khách hàng\"\n                      disabled\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.code}\n                    />\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"lastName\">Tên cửa hàng/đại lý</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"name\"\n                      id=\"name\"\n                      placeholder=\"Tên cửa hàng/đại lý\"\n                      autoComplete=\"family-name\"\n                      invalid={errors.name}\n                      required\n                      onChange={async e => {\n                        await handleChange(e);\n                        renderCustomerCode();\n                      }}\n                      onBlur={handleBlur}\n                      value={values.name}\n                    />\n                    <CInvalidFeedback>{errors.name}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"userName\">Họ và tên khách hàng</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"contactName\"\n                      id=\"contactName\"\n                      placeholder=\"Người liên lạc\"\n                      autoComplete=\"contactName\"\n                      invalid={errors.contactName}\n                      required\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.contactName}\n                    />\n                    <CInvalidFeedback>{errors.contactName}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"tel\">Số điện thoại</CLabel>\n                    <CInput\n                      type=\"tel\"\n                      name=\"tel\"\n                      id=\"tel\"\n                      placeholder=\"Số điện thoại\"\n                      autoComplete=\"phone\"\n                      invalid={errors.tel}\n                      required\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.tel}\n                    />\n                    <CInvalidFeedback>{errors.tel}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel>Ngày tháng năm sinh</CLabel>\n                    <CInput\n                      type=\"date\"\n                      id=\"dateOfBirth\"\n                      name=\"dateOfBirth\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.dateOfBirth}\n                      invalid={errors.dateOfBirth}\n                      placeholder=\"Ngày tháng năm sinh\"\n                    />\n                    <CInvalidFeedback>{errors.dateOfBirth}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"email\">Link mạng xã hội</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"social\"\n                      id=\"social\"\n                      invalid={errors.social}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.social}\n                    />\n                    <CInvalidFeedback>{errors.social}</CInvalidFeedback>\n                  </CFormGroup>\n                </CCol>\n                <CCol lg=\"6\">\n                  <CRow>\n                    <CCol md={6}>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"password\">Tỉnh thành</CLabel>\n                        <Select\n                          name=\"city\"\n                          onChange={e => {\n                            setFieldValue('city', e.value);\n                            setSelectedCity(e.value);\n                          }}\n                          placeholder=\"Chọn thành phố\"\n                          options={cities.map(item => ({\n                            value: item.value,\n                            label: item.label\n                          }))}\n                        />\n                        <CInvalidFeedback className=\"d-block\">{errors.city}</CInvalidFeedback>\n                      </CFormGroup>\n                    </CCol>\n                    <CCol md={6}>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"password\">Quận huyện</CLabel>\n                        <Select\n                          name=\"district\"\n                          onChange={e => {\n                            setFieldValue('district', e.value);\n                          }}\n                          placeholder=\"Chọn Quận huyện\"\n                          options={districts.map(item => ({\n                            value: item.value,\n                            label: item.label\n                          }))}\n                        />\n                        <CInvalidFeedback className=\"d-block\">{errors.districts}</CInvalidFeedback>\n                      </CFormGroup>\n                    </CCol>\n                  </CRow>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"userName\">Địa chỉ</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"address\"\n                      id=\"address\"\n                      placeholder=\"Địa chỉ\"\n                      autoComplete=\"address\"\n                      onChange={handleChange}\n                      invalid={errors.address}\n                      onBlur={handleBlur}\n                      value={values.address}\n                    />\n                    <CInvalidFeedback>{errors.address}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"code\">Loại khách hàng</CLabel>\n                    <Select\n                      name=\"type\"\n                      onChange={async item => {\n                        await setFieldValue('type', item.value);\n                        renderCustomerCode();\n                      }}\n                      placeholder=\"Chọn loại khách hàng\"\n                      options={initialState.type.map(item => ({\n                        value: item,\n                        label: item.name\n                      }))}\n                    />\n                    <CInvalidFeedback className=\"d-block\">{errors.type}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"code\">Chi nhánh</CLabel>\n                    <Select\n                      name=\"department\"\n                      onChange={async item => {\n                        await setFieldValue('department', item.value);\n                        renderCustomerCode();\n                      }}\n                      placeholder=\"Chi nhánh\"\n                      options={departments.map(item => ({\n                        value: item,\n                        label: item?.name || ''\n                      }))}\n                    />\n                    <CInvalidFeedback className=\"d-block\">{errors.department}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"code\">Trạng thái</CLabel>\n                    <Select\n                      name=\"status\"\n                      onChange={item => {\n                        setFieldValue('status', item.value);\n                      }}\n                      placeholder=\"Trạng thái\"\n                      options={initialState.status.map(item => ({\n                        value: item,\n                        label: item.name\n                      }))}\n                    />\n                    <CInvalidFeedback className=\"d-block\">{errors.status}</CInvalidFeedback>\n                  </CFormGroup>\n                  {branches.length === 0 && (\n                    <CFormGroup>\n                      <CLabel htmlFor=\"code\">Phòng ban</CLabel>\n                      <Select\n                        name=\"department\"\n                        onChange={async item => {\n                          await setFieldValue('branch', item.value);\n                        }}\n                        placeholder=\"Chi nhánh\"\n                        options={branches.map(item => ({\n                          value: item,\n                          label: item?.name || ''\n                        }))}\n                      />\n                      <CInvalidFeedback className=\"d-block\">{errors.branch}</CInvalidFeedback>\n                    </CFormGroup>\n                  )}\n                </CCol>\n              </CRow>\n              <CFormGroup className=\"d-flex justify-content-center\">\n                <CButton type=\"submit\" size=\"lg\" color=\"primary\" disabled={initialState.loading}>\n                  <CIcon name=\"cil-save\" /> {initialState.loading ? 'Đang xử lý' : 'Tạo mới'}\n                </CButton>\n                <CButton type=\"reset\" size=\"lg\" color=\"danger\" onClick={handleReset} className=\"ml-5\">\n                  <CIcon name=\"cil-ban\" /> Xóa nhập liệu\n                </CButton>\n              </CFormGroup>\n            </CForm>\n          )}\n        </Formik>\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default CreateCustomer;\n"]}]}