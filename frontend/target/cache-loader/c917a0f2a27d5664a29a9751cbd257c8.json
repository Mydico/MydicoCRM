{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerList/CreateCustomer.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerList/CreateCustomer.js","mtime":1623903718175},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/customer/CustomerList/CreateCustomer.js"],"names":["React","useEffect","useRef","useState","CButton","CCard","CCardHeader","CCardBody","CCol","CForm","CInvalidFeedback","CFormGroup","CLabel","CInput","CRow","CCardTitle","CIcon","Formik","Yup","useDispatch","useSelector","creatingCustomer","getCity","getCustomerStatus","getCustomerType","getDistrict","Select","useHistory","fetching","getDepartment","globalizedDepartmentSelectors","getCodeByCustomer","validate","cities","district","userSafeSelector","phoneRegExp","selectAll","validationSchema","object","shape","contactName","string","min","required","name","tel","matches","type","dateOfBirth","date","department","branch","city","CreateCustomer","ref","account","state","customer","initialState","initialValues","code","email","address","createdYear","obclubJoinTime","dispatch","history","selectedCity","setSelectedCity","districts","setDistricts","departments","branches","page","size","sort","dependency","onSubmit","values","resetForm","filter","item","parent_code","updatingSuccess","goBack","renderCustomerCode","codeName","current","setFieldValue","errors","handleChange","handleBlur","handleSubmit","handleReset","e","value","map","label","status","length","loading"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n  CButton,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CCol,\n  CForm,\n  CInvalidFeedback,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CRow,\n  CCardTitle\n} from '@coreui/react/lib';\nimport CIcon from '@coreui/icons-react/lib/CIcon';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { creatingCustomer, getCity, getCustomerStatus, getCustomerType, getDistrict } from '../customer.api';\n\nimport Select from 'react-select';\nimport { useHistory } from 'react-router-dom';\nimport { fetching } from '../customer.reducer';\nimport { getDepartment } from '../../user/UserDepartment/department.api';\nimport { globalizedDepartmentSelectors } from '../../user/UserDepartment/department.reducer';\nimport { getCodeByCustomer, validate } from '../../../../shared/utils/normalize';\nimport cities from '../../../../shared/utils/city';\nimport district from '../../../../shared/utils/district';\nimport { userSafeSelector } from '../../login/authenticate.reducer';\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst { selectAll } = globalizedDepartmentSelectors;\n\nconst validationSchema = function() {\n  return Yup.object().shape({\n    contactName: Yup.string()\n      .min(3, `Họ và tên khách hàng phải lớn hơn 3 kí tự`)\n      .required('Họ và tên khách hàng không để trống'),\n    name: Yup.string()\n      .min(3, `Tên phải lớn hơn 3 kí tự`)\n      .required('Tên không để trống'),\n    tel: Yup.string()\n      .matches(phoneRegExp, 'Số điện thoại không đúng')\n      .required('Số điện thoại không để trống'),\n    type: Yup.object().required('Loại khách hàng không để trống'),\n    dateOfBirth: Yup.date().required('Ngày tháng năm sinh không để trống'),\n    department: Yup.object().required('Chi nhánh không để trống'),\n    branch: Yup.object().required('Bạn chưa chọn hoặc chưa có phòng ban. Liên hệ quản trị viên để cài đặt'),\n    city: Yup.string().required('Thành phố không để trống')\n  });\n};\n\nconst CreateCustomer = () => {\n  const ref = useRef(null);\n  const { account } = useSelector(userSafeSelector);\n  const { initialState } = useSelector(state => state.customer);\n  const initialValues = {\n    code: '',\n    name: '',\n    contactName: '',\n    email: '',\n    tel: '',\n    address: '',\n    createdYear: '',\n    obclubJoinTime: ''\n  };\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [districts, setDistricts] = useState([]);\n  const departments = [account.department];\n  const branches = account.branch ? [account.branch]:[];\n  useEffect(() => {\n    dispatch(getCustomerType({ page: 0, size: 20, sort: 'createdDate,DESC', dependency: true }));\n    dispatch(getCustomerStatus({ page: 0, size: 20, sort: 'createdDate,DESC', dependency: true }));\n  }, []);\n\n  const onSubmit = (values, { resetForm }) => {\n    dispatch(fetching());\n    dispatch(creatingCustomer(values));\n  };\n\n  useEffect(() => {\n    if (selectedCity) {\n      setDistricts(district.filter(item => item.parent_code === selectedCity));\n    }\n  }, [selectedCity]);\n\n  useEffect(() => {\n    if (initialState.updatingSuccess) {\n      history.goBack();\n    }\n  }, [initialState.updatingSuccess]);\n\n  const renderCustomerCode = () => {\n    const codeName = getCodeByCustomer(ref.current.values.name);\n    const code = `${ref.current.values.department?.code || ''}_${ref.current.values.type?.code || ''}_${codeName}`;\n    ref.current.setFieldValue('code', `${code}`);\n  };\n\n  return (\n    <CCard>\n      <CCardHeader>\n        <CCardTitle>Thêm mới khách hàng</CCardTitle>\n      </CCardHeader>\n      <CCardBody>\n        <Formik initialValues={initialValues} innerRef={ref} validate={validate(validationSchema)} onSubmit={onSubmit}>\n          {({\n            values,\n            errors,\n\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            setFieldValue,\n\n            handleReset\n          }) => (\n            <CForm onSubmit={handleSubmit} noValidate name=\"simpleForm\">\n              <CRow>\n                <CCol lg=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"code\">Mã khách hàng</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"code\"\n                      id=\"code\"\n                      placeholder=\"Mã khách hàng\"\n                      disabled\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.code}\n                    />\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"lastName\">Tên cửa hàng/đại lý</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"name\"\n                      id=\"name\"\n                      placeholder=\"Tên cửa hàng/đại lý\"\n                      autoComplete=\"family-name\"\n                      invalid={errors.name}\n                      required\n                      onChange={async e => {\n                        await handleChange(e);\n                        renderCustomerCode();\n                      }}\n                      onBlur={handleBlur}\n                      value={values.name}\n                    />\n                    <CInvalidFeedback>{errors.name}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"userName\">Họ và tên khách hàng</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"contactName\"\n                      id=\"contactName\"\n                      placeholder=\"Người liên lạc\"\n                      autoComplete=\"contactName\"\n                      invalid={errors.contactName}\n                      required\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.contactName}\n                    />\n                    <CInvalidFeedback>{errors.contactName}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"tel\">Số điện thoại</CLabel>\n                    <CInput\n                      type=\"tel\"\n                      name=\"tel\"\n                      id=\"tel\"\n                      placeholder=\"Số điện thoại\"\n                      autoComplete=\"phone\"\n                      invalid={errors.tel}\n                      required\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.tel}\n                    />\n                    <CInvalidFeedback>{errors.tel}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel>Ngày tháng năm sinh</CLabel>\n                    <CInput\n                      type=\"date\"\n                      id=\"dateOfBirth\"\n                      name=\"dateOfBirth\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.dateOfBirth}\n                      invalid={errors.dateOfBirth}\n                      placeholder=\"Ngày tháng năm sinh\"\n                    />\n                    <CInvalidFeedback>{errors.dateOfBirth}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"email\">Email</CLabel>\n                    <CInput\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      placeholder=\"Email\"\n                      autoComplete=\"email\"\n                      invalid={errors.email}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.email}\n                    />\n                    <CInvalidFeedback>{errors.email}</CInvalidFeedback>\n                  </CFormGroup>\n                </CCol>\n                <CCol lg=\"6\">\n                  <CRow>\n                    <CCol md={6}>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"password\">Tỉnh thành</CLabel>\n                        <Select\n                          name=\"city\"\n                          onChange={e => {\n                            setFieldValue('city', e.value);\n                            setSelectedCity(e.value);\n                          }}\n                          placeholder=\"Chọn thành phố\"\n                          options={cities.map(item => ({\n                            value: item.value,\n                            label: item.label\n                          }))}\n                        />\n                        <CInvalidFeedback className=\"d-block\">{errors.city}</CInvalidFeedback>\n                      </CFormGroup>\n                    </CCol>\n                    <CCol md={6}>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"password\">Quận huyện</CLabel>\n                        <Select\n                          name=\"district\"\n                          onChange={e => {\n                            setFieldValue('district', e.value);\n                          }}\n                          placeholder=\"Chọn Quận huyện\"\n                          options={districts.map(item => ({\n                            value: item.value,\n                            label: item.label\n                          }))}\n                        />\n                        <CInvalidFeedback className=\"d-block\">{errors.districts}</CInvalidFeedback>\n                      </CFormGroup>\n                    </CCol>\n                  </CRow>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"userName\">Địa chỉ</CLabel>\n                    <CInput\n                      type=\"text\"\n                      name=\"address\"\n                      id=\"address\"\n                      placeholder=\"Địa chỉ\"\n                      autoComplete=\"address\"\n                      onChange={handleChange}\n                      invalid={errors.address}\n                      onBlur={handleBlur}\n                      value={values.address}\n                    />\n                    <CInvalidFeedback>{errors.address}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"code\">Loại khách hàng</CLabel>\n                    <Select\n                      name=\"type\"\n                      onChange={async item => {\n                        await setFieldValue('type', item.value);\n                        renderCustomerCode();\n                      }}\n                      placeholder=\"Chọn loại khách hàng\"\n                      options={initialState.type.map(item => ({\n                        value: item,\n                        label: item.name\n                      }))}\n                    />\n                    <CInvalidFeedback className=\"d-block\">{errors.type}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"code\">Chi nhánh</CLabel>\n                    <Select\n                      name=\"department\"\n                      onChange={async item => {\n                        await setFieldValue('department', item.value);\n                        renderCustomerCode();\n                      }}\n                      placeholder=\"Chi nhánh\"\n                      options={departments.map(item => ({\n                        value: item,\n                        label: item?.name || ''\n                      }))}\n                    />\n                    <CInvalidFeedback className=\"d-block\">{errors.department}</CInvalidFeedback>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"code\">Trạng thái</CLabel>\n                    <Select\n                      name=\"status\"\n                      onChange={item => {\n                        setFieldValue('status', item.value);\n                      }}\n                      placeholder=\"Trạng thái\"\n                      options={initialState.status.map(item => ({\n                        value: item,\n                        label: item.name\n                      }))}\n                    />\n                    <CInvalidFeedback className=\"d-block\">{errors.status}</CInvalidFeedback>\n                  </CFormGroup>\n                  {branches.length === 0 && (\n                    <CFormGroup>\n                      <CLabel htmlFor=\"code\">Phòng ban</CLabel>\n                      <Select\n                        name=\"department\"\n                        onChange={async item => {\n                          await setFieldValue('branch', item.value);\n                        }}\n                        placeholder=\"Chi nhánh\"\n                        options={branches.map(item => ({\n                          value: item,\n                          label: item?.name || ''\n                        }))}\n                      />\n                      <CInvalidFeedback className=\"d-block\">{errors.branch}</CInvalidFeedback>\n                    </CFormGroup>\n                  )}\n                  <CFormGroup>\n                    <CLabel htmlFor=\"email\">Ngày tham gia ObClub</CLabel>\n                    <CInput type=\"date\" id=\"obclubJoinTime\" name=\"obclubJoinTime\" onChange={handleChange} />\n                    <CInvalidFeedback>{errors.obclubJoinTime}</CInvalidFeedback>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CFormGroup className=\"d-flex justify-content-center\">\n                <CButton type=\"submit\" size=\"lg\" color=\"primary\" disabled={initialState.loading}>\n                  <CIcon name=\"cil-save\" /> {initialState.loading ? 'Đang xử lý' : 'Tạo mới'}\n                </CButton>\n                <CButton type=\"reset\" size=\"lg\" color=\"danger\" onClick={handleReset} className=\"ml-5\">\n                  <CIcon name=\"cil-ban\" /> Xóa nhập liệu\n                </CButton>\n              </CFormGroup>\n            </CForm>\n          )}\n        </Formik>\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default CreateCustomer;\n"]}]}