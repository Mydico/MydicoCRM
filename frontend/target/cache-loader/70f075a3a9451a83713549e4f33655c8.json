{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/History/warehouse-history.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/History/warehouse-history.js","mtime":1623955932162},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/History/warehouse-history.js"],"names":["React","useCallback","useEffect","useRef","useState","CCardBody","CBadge","CDataTable","CCard","CCardHeader","CPagination","_","CIcon","useDispatch","useSelector","getStoreHistory","globalizedStoreHistorySelectors","reset","useHistory","moment","mappingStatus","EXPORT","IMPORT","getBadge","status","selectAll","StoreHistory","state","storeHistory","initialState","activePage","setActivePage","size","setSize","dispatch","storeHistorys","paramRef","page","sort","current","computedItems","items","map","item","createdDate","format","fields","key","label","_style","width","filter","debouncedSearchColumn","debounce","value","Object","keys","length","forEach","onFilterColumn","values","noResults","noItems","loading","val","console","log","order","index","type","Math","floor","totalItem","i"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {CCardBody, CBadge, CDataTable, CCard, CCardHeader, CPagination} from '@coreui/react/lib';\nimport _ from 'lodash'\nimport CIcon from '@coreui/icons-react/lib/CIcon';;\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getStoreHistory} from './warehouse-history.api.js';\nimport {globalizedStoreHistorySelectors, reset} from './warehouse-history.reducer.js';\nimport {useHistory} from 'react-router-dom';\nimport moment from 'moment'\nconst mappingStatus = {\n  EXPORT: 'XUẤT KHO',\n  IMPORT: 'NHẬP KHO',\n};\nconst getBadge = (status) => {\n  switch (status) {\n    case 'EXPORT':\n      return 'primary';\n    case 'IMPORT':\n      return 'info';\n    default:\n      return 'primary';\n  }\n};\nconst {selectAll} = globalizedStoreHistorySelectors;\n\nconst StoreHistory = () => {\n  const [] = useState([]);\n  const {initialState} = useSelector((state) => state.storeHistory);\n  const [activePage, setActivePage] = useState(1);\n  const [size, setSize] = useState(50);\n  const dispatch = useDispatch();\n  const storeHistorys = useSelector(selectAll);\n\n  const paramRef = useRef(null);\n  useEffect(() => {\n    dispatch(reset());\n  }, []);\n\n  useEffect(() => {\n    dispatch(getStoreHistory({page: activePage - 1, size, sort: 'createdDate,DESC', ...paramRef.current}));\n  }, [activePage, size]);\n\n  const computedItems = (items) => {\n    return items.map((item) => {\n      return {\n        ...item,\n        createdDate: moment(item.createdDate).format(\"DD-MM-YYYY\")\n      };\n    });\n  };\n\n  // Code\tTên kho\tNgười liên lạc\tNăm Sinh\tĐiện thoại\tNhân viên quản lý\tLoại kho\tPhân loại\tSửa\tTạo đơn\n  const fields = [\n    {\n      key: 'order',\n      label: 'STT',\n      _style: {width: '1%'},\n      filter: false,\n    },\n    {key: 'storeName', label: 'Tên kho', _style: {width: '10%'}},\n    {key: 'productName', label: 'Tên sản phẩm', _style: {width: '15%'}},\n    {key: 'type', label: 'Hình thức', _style: {width: '15%'}, filter: false},\n    {key: 'createdDate', label: 'Ngày tạo', _style: {width: '15%'}, filter: false},\n    {key: 'quantity', label: 'Số lượng', _style: {width: '15%'}, filter: false},\n  ];\n\n  const debouncedSearchColumn = useCallback(\n    _.debounce(value => {\n      if (Object.keys(value).length > 0) {\n        Object.keys(value).forEach(key => {\n          if(!value[key]) delete value[key]\n        })\n        paramRef.current = value\n        dispatch(getStoreHistory({page: 0, size: size, sort: 'createdDate,DESC', ...value}));\n      }\n    }, 300),\n    []\n  );\n\n  const onFilterColumn = value => {\n    debouncedSearchColumn(value)\n  };\n\n  return (\n    <CCard>\n      <CCardHeader>\n        <CIcon name=\"cil-grid\" /> Danh sách lịch sử xuất nhập kho\n      </CCardHeader>\n      <CCardBody>\n        <CDataTable\n          items={computedItems(storeHistorys)}\n          fields={fields}\n          columnFilter\n          itemsPerPageSelect={{label: 'Số lượng trên một trang', values: [50, 100, 150, 200]}}\n          itemsPerPage={size}\n          hover\n          sorter\n          noItemsView={{\n            noResults: 'Không tìm thấy kết quả',\n            noItems: 'Không có dữ liệu'\n          }}\n          loading={initialState.loading}\n          // onRowClick={(item,index,col,e) => console.log(item,index,col,e)}\n          onPageChange={(val) => console.log('new page:', val)}\n          onPagesChange={(val) => console.log('new pages:', val)}\n          onPaginationChange={(val) => setSize(val)}\n          // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\n          // onSorterValueChange={(val) => console.log('new sorter value:', val)}\n          onTableFilterChange={(val) => console.log('new table filter:', val)}\n          onColumnFilterChange={onFilterColumn}\n          scopedSlots={{\n            order: (item, index) => <td>{index + 1}</td>,\n            type: (item ) => (\n              <td>\n                <CBadge color={getBadge(item.type)}>{mappingStatus[item.type]}</CBadge>\n              </td>\n            ),\n          }}\n        />\n        <CPagination\n          activePage={activePage}\n          pages={Math.floor(initialState.totalItem / size) + 1}\n          onActivePageChange={(i) => setActivePage(i)}\n        />\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default StoreHistory;\n"]}]}