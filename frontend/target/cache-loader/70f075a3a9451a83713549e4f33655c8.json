{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/History/warehouse-history.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/History/warehouse-history.js","mtime":1620033033970},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/History/warehouse-history.js"],"names":["React","useEffect","useState","CCardBody","CBadge","CDataTable","CCard","CCardHeader","CPagination","CIcon","useDispatch","useSelector","getStoreHistory","globalizedStoreHistorySelectors","reset","useHistory","mappingStatus","EXPORT","IMPORT","getBadge","status","StoreHistory","state","storeHistory","initialState","activePage","setActivePage","size","setSize","dispatch","history","page","sort","selectAll","storeHistorys","computedItems","items","map","item","store","name","product","fields","key","label","_style","width","filter","onFilterColumn","value","values","loading","val","console","log","order","index","type","Math","floor","totalItem","i"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,UAA3B,EAAuCC,KAAvC,EAA8CC,WAA9C,EAA2DC,WAA3D,QAA6E,eAA7E,C,CACA;;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,eAAR,QAA8B,4BAA9B;AACA,SAAQC,+BAAR,EAAyCC,KAAzC,QAAqD,gCAArD;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,UADY;AAEpBC,EAAAA,MAAM,EAAE;AAFY,CAAtB;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAAY;AAC3B,UAAQA,MAAR;AACE,SAAK,QAAL;AACE,aAAO,SAAP;;AACF,SAAK,QAAL;AACE,aAAO,MAAP;;AACF;AACE,aAAO,SAAP;AANJ;AAQD,CATD;;AAUA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBACdnB,QAAQ,CAAC,EAAD,CADM;AAAA;;AAAA,qBAEFS,WAAW,CAAC,UAACW,KAAD;AAAA,WAAWA,KAAK,CAACC,YAAjB;AAAA,GAAD,CAFT;AAAA,MAElBC,YAFkB,gBAElBA,YAFkB;;AAAA,mBAGWtB,QAAQ,CAAC,CAAD,CAHnB;AAAA;AAAA,MAGlBuB,UAHkB;AAAA,MAGNC,aAHM;;AAAA,mBAIDxB,QAAQ,CAAC,EAAD,CAJP;AAAA;AAAA,MAIlByB,IAJkB;AAAA,MAIZC,OAJY;;AAKzB,MAAMC,QAAQ,GAAGnB,WAAW,EAA5B;AACA,MAAMoB,OAAO,GAAGf,UAAU,EAA1B;AACAd,EAAAA,SAAS,CAAC,YAAM;AACd4B,IAAAA,QAAQ,CAACf,KAAK,EAAN,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAb,EAAAA,SAAS,CAAC,YAAM;AACd4B,IAAAA,QAAQ,CAACjB,eAAe,CAAC;AAACmB,MAAAA,IAAI,EAAEN,UAAU,GAAG,CAApB;AAAuBE,MAAAA,IAAI,EAAJA,IAAvB;AAA6BK,MAAAA,IAAI,EAAE;AAAnC,KAAD,CAAhB,CAAR;AACD,GAFQ,EAEN,CAACP,UAAD,EAAaE,IAAb,CAFM,CAAT;AAXyB,MAelBM,SAfkB,GAeLpB,+BAfK,CAelBoB,SAfkB;AAgBzB,MAAMC,aAAa,GAAGvB,WAAW,CAACsB,SAAD,CAAjC;;AACA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,WAAOA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAU;AAAA;;AACzB,6CACKA,IADL;AAEEC,QAAAA,KAAK,iBAAED,IAAI,CAACC,KAAP,gDAAE,YAAYC,IAFrB;AAGEC,QAAAA,OAAO,mBAAEH,IAAI,CAACG,OAAP,kDAAE,cAAcD;AAHzB;AAKD,KANM,CAAP;AAOD,GARD,CAjByB,CA2BzB;;;AACA,MAAME,MAAM,GAAG,CACb;AACEC,IAAAA,GAAG,EAAE,OADP;AAEEC,IAAAA,KAAK,EAAE,KAFT;AAGEC,IAAAA,MAAM,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAHV;AAIEC,IAAAA,MAAM,EAAE;AAJV,GADa,EAOb;AAACJ,IAAAA,GAAG,EAAE,OAAN;AAAeC,IAAAA,KAAK,EAAE,SAAtB;AAAiCC,IAAAA,MAAM,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR;AAAzC,GAPa,EAQb;AAACH,IAAAA,GAAG,EAAE,SAAN;AAAiBC,IAAAA,KAAK,EAAE,cAAxB;AAAwCC,IAAAA,MAAM,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR;AAAhD,GARa,EASb;AAACH,IAAAA,GAAG,EAAE,MAAN;AAAcC,IAAAA,KAAK,EAAE,WAArB;AAAkCC,IAAAA,MAAM,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR;AAA1C,GATa,EAUb;AAACH,IAAAA,GAAG,EAAE,aAAN;AAAqBC,IAAAA,KAAK,EAAE,UAA5B;AAAwCC,IAAAA,MAAM,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR;AAAhD,GAVa,EAWb;AAACH,IAAAA,GAAG,EAAE,UAAN;AAAkBC,IAAAA,KAAK,EAAE,UAAzB;AAAqCC,IAAAA,MAAM,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR;AAA7C,GAXa,CAAf;;AAcA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChC,QAAIA,KAAJ,EAAW;AACTpB,MAAAA,QAAQ,CAACjB,eAAe;AAAEmB,QAAAA,IAAI,EAAE,CAAR;AAAWJ,QAAAA,IAAI,EAAEA,IAAjB;AAAuBK,QAAAA,IAAI,EAAE;AAA7B,SAAoDiB,KAApD,EAAhB,CAAR;AACD;AACF,GAJD;;AAMA,sBACE,oBAAC,KAAD,qBACE,oBAAC,WAAD,qBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC;AAAZ,IADF,4DADF,eAIE,oBAAC,SAAD,qBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAEd,aAAa,CAACD,aAAD,CADtB;AAEE,IAAA,MAAM,EAAEQ,MAFV;AAGE,IAAA,YAAY,MAHd;AAIE,IAAA,WAAW,MAJb;AAKE,IAAA,OAAO,MALT;AAME,IAAA,kBAAkB,EAAE;AAACE,MAAAA,KAAK,EAAE,yBAAR;AAAmCM,MAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb;AAA3C,KANtB;AAOE,IAAA,YAAY,EAAEvB,IAPhB;AAQE,IAAA,KAAK,MARP;AASE,IAAA,MAAM,MATR;AAUE,IAAA,OAAO,EAAEH,YAAY,CAAC2B,OAVxB,CAWE;AAXF;AAYE,IAAA,YAAY,EAAE,sBAACC,GAAD;AAAA,aAASC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,GAAzB,CAAT;AAAA,KAZhB;AAaE,IAAA,aAAa,EAAE,uBAACA,GAAD;AAAA,aAASC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAA1B,CAAT;AAAA,KAbjB;AAcE,IAAA,kBAAkB,EAAE,4BAACA,GAAD;AAAA,aAASxB,OAAO,CAACwB,GAAD,CAAhB;AAAA,KAdtB,CAeE;AACA;AAhBF;AAiBE,IAAA,mBAAmB,EAAE,6BAACA,GAAD;AAAA,aAASC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,GAAjC,CAAT;AAAA,KAjBvB;AAkBE,IAAA,oBAAoB,EAAEJ,cAlBxB;AAmBE,IAAA,WAAW,EAAE;AACXO,MAAAA,KAAK,EAAE,eAACjB,IAAD,EAAOkB,KAAP;AAAA,4BAAiB,gCAAKA,KAAK,GAAG,CAAb,CAAjB;AAAA,OADI;AAEXC,MAAAA,IAAI,EAAE,cAACnB,IAAD;AAAA,4BACJ,6CACE,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAEnB,QAAQ,CAACmB,IAAI,CAACmB,IAAN;AAAvB,WAAqCzC,aAAa,CAACsB,IAAI,CAACmB,IAAN,CAAlD,CADF,CADI;AAAA;AAFK;AAnBf,IADF,eA6BE,oBAAC,WAAD;AACE,IAAA,UAAU,EAAEhC,UADd;AAEE,IAAA,KAAK,EAAEiC,IAAI,CAACC,KAAL,CAAWnC,YAAY,CAACoC,SAAb,GAAyBjC,IAApC,IAA4C,CAFrD;AAGE,IAAA,kBAAkB,EAAE,4BAACkC,CAAD;AAAA,aAAOnC,aAAa,CAACmC,CAAD,CAApB;AAAA;AAHtB,IA7BF,CAJF,CADF;AA0CD,CA1FD;;AA4FA,eAAexC,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {CCardBody, CBadge, CDataTable, CCard, CCardHeader, CPagination} from '@coreui/react';\n// import usersData from '../../../users/UsersData.js';\nimport CIcon from '@coreui/icons-react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getStoreHistory} from './warehouse-history.api.js';\nimport {globalizedStoreHistorySelectors, reset} from './warehouse-history.reducer.js';\nimport {useHistory} from 'react-router-dom';\n\nconst mappingStatus = {\n  EXPORT: 'XUẤT KHO',\n  IMPORT: 'NHẬP KHO',\n};\nconst getBadge = (status) => {\n  switch (status) {\n    case 'EXPORT':\n      return 'primary';\n    case 'IMPORT':\n      return 'info';\n    default:\n      return 'primary';\n  }\n};\nconst StoreHistory = () => {\n  const [] = useState([]);\n  const {initialState} = useSelector((state) => state.storeHistory);\n  const [activePage, setActivePage] = useState(1);\n  const [size, setSize] = useState(20);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(reset());\n  }, []);\n\n  useEffect(() => {\n    dispatch(getStoreHistory({page: activePage - 1, size, sort: 'createdDate,desc'}));\n  }, [activePage, size]);\n\n  const {selectAll} = globalizedStoreHistorySelectors;\n  const storeHistorys = useSelector(selectAll);\n  const computedItems = (items) => {\n    return items.map((item) => {\n      return {\n        ...item,\n        store: item.store?.name,\n        product: item.product?.name,\n      };\n    });\n  };\n\n  // Code\tTên kho\tNgười liên lạc\tNăm Sinh\tĐiện thoại\tNhân viên quản lý\tLoại kho\tPhân loại\tSửa\tTạo đơn\n  const fields = [\n    {\n      key: 'order',\n      label: 'STT',\n      _style: {width: '1%'},\n      filter: false,\n    },\n    {key: 'store', label: 'Tên kho', _style: {width: '10%'}},\n    {key: 'product', label: 'Tên sản phẩm', _style: {width: '15%'}},\n    {key: 'type', label: 'Hình thức', _style: {width: '15%'}},\n    {key: 'createdDate', label: 'Ngày tạo', _style: {width: '15%'}},\n    {key: 'quantity', label: 'Số lượng', _style: {width: '15%'}},\n  ];\n\n  const onFilterColumn = (value) => {\n    if (value) {\n      dispatch(getStoreHistory({page: 0, size: size, sort: 'createdDate,desc', ...value}));\n    }\n  };\n\n  return (\n    <CCard>\n      <CCardHeader>\n        <CIcon name=\"cil-grid\" /> Danh sách lịch sử xuất nhập kho\n      </CCardHeader>\n      <CCardBody>\n        <CDataTable\n          items={computedItems(storeHistorys)}\n          fields={fields}\n          columnFilter\n          tableFilter\n          cleaner\n          itemsPerPageSelect={{label: 'Số lượng trên một trang', values: [10, 20, 30, 50]}}\n          itemsPerPage={size}\n          hover\n          sorter\n          loading={initialState.loading}\n          // onRowClick={(item,index,col,e) => console.log(item,index,col,e)}\n          onPageChange={(val) => console.log('new page:', val)}\n          onPagesChange={(val) => console.log('new pages:', val)}\n          onPaginationChange={(val) => setSize(val)}\n          // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\n          // onSorterValueChange={(val) => console.log('new sorter value:', val)}\n          onTableFilterChange={(val) => console.log('new table filter:', val)}\n          onColumnFilterChange={onFilterColumn}\n          scopedSlots={{\n            order: (item, index) => <td>{index + 1}</td>,\n            type: (item ) => (\n              <td>\n                <CBadge color={getBadge(item.type)}>{mappingStatus[item.type]}</CBadge>\n              </td>\n            ),\n          }}\n        />\n        <CPagination\n          activePage={activePage}\n          pages={Math.floor(initialState.totalItem / size) + 1}\n          onActivePageChange={(i) => setActivePage(i)}\n        />\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default StoreHistory;\n"]}]}