{"remainingRequest":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js??ref--4-3!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js!/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/History/warehouse-history.js","dependencies":[{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/History/warehouse-history.js","mtime":1625283065826},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/source-map-loader/index.js","mtime":499162500000},{"path":"/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dmr/PrivateProject/Nodejs/MydicoCRM/frontend/src/views/pages/warehouse/History/warehouse-history.js"],"names":["React","useCallback","useEffect","useRef","useState","CCardBody","CBadge","CDataTable","CCard","CCardHeader","CPagination","_","CIcon","useDispatch","useSelector","getStoreHistory","globalizedStoreHistorySelectors","reset","useHistory","moment","CCol","CFormGroup","CInput","CLabel","mappingStatus","EXPORT","IMPORT","getBadge","status","selectAll","fields","key","label","_style","width","filter","StoreHistory","state","storeHistory","initialState","activePage","setActivePage","size","setSize","dispatch","storeHistorys","paramRef","startDate","endDate","date","setDate","params","page","sort","current","computedItems","items","map","item","volume","product","createdDate","format","debouncedSearchColumn","debounce","value","Object","keys","length","forEach","onFilterColumn","e","target","values","noResults","noItems","loading","val","order","index","type","Math","floor","totalItem","i"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { CCardBody, CBadge, CDataTable, CCard, CCardHeader, CPagination } from '@coreui/react/lib';\nimport _ from 'lodash';\nimport CIcon from '@coreui/icons-react/lib/CIcon';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getStoreHistory } from './warehouse-history.api.js';\nimport { globalizedStoreHistorySelectors, reset } from './warehouse-history.reducer.js';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport { CCol, CFormGroup, CInput, CLabel } from '@coreui/react';\nconst mappingStatus = {\n  EXPORT: 'XUẤT KHO',\n  IMPORT: 'NHẬP KHO'\n};\nconst getBadge = status => {\n  switch (status) {\n    case 'EXPORT':\n      return 'primary';\n    case 'IMPORT':\n      return 'info';\n    default:\n      return 'primary';\n  }\n};\nconst { selectAll } = globalizedStoreHistorySelectors;\n// Code\tTên kho\tNgười liên lạc\tNăm Sinh\tĐiện thoại\tNhân viên quản lý\tLoại kho\tPhân loại\tSửa\tTạo đơn\nconst fields = [\n  {\n    key: 'order',\n    label: 'STT',\n    _style: { width: '1%' },\n    filter: false\n  },\n  { key: 'storeName', label: 'Tên kho', _style: { width: '10%' } },\n  { key: 'productName', label: 'Tên sản phẩm', _style: { width: '15%' } },\n  { key: 'volume', label: 'Dung tích', _style: { width: '15%' }, filter: false },\n  { key: 'type', label: 'Hình thức', _style: { width: '15%' }, filter: false },\n  { key: 'createdDate', label: 'Ngày tạo', _style: { width: '15%' }, filter: false },\n  { key: 'quantity', label: 'Số lượng', _style: { width: '15%' }, filter: false }\n];\nconst StoreHistory = () => {\n  const [] = useState([]);\n  const { initialState } = useSelector(state => state.storeHistory);\n  const [activePage, setActivePage] = useState(1);\n  const [size, setSize] = useState(50);\n  const dispatch = useDispatch();\n  const storeHistorys = useSelector(selectAll);\n\n  const paramRef = useRef(null);\n\n  const [date, setDate] = React.useState({ startDate: null, endDate: null });\n\n  useEffect(() => {\n    if (date.endDate && date.startDate) {\n      const params = { page: activePage - 1, size, sort: 'createdDate,DESC', ...paramRef.current, ...date };\n      dispatch(getStoreHistory(params));\n    }\n  }, [date]);\n\n  useEffect(() => {\n    dispatch(reset());\n  }, []);\n\n  useEffect(() => {\n    dispatch(getStoreHistory({ page: activePage - 1, size, sort: 'createdDate,DESC', ...paramRef.current }));\n  }, [activePage, size]);\n\n  const computedItems = items => {\n    return items.map(item => {\n      return {\n        ...item,\n        volume: item.product?.volume || '',\n        createdDate: moment(item.createdDate).format('DD-MM-YYYY')\n      };\n    });\n  };\n\n  const debouncedSearchColumn = _.debounce(value => {\n    if (Object.keys(value).length > 0) {\n      Object.keys(value).forEach(key => {\n        if (!value[key]) delete value[key];\n      });\n      paramRef.current = value;\n      dispatch(getStoreHistory({ page: 0, size: size, sort: 'lastModifiedDate,DESC', ...value }));\n    }\n  }, 300);\n\n  const onFilterColumn = value => {\n    debouncedSearchColumn(value);\n  };\n\n  return (\n    <CCard>\n      <CCardHeader>\n        <CIcon name=\"cil-grid\" /> Danh sách lịch sử xuất nhập kho\n      </CCardHeader>\n      <CCardBody>\n        <CFormGroup row xs=\"12\" md=\"12\" lg=\"12\" className=\"ml-2 mt-3\">\n          <CFormGroup row>\n            <CCol>\n              <CLabel htmlFor=\"date-input\">Từ ngày</CLabel>\n            </CCol>\n            <CCol xs=\"12\" md=\"9\" lg=\"12\">\n              <CInput\n                type=\"date\"\n                id=\"date-input\"\n                onChange={e =>\n                  setDate({\n                    ...date,\n                    startDate: e.target.value\n                  })\n                }\n                name=\"date-input\"\n                placeholder=\"date\"\n              />\n            </CCol>\n          </CFormGroup>\n          <CFormGroup row className=\"ml-3\">\n            <CCol>\n              <CLabel htmlFor=\"date-input\">Đến ngày</CLabel>\n            </CCol>\n            <CCol xs=\"12\" md=\"9\" lg=\"12\">\n              <CInput\n                type=\"date\"\n                id=\"date-input\"\n                onChange={e =>\n                  setDate({\n                    ...date,\n                    endDate: e.target.value\n                  })\n                }\n                name=\"date-input\"\n                placeholder=\"date\"\n              />\n            </CCol>\n          </CFormGroup>\n        </CFormGroup>\n        <CDataTable\n          items={computedItems(storeHistorys)}\n          fields={fields}\n          columnFilter\n          itemsPerPageSelect={{ label: 'Số lượng trên một trang', values: [50, 100, 150, 200] }}\n          itemsPerPage={size}\n          hover\n          sorter\n          noItemsView={{\n            noResults: 'Không tìm thấy kết quả',\n            noItems: 'Không có dữ liệu'\n          }}\n          loading={initialState.loading}\n          onPaginationChange={val => setSize(val)}\n          onColumnFilterChange={onFilterColumn}\n          scopedSlots={{\n            order: (item, index) => <td>{(activePage - 1) * size + index + 1}</td>,\n            type: item => (\n              <td>\n                <CBadge color={getBadge(item.type)}>{mappingStatus[item.type]}</CBadge>\n              </td>\n            )\n          }}\n        />\n        <CPagination\n          activePage={activePage}\n          pages={Math.floor(initialState.totalItem / size) + 1}\n          onActivePageChange={i => setActivePage(i)}\n        />\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default StoreHistory;\n"]}]}